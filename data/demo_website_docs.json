{
  "metadata": {
    "scraping_timestamp": 1758750007.2632735,
    "start_urls": [
      "https://fastapi.tiangolo.com/"
    ],
    "total_pages": 8,
    "total_chunks": 162,
    "domains": [
      "fastapi.tiangolo.com"
    ]
  },
  "documents": [
    {
      "url": "https://fastapi.tiangolo.com/",
      "page_title": "FastAPI",
      "domain": "fastapi.tiangolo.com",
      "sections": [
        {
          "title": "FastAPI",
          "level": 1,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "FastAPI framework, high performance, easy to learn, fast to code, ready for production",
            "Documentation: https://fastapi.tiangolo.com",
            "Source Code: https://github.com/fastapi/fastapi",
            "FastAPI is a modern, fast (high-performance), web framework for building APIs with Python based on standard Python type hints.",
            "The key features are:",
            "List:\n: Very high performance, on par with  and  (thanks to Starlette and Pydantic). One of the fastest Python frameworks available.\nFast to code: Increase the speed to develop features by about 200% to 300%. *\nFewer bugs: Reduce about 40% of human (developer) induced errors. *\n: Great editor support. Completion everywhere. Less time debugging.\n: Designed to be easy to use and learn. Less time reading docs.\n: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.\n: Get production-ready code. With automatic interactive documentation.\nStandards-based: Based on (and fully compatible with) the open standards for APIs:  (previously known as Swagger) and JSON Schema.",
            "* estimation based on tests on an internal development team, building production applications."
          ],
          "section_id": 1,
          "content_text": "FastAPI framework, high performance, easy to learn, fast to code, ready for production\n\nDocumentation: https://fastapi.tiangolo.com\n\nSource Code: https://github.com/fastapi/fastapi\n\nFastAPI is a modern, fast (high-performance), web framework for building APIs with Python based on standard Python type hints.\n\nThe key features are:\n\nList:\n: Very high performance, on par with  and  (thanks to Starlette and Pydantic). One of the fastest Python frameworks available.\nFast to code: Increase the speed to develop features by about 200% to 300%. *\nFewer bugs: Reduce about 40% of human (developer) induced errors. *\n: Great editor support. Completion everywhere. Less time debugging.\n: Designed to be easy to use and learn. Less time reading docs.\n: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.\n: Get production-ready code. With automatic interactive documentation.\nStandards-based: Based on (and fully compatible with) the open standards for APIs:  (previously known as Swagger) and JSON Schema.\n\n* estimation based on tests on an internal development team, building production applications.",
          "word_count": 162
        },
        {
          "title": "Opinions",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "\"[...] I'm using  a ton these days. [...] I'm actually planning to use it for all of my team's ML services at Microsoft. Some of them are getting integrated into the core  product and some  products.\"",
            "\"We adopted the  library to spawn a  server that can be queried to obtain predictions. [for Ludwig]\"",
            "\" is pleased to announce the open-source release of our crisis management orchestration framework: ! [built with ]\"",
            "\"I’m over the moon excited about . It’s so fun!\"",
            "\"Honestly, what you've built looks super solid and polished. In many ways, it's what I wanted  to be - it's really inspiring to see someone build that.\"",
            "\"If you're looking to learn one modern framework for building REST APIs, check out  [...] It's fast, easy to use and easy to learn [...]\"",
            "\"We've switched over to  for our  [...] I think you'll like it [...]\"",
            "\"If anyone is looking to build a production Python API, I would highly recommend . It is beautifully designed, simple to use and highly scalable, it has become a key component in our API first development strategy and is driving many automations and services such as our Virtual TAC Engineer.\""
          ],
          "section_id": 2,
          "content_text": "\"[...] I'm using  a ton these days. [...] I'm actually planning to use it for all of my team's ML services at Microsoft. Some of them are getting integrated into the core  product and some  products.\"\n\n\"We adopted the  library to spawn a  server that can be queried to obtain predictions. [for Ludwig]\"\n\n\" is pleased to announce the open-source release of our crisis management orchestration framework: ! [built with ]\"\n\n\"I’m over the moon excited about . It’s so fun!\"\n\n\"Honestly, what you've built looks super solid and polished. In many ways, it's what I wanted  to be - it's really inspiring to see someone build that.\"\n\n\"If you're looking to learn one modern framework for building REST APIs, check out  [...] It's fast, easy to use and easy to learn [...]\"\n\n\"We've switched over to  for our  [...] I think you'll like it [...]\"\n\n\"If anyone is looking to build a production Python API, I would highly recommend . It is beautifully designed, simple to use and highly scalable, it has become a key component in our API first development strategy and is driving many automations and services such as our Virtual TAC Engineer.\"",
          "word_count": 196
        },
        {
          "title": ", the FastAPI of CLIs",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "If you are building a  app to be used in the terminal instead of a web API, check out .",
            "is FastAPI's little sibling. And it's intended to be the FastAPI of CLIs. ⌨️ 🚀"
          ],
          "section_id": 3,
          "content_text": "If you are building a  app to be used in the terminal instead of a web API, check out .\n\nis FastAPI's little sibling. And it's intended to be the FastAPI of CLIs. ⌨️ 🚀",
          "word_count": 35
        },
        {
          "title": "Requirements",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "FastAPI stands on the shoulders of giants:",
            "List:\nfor the web parts.\n for the data parts."
          ],
          "section_id": 4,
          "content_text": "FastAPI stands on the shoulders of giants:\n\nList:\nfor the web parts.\n for the data parts.",
          "word_count": 16
        },
        {
          "title": "Installation",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "Create and activate a virtual environment and then install FastAPI:",
            "Code example:\npipinstall\"fastapi[standard]\"",
            ": Make sure you put \"fastapi[standard]\" in quotes to ensure it works in all terminals."
          ],
          "section_id": 5,
          "content_text": "Create and activate a virtual environment and then install FastAPI:\n\nCode example:\npipinstall\"fastapi[standard]\"\n\n: Make sure you put \"fastapi[standard]\" in quotes to ensure it works in all terminals.",
          "word_count": 28
        },
        {
          "title": "Create it",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "If your code uses  / , use :",
            "If you don't know, check the \"In a hurry?\" section about  and  in the docs."
          ],
          "section_id": 6,
          "content_text": "If your code uses  / , use :\n\nIf you don't know, check the \"In a hurry?\" section about  and  in the docs.",
          "word_count": 23
        },
        {
          "title": "Run it",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "Code example:\nfastapidevmain.py\n ╭────────── FastAPI CLI - Development mode ───────────╮\n │                                                     │\n │  Serving at: http://127.0.0.1:8000                  │\n │                                                     │\n │  API docs: http://127.0.0.1:8000/docs               │\n │                                                     │\n │  Running in development mode, for production use:   │\n │                                                     │\n │  fastapi run                                        │\n │                                                     │\n ╰─────────────────────────────────────────────────────╯\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
            "The command fastapi dev reads your  file, detects the  app in it, and starts a server using .",
            "By default, fastapi dev will start with auto-reload enabled for local development.",
            "You can read more about it in the FastAPI CLI docs."
          ],
          "section_id": 7,
          "content_text": "Code example:\nfastapidevmain.py\n ╭────────── FastAPI CLI - Development mode ───────────╮\n │                                                     │\n │  Serving at: http://127.0.0.1:8000                  │\n │                                                     │\n │  API docs: http://127.0.0.1:8000/docs               │\n │                                                     │\n │  Running in development mode, for production use:   │\n │                                                     │\n │  fastapi run                                        │\n │                                                     │\n ╰─────────────────────────────────────────────────────╯\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n\nThe command fastapi dev reads your  file, detects the  app in it, and starts a server using .\n\nBy default, fastapi dev will start with auto-reload enabled for local development.\n\nYou can read more about it in the FastAPI CLI docs.",
          "word_count": 124
        },
        {
          "title": "Check it",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "Open your browser at http://127.0.0.1:8000/items/5?q=somequery.",
            "You will see the JSON response as:",
            "You already created an API that:",
            "List:\nReceives HTTP requests in the   and /items/{item_id}.\nBoth  take  operations (also known as HTTP ).\nThe  /items/{item_id} has a path parameter  that should be an .\nThe  /items/{item_id} has an optional  query parameter ."
          ],
          "section_id": 8,
          "content_text": "Open your browser at http://127.0.0.1:8000/items/5?q=somequery.\n\nYou will see the JSON response as:\n\nYou already created an API that:\n\nList:\nReceives HTTP requests in the   and /items/{item_id}.\nBoth  take  operations (also known as HTTP ).\nThe  /items/{item_id} has a path parameter  that should be an .\nThe  /items/{item_id} has an optional  query parameter .",
          "word_count": 53
        },
        {
          "title": "Interactive API docs",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "Now go to http://127.0.0.1:8000/docs.",
            "You will see the automatic interactive API documentation (provided by Swagger UI):"
          ],
          "section_id": 9,
          "content_text": "Now go to http://127.0.0.1:8000/docs.\n\nYou will see the automatic interactive API documentation (provided by Swagger UI):",
          "word_count": 16
        },
        {
          "title": "Alternative API docs",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "And now, go to http://127.0.0.1:8000/redoc.",
            "You will see the alternative automatic documentation (provided by ):"
          ],
          "section_id": 10,
          "content_text": "And now, go to http://127.0.0.1:8000/redoc.\n\nYou will see the alternative automatic documentation (provided by ):",
          "word_count": 15
        },
        {
          "title": "Example upgrade",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "Now modify the file  to receive a body from a  request.",
            "Declare the body using standard Python types, thanks to Pydantic.",
            "Code example:\nupdate_item   \n     \"item_name\"",
            "The fastapi dev server should reload automatically."
          ],
          "section_id": 11,
          "content_text": "Now modify the file  to receive a body from a  request.\n\nDeclare the body using standard Python types, thanks to Pydantic.\n\nCode example:\nupdate_item   \n     \"item_name\"\n\nThe fastapi dev server should reload automatically.",
          "word_count": 32
        },
        {
          "title": "Interactive API docs upgrade",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "Now go to http://127.0.0.1:8000/docs.",
            "List:\nThe interactive API documentation will be automatically updated, including the new body:",
            "List:\nClick on the button \"Try it out\", it allows you to fill the parameters and directly interact with the API:",
            "List:\nThen click on the \"Execute\" button, the user interface will communicate with your API, send the parameters, get the results and show them on the screen:"
          ],
          "section_id": 12,
          "content_text": "Now go to http://127.0.0.1:8000/docs.\n\nList:\nThe interactive API documentation will be automatically updated, including the new body:\n\nList:\nClick on the button \"Try it out\", it allows you to fill the parameters and directly interact with the API:\n\nList:\nThen click on the \"Execute\" button, the user interface will communicate with your API, send the parameters, get the results and show them on the screen:",
          "word_count": 65
        },
        {
          "title": "Alternative API docs upgrade",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "And now, go to http://127.0.0.1:8000/redoc.",
            "List:\nThe alternative documentation will also reflect the new query parameter and body:"
          ],
          "section_id": 13,
          "content_text": "And now, go to http://127.0.0.1:8000/redoc.\n\nList:\nThe alternative documentation will also reflect the new query parameter and body:",
          "word_count": 18
        },
        {
          "title": "Recap",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "In summary, you declare  the types of parameters, body, etc. as function parameters.",
            "You do that with standard modern Python types.",
            "You don't have to learn a new syntax, the methods or classes of a specific library, etc.",
            "For example, for an :",
            "or for a more complex  model:",
            "...and with that single declaration you get:",
            "List:\nEditor support, including:\nCompletion.\nType checks.\n\n\nValidation of data:\nAutomatic and clear errors when the data is invalid.\nValidation even for deeply nested JSON objects.\n\n\nConversion of input data: coming from the network to Python data and types. Reading from:\n\nPath parameters.\nQuery parameters.\n\n\n\n\n\n\nConversion of output data: converting from Python data and types to network data (as JSON):\nConvert Python types (, , , , , etc).\n objects.\n objects.\nDatabase models.\n...and many more.\n\n\nAutomatic interactive API documentation, including 2 alternative user interfaces:\nSwagger UI.",
            "List:\nCompletion.\nType checks.",
            "List:\nAutomatic and clear errors when the data is invalid.\nValidation even for deeply nested JSON objects.",
            "List:\nPath parameters.\nQuery parameters.",
            "List:\nConvert Python types (, , , , , etc).\n objects.\n objects.\nDatabase models.\n...and many more.",
            "Coming back to the previous code example,  will:",
            "List:\nValidate that there is an  in the path for  and  requests.\nValidate that the  is of type  for  and  requests.\nIf it is not, the client will see a useful, clear error.\n\n\nCheck if there is an optional query parameter named  (as in http://127.0.0.1:8000/items/foo?q=somequery) for  requests.\nAs the  parameter is declared with , it is optional.\nWithout the  it would be required (as is the body in the case with ).\n\n\nFor  requests to /items/{item_id}, read the body as JSON:\nCheck that it has a required attribute  that should be a .\nCheck that it has a required attribute  that has to be a .\nCheck that it has an optional attribute , that should be a , if present.\nAll this would also work for deeply nested JSON objects.\n\n\nConvert from and to JSON automatically.\nDocument everything with OpenAPI, that can be used by:\nInteractive documentation systems.\nAutomatic client code generation systems, for many languages.\n\n\nProvide 2 interactive documentation web interfaces directly.",
            "List:\nIf it is not, the client will see a useful, clear error.",
            "List:\nAs the  parameter is declared with , it is optional.\nWithout the  it would be required (as is the body in the case with ).",
            "List:\nCheck that it has a required attribute  that should be a .\nCheck that it has a required attribute  that has to be a .\nCheck that it has an optional attribute , that should be a , if present.\nAll this would also work for deeply nested JSON objects.",
            "List:\nInteractive documentation systems.\nAutomatic client code generation systems, for many languages.",
            "We just scratched the surface, but you already get the idea of how it all works.",
            "Try changing the line with:",
            "...and see how your editor will auto-complete the attributes and know their types:",
            "For a more complete example including more features, see the Tutorial - User Guide.",
            "Spoiler alert: the tutorial - user guide includes:",
            "List:\nDeclaration of parameters from other different places as: , , form fields and .\nHow to set validation constraints as maximum_length or .\nA very powerful and easy to use Dependency Injection system.\nSecurity and authentication, including support for  with JWT tokens and HTTP Basic auth.\nMore advanced (but equally easy) techniques for declaring deeply nested JSON models (thanks to Pydantic).\n integration with Strawberry and other libraries.\nMany extra features (thanks to Starlette) as:\nWebSockets\nextremely easy tests based on HTTPX and \n\nCookie Sessions\n...and more.",
            "List:\nWebSockets\nextremely easy tests based on HTTPX and \n\nCookie Sessions\n...and more."
          ],
          "section_id": 14,
          "content_text": "In summary, you declare  the types of parameters, body, etc. as function parameters.\n\nYou do that with standard modern Python types.\n\nYou don't have to learn a new syntax, the methods or classes of a specific library, etc.\n\nFor example, for an :\n\nor for a more complex  model:\n\n...and with that single declaration you get:\n\nList:\nEditor support, including:\nCompletion.\nType checks.\n\n\nValidation of data:\nAutomatic and clear errors when the data is invalid.\nValidation even for deeply nested JSON objects.\n\n\nConversion of input data: coming from the network to Python data and types. Reading from:\n\nPath parameters.\nQuery parameters.\n\n\n\n\n\n\nConversion of output data: converting from Python data and types to network data (as JSON):\nConvert Python types (, , , , , etc).\n objects.\n objects.\nDatabase models.\n...and many more.\n\n\nAutomatic interactive API documentation, including 2 alternative user interfaces:\nSwagger UI.\n\nList:\nCompletion.\nType checks.\n\nList:\nAutomatic and clear errors when the data is invalid.\nValidation even for deeply nested JSON objects.\n\nList:\nPath parameters.\nQuery parameters.\n\nList:\nConvert Python types (, , , , , etc).\n objects.\n objects.\nDatabase models.\n...and many more.\n\nComing back to the previous code example,  will:\n\nList:\nValidate that there is an  in the path for  and  requests.\nValidate that the  is of type  for  and  requests.\nIf it is not, the client will see a useful, clear error.\n\n\nCheck if there is an optional query parameter named  (as in http://127.0.0.1:8000/items/foo?q=somequery) for  requests.\nAs the  parameter is declared with , it is optional.\nWithout the  it would be required (as is the body in the case with ).\n\n\nFor  requests to /items/{item_id}, read the body as JSON:\nCheck that it has a required attribute  that should be a .\nCheck that it has a required attribute  that has to be a .\nCheck that it has an optional attribute , that should be a , if present.\nAll this would also work for deeply nested JSON objects.\n\n\nConvert from and to JSON automatically.\nDocument everything with OpenAPI, that can be used by:\nInteractive documentation systems.\nAutomatic client code generation systems, for many languages.\n\n\nProvide 2 interactive documentation web interfaces directly.\n\nList:\nIf it is not, the client will see a useful, clear error.\n\nList:\nAs the  parameter is declared with , it is optional.\nWithout the  it would be required (as is the body in the case with ).\n\nList:\nCheck that it has a required attribute  that should be a .\nCheck that it has a required attribute  that has to be a .\nCheck that it has an optional attribute , that should be a , if present.\nAll this would also work for deeply nested JSON objects.\n\nList:\nInteractive documentation systems.\nAutomatic client code generation systems, for many languages.\n\nWe just scratched the surface, but you already get the idea of how it all works.\n\nTry changing the line with:\n\n...and see how your editor will auto-complete the attributes and know their types:\n\nFor a more complete example including more features, see the Tutorial - User Guide.\n\nSpoiler alert: the tutorial - user guide includes:\n\nList:\nDeclaration of parameters from other different places as: , , form fields and .\nHow to set validation constraints as maximum_length or .\nA very powerful and easy to use Dependency Injection system.\nSecurity and authentication, including support for  with JWT tokens and HTTP Basic auth.\nMore advanced (but equally easy) techniques for declaring deeply nested JSON models (thanks to Pydantic).\n integration with Strawberry and other libraries.\nMany extra features (thanks to Starlette) as:\nWebSockets\nextremely easy tests based on HTTPX and \n\nCookie Sessions\n...and more.\n\nList:\nWebSockets\nextremely easy tests based on HTTPX and \n\nCookie Sessions\n...and more.",
          "word_count": 616
        },
        {
          "title": "Performance",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "Independent TechEmpower benchmarks show  applications running under Uvicorn as one of the fastest Python frameworks available, only below Starlette and Uvicorn themselves (used internally by FastAPI). (*)",
            "To understand more about it, see the section Benchmarks."
          ],
          "section_id": 15,
          "content_text": "Independent TechEmpower benchmarks show  applications running under Uvicorn as one of the fastest Python frameworks available, only below Starlette and Uvicorn themselves (used internally by FastAPI). (*)\n\nTo understand more about it, see the section Benchmarks.",
          "word_count": 36
        },
        {
          "title": "Dependencies",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "FastAPI depends on Pydantic and Starlette."
          ],
          "section_id": 16,
          "content_text": "FastAPI depends on Pydantic and Starlette.",
          "word_count": 6
        },
        {
          "title": "Dependencies",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "When you install FastAPI with pip install \"fastapi[standard]\" it comes with the  group of optional dependencies:",
            "List:\nemail-validator - for email validation.",
            "List:\n- Required if you want to use the TestClient.\n - Required if you want to use the default template configuration.\npython-multipart - Required if you want to support form , with request.form().",
            "List:\n- for the server that loads and serves your application. This includes uvicorn[standard], which includes some dependencies (e.g. ) needed for high performance serving.\nfastapi-cli[standard] - to provide the  command.\nThis includes fastapi-cloud-cli, which allows you to deploy your FastAPI application to FastAPI Cloud.",
            "List:\nThis includes fastapi-cloud-cli, which allows you to deploy your FastAPI application to FastAPI Cloud."
          ],
          "section_id": 17,
          "content_text": "When you install FastAPI with pip install \"fastapi[standard]\" it comes with the  group of optional dependencies:\n\nList:\nemail-validator - for email validation.\n\nList:\n- Required if you want to use the TestClient.\n - Required if you want to use the default template configuration.\npython-multipart - Required if you want to support form , with request.form().\n\nList:\n- for the server that loads and serves your application. This includes uvicorn[standard], which includes some dependencies (e.g. ) needed for high performance serving.\nfastapi-cli[standard] - to provide the  command.\nThis includes fastapi-cloud-cli, which allows you to deploy your FastAPI application to FastAPI Cloud.\n\nList:\nThis includes fastapi-cloud-cli, which allows you to deploy your FastAPI application to FastAPI Cloud.",
          "word_count": 115
        },
        {
          "title": "Without  Dependencies",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "If you don't want to include the  optional dependencies, you can install with pip install fastapi instead of pip install \"fastapi[standard]\"."
          ],
          "section_id": 18,
          "content_text": "If you don't want to include the  optional dependencies, you can install with pip install fastapi instead of pip install \"fastapi[standard]\".",
          "word_count": 21
        },
        {
          "title": "Without fastapi-cloud-cli",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "If you want to install FastAPI with the standard dependencies but without the fastapi-cloud-cli, you can install with pip install \"fastapi[standard-no-fastapi-cloud-cli]\"."
          ],
          "section_id": 19,
          "content_text": "If you want to install FastAPI with the standard dependencies but without the fastapi-cloud-cli, you can install with pip install \"fastapi[standard-no-fastapi-cloud-cli]\".",
          "word_count": 21
        },
        {
          "title": "Additional Optional Dependencies",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "There are some additional dependencies you might want to install.",
            "Additional optional Pydantic dependencies:",
            "List:\npydantic-settings - for settings management.\npydantic-extra-types - for extra types to be used with Pydantic.",
            "Additional optional FastAPI dependencies:",
            "List:\n- Required if you want to use ORJSONResponse.\n - Required if you want to use UJSONResponse."
          ],
          "section_id": 20,
          "content_text": "There are some additional dependencies you might want to install.\n\nAdditional optional Pydantic dependencies:\n\nList:\npydantic-settings - for settings management.\npydantic-extra-types - for extra types to be used with Pydantic.\n\nAdditional optional FastAPI dependencies:\n\nList:\n- Required if you want to use ORJSONResponse.\n - Required if you want to use UJSONResponse.",
          "word_count": 51
        },
        {
          "title": "License",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/",
          "content": [
            "This project is licensed under the terms of the MIT license."
          ],
          "section_id": 21,
          "content_text": "This project is licensed under the terms of the MIT license.",
          "word_count": 11
        }
      ],
      "total_sections": 21
    },
    {
      "url": "https://fastapi.tiangolo.com/newsletter/",
      "page_title": "FastAPI and friends newsletter",
      "domain": "fastapi.tiangolo.com",
      "sections": [],
      "total_sections": 0
    },
    {
      "url": "https://fastapi.tiangolo.com/az/",
      "page_title": "FastAPI",
      "domain": "fastapi.tiangolo.com",
      "sections": [
        {
          "title": "FastAPI",
          "level": 1,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "FastAPI framework, yüksək məshuldarlı, öyrənməsi asan, çevik kodlama, istifadəyə hazırdır",
            ": https://fastapi.tiangolo.com",
            "Qaynaq Kodu: https://github.com/fastapi/fastapi",
            "FastAPI Python ilə API yaratmaq üçün standart Python tip məsləhətlərinə əsaslanan, müasir, sürətli (yüksək performanslı) framework-dür.",
            "Əsas xüsusiyyətləri bunlardır:",
            "List:\n: Çox yüksək performans,  və  səviyyəsində (Starlette və Pydantic-ə təşəkkürlər). Ən sürətli Python frameworklərindən biridir.\nÇevik kodlama: Funksiyanallıqları inkişaf etdirmək sürətini təxminən 200%-dən 300%-ə qədər artırın. *\nDaha az xəta: İnsan (developer) tərəfindən törədilən səhvlərin təxminən 40% -ni azaldın. *\n: Əla redaktor dəstəyi. Hər yerdə otomatik tamamlama. Xətaları müəyyənləşdirməyə daha az vaxt sərf edəcəksiniz.\n: İstifadəsi və öyrənilməsi asan olması üçün nəzərdə tutulmuşdur. Sənədləri oxumaq üçün daha az vaxt ayıracaqsınız.\n: Kod təkrarlanmasını minimuma endirin. Hər bir parametr tərifində birdən çox xüsusiyyət ilə və daha az səhvlə qarşılaşacaqsınız.\n: Avtomatik və interaktiv sənədlərlə birlikdə istifadəyə hazır kod əldə edə bilərsiniz.\nStandartlara əsaslanan: API-lar üçün açıq standartlara əsaslanır (və tam uyğun gəlir):  (əvvəlki adı ilə Swagger) və JSON Schema.",
            "* Bu fikirlər daxili development komandasının hazırladıqları məhsulların sınaqlarına əsaslanır."
          ],
          "section_id": 1,
          "content_text": "FastAPI framework, yüksək məshuldarlı, öyrənməsi asan, çevik kodlama, istifadəyə hazırdır\n\n: https://fastapi.tiangolo.com\n\nQaynaq Kodu: https://github.com/fastapi/fastapi\n\nFastAPI Python ilə API yaratmaq üçün standart Python tip məsləhətlərinə əsaslanan, müasir, sürətli (yüksək performanslı) framework-dür.\n\nƏsas xüsusiyyətləri bunlardır:\n\nList:\n: Çox yüksək performans,  və  səviyyəsində (Starlette və Pydantic-ə təşəkkürlər). Ən sürətli Python frameworklərindən biridir.\nÇevik kodlama: Funksiyanallıqları inkişaf etdirmək sürətini təxminən 200%-dən 300%-ə qədər artırın. *\nDaha az xəta: İnsan (developer) tərəfindən törədilən səhvlərin təxminən 40% -ni azaldın. *\n: Əla redaktor dəstəyi. Hər yerdə otomatik tamamlama. Xətaları müəyyənləşdirməyə daha az vaxt sərf edəcəksiniz.\n: İstifadəsi və öyrənilməsi asan olması üçün nəzərdə tutulmuşdur. Sənədləri oxumaq üçün daha az vaxt ayıracaqsınız.\n: Kod təkrarlanmasını minimuma endirin. Hər bir parametr tərifində birdən çox xüsusiyyət ilə və daha az səhvlə qarşılaşacaqsınız.\n: Avtomatik və interaktiv sənədlərlə birlikdə istifadəyə hazır kod əldə edə bilərsiniz.\nStandartlara əsaslanan: API-lar üçün açıq standartlara əsaslanır (və tam uyğun gəlir):  (əvvəlki adı ilə Swagger) və JSON Schema.\n\n* Bu fikirlər daxili development komandasının hazırladıqları məhsulların sınaqlarına əsaslanır.",
          "word_count": 164
        },
        {
          "title": "Rəylər",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "\"[...] Son günlərdə -ı çox istifadə edirəm. [...]  Əslində onu komandamın bütün Microsoftda ML sevislərində istifadə etməyi planlayıram. Onların bəziləri -un əsas məhsuluna və bəzi  məhsullarına inteqrasiya olunurlar.\"",
            "\" kitabxanasını Proqnozlar əldə etmək üçün sorğulana bilən  serverini yaratmaqda istifadə etdik.\"",
            "\" böhran idarəçiliyi orkestrləşmə framework-nün açıq qaynaqlı buraxılışını elan etməkdən məmnundur: ! [ ilə quruldu]\"",
            "\" üçün həyəcanlıyam. Çox əyləncəlidir!\"",
            "\"Düzünü desəm, sizin qurduğunuz şey həqiqətən möhkəm və peşəkar görünür. Bir çox cəhətdən -un olmasını istədiyim kimdir - kiminsə belə bir şey qurduğunu görmək həqiqətən ruhlandırıcıdır.\"",
            "\"Əgər REST API-lər yaratmaq üçün müasir framework öyrənmək istəyirsinizsə, -a baxın [...] Sürətli, istifadəsi və öyrənməsi asandır. [...]\"",
            "\" xidmətlərimizi -a köçürdük [...] Sizin də bəyənəcəyinizi düşünürük.\"",
            "\"Python ilə istifadəyə hazır API qurmaq istəyən hər kəsə -ı tövsiyə edirəm. Möhtəşəm şəkildə dizayn edilmiş, istifadəsi asan və yüksək dərəcədə genişlənə bilən-dir, API əsaslı inkişaf strategiyamızın əsas komponentinə çevrilib və Virtual TAC Engineer kimi bir çox avtomatlaşdırma və servisləri idarə edir.\""
          ],
          "section_id": 2,
          "content_text": "\"[...] Son günlərdə -ı çox istifadə edirəm. [...]  Əslində onu komandamın bütün Microsoftda ML sevislərində istifadə etməyi planlayıram. Onların bəziləri -un əsas məhsuluna və bəzi  məhsullarına inteqrasiya olunurlar.\"\n\n\" kitabxanasını Proqnozlar əldə etmək üçün sorğulana bilən  serverini yaratmaqda istifadə etdik.\"\n\n\" böhran idarəçiliyi orkestrləşmə framework-nün açıq qaynaqlı buraxılışını elan etməkdən məmnundur: ! [ ilə quruldu]\"\n\n\" üçün həyəcanlıyam. Çox əyləncəlidir!\"\n\n\"Düzünü desəm, sizin qurduğunuz şey həqiqətən möhkəm və peşəkar görünür. Bir çox cəhətdən -un olmasını istədiyim kimdir - kiminsə belə bir şey qurduğunu görmək həqiqətən ruhlandırıcıdır.\"\n\n\"Əgər REST API-lər yaratmaq üçün müasir framework öyrənmək istəyirsinizsə, -a baxın [...] Sürətli, istifadəsi və öyrənməsi asandır. [...]\"\n\n\" xidmətlərimizi -a köçürdük [...] Sizin də bəyənəcəyinizi düşünürük.\"\n\n\"Python ilə istifadəyə hazır API qurmaq istəyən hər kəsə -ı tövsiyə edirəm. Möhtəşəm şəkildə dizayn edilmiş, istifadəsi asan və yüksək dərəcədə genişlənə bilən-dir, API əsaslı inkişaf strategiyamızın əsas komponentinə çevrilib və Virtual TAC Engineer kimi bir çox avtomatlaşdırma və servisləri idarə edir.\"",
          "word_count": 155
        },
        {
          "title": ", CLI-ların FastAPI-ı",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "Əgər siz veb API əvəzinə terminalda istifadə ediləcək  proqramı qurursunuzsa, -a baxa bilərsiniz.",
            "FastAPI-ın kiçik qardaşıdır. Və o, CLI-lərin -ı olmaq üçün nəzərdə tutulub. ⌨️ 🚀"
          ],
          "section_id": 3,
          "content_text": "Əgər siz veb API əvəzinə terminalda istifadə ediləcək  proqramı qurursunuzsa, -a baxa bilərsiniz.\n\nFastAPI-ın kiçik qardaşıdır. Və o, CLI-lərin -ı olmaq üçün nəzərdə tutulub. ⌨️ 🚀",
          "word_count": 26
        },
        {
          "title": "Tələblər",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "FastAPI nəhənglərin çiyinlərində dayanır:",
            "List:\nWeb tərəfi üçün .\nData tərəfi üçün ."
          ],
          "section_id": 4,
          "content_text": "FastAPI nəhənglərin çiyinlərində dayanır:\n\nList:\nWeb tərəfi üçün .\nData tərəfi üçün .",
          "word_count": 13
        },
        {
          "title": "Quraşdırma",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "Tətbiqimizi əlçatan etmək üçün bizə  və ya  kimi ASGI server lazımdır.",
            "Code example:\npipinstall\"uvicorn[standard]\""
          ],
          "section_id": 5,
          "content_text": "Tətbiqimizi əlçatan etmək üçün bizə  və ya  kimi ASGI server lazımdır.\n\nCode example:\npipinstall\"uvicorn[standard]\"",
          "word_count": 14
        },
        {
          "title": "Kodu yaradaq",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "List:\nadlı fayl yaradaq və ona aşağıdakı kodu yerləşdirək:",
            "Əgər kodunuzda  və ya  vardırsa  istifadə edə bilərik:",
            "Əgər bu mövzu haqqında məlumatınız yoxdursa  və  sənədindəki \"Tələsirsən?\" bölməsinə baxa bilərsiniz."
          ],
          "section_id": 6,
          "content_text": "List:\nadlı fayl yaradaq və ona aşağıdakı kodu yerləşdirək:\n\nƏgər kodunuzda  və ya  vardırsa  istifadə edə bilərik:\n\nƏgər bu mövzu haqqında məlumatınız yoxdursa  və  sənədindəki \"Tələsirsən?\" bölməsinə baxa bilərsiniz.",
          "word_count": 29
        },
        {
          "title": "Kodu işə salaq",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "Serveri aşağıdakı əmr ilə işə salaq:",
            "Code example:\nuvicornmain:app--reload\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
            "uvicorn main:app əmri aşağıdakılara instinad edir:",
            "List:\n:  faylı (yəni Python \"modulu\").\n:  faylında app = FastAPI() sətrində yaratdığımız  obyektidir.\n: kod dəyişikliyindən sonra avtomatik olaraq serveri yenidən işə salır. Bu parametrdən yalnız development mərhələsində istifadə etməliyik."
          ],
          "section_id": 7,
          "content_text": "Serveri aşağıdakı əmr ilə işə salaq:\n\nCode example:\nuvicornmain:app--reload\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n\nuvicorn main:app əmri aşağıdakılara instinad edir:\n\nList:\n:  faylı (yəni Python \"modulu\").\n:  faylında app = FastAPI() sətrində yaratdığımız  obyektidir.\n: kod dəyişikliyindən sonra avtomatik olaraq serveri yenidən işə salır. Bu parametrdən yalnız development mərhələsində istifadə etməliyik.",
          "word_count": 74
        },
        {
          "title": "İndi yoxlayaq",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "Bu linki brauzerimizdə açaq http://127.0.0.1:8000/items/5?q=somequery.",
            "Aşağıdakı kimi bir JSON cavabı görəcəksiniz:",
            "Siz artıq bir API yaratmısınız, hansı ki:",
            "List:\nvə /items/{item_id} yollarında HTTP sorğularını qəbul edir.\nHər iki   əməliyyatlarını (həmçinin HTTP  kimi bilinir) aparır.\n/items/{item_id}   adlı  qiyməti almalı olan yol parametrinə sahibdir.\n/items/{item_id}   adlı yol parametri var və bu parametr istəyə bağlı olsa da,  qiymətini almalıdır."
          ],
          "section_id": 8,
          "content_text": "Bu linki brauzerimizdə açaq http://127.0.0.1:8000/items/5?q=somequery.\n\nAşağıdakı kimi bir JSON cavabı görəcəksiniz:\n\nSiz artıq bir API yaratmısınız, hansı ki:\n\nList:\nvə /items/{item_id} yollarında HTTP sorğularını qəbul edir.\nHər iki   əməliyyatlarını (həmçinin HTTP  kimi bilinir) aparır.\n/items/{item_id}   adlı  qiyməti almalı olan yol parametrinə sahibdir.\n/items/{item_id}   adlı yol parametri var və bu parametr istəyə bağlı olsa da,  qiymətini almalıdır.",
          "word_count": 56
        },
        {
          "title": "İnteraktiv API Sənədləri",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "İndi http://127.0.0.1:8000/docs ünvanına daxil olun.",
            "Avtomatik interaktiv API sənədlərini görəcəksiniz (Swagger UI tərəfindən təmin edilir):"
          ],
          "section_id": 9,
          "content_text": "İndi http://127.0.0.1:8000/docs ünvanına daxil olun.\n\nAvtomatik interaktiv API sənədlərini görəcəksiniz (Swagger UI tərəfindən təmin edilir):",
          "word_count": 15
        },
        {
          "title": "Alternativ API sənədləri",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "İndi isə http://127.0.0.1:8000/redoc ünvanına daxil olun.",
            "tərəfindən təqdim edilən avtomatik sənədləri görəcəksiniz:"
          ],
          "section_id": 10,
          "content_text": "İndi isə http://127.0.0.1:8000/redoc ünvanına daxil olun.\n\ntərəfindən təqdim edilən avtomatik sənədləri görəcəksiniz:",
          "word_count": 12
        },
        {
          "title": "Nümunəni Yeniləyək",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "İndi gəlin  faylını  sorğusu ilə birlikdə  qəbul edəcək şəkildə dəyişdirək.",
            "Pydantic sayəsində standart Python tiplərindən istifadə edərək ni müəyyən edək.",
            "update_item   \n     \"item_name\"   \n\nServer avtomatik olaraq yenidən işə salınmalı idi (çünki biz yuxarıda  əmri ilə  parametrindən istifadə etmişik).",
            "Code example:\nupdate_item   \n     \"item_name\""
          ],
          "section_id": 11,
          "content_text": "İndi gəlin  faylını  sorğusu ilə birlikdə  qəbul edəcək şəkildə dəyişdirək.\n\nPydantic sayəsində standart Python tiplərindən istifadə edərək ni müəyyən edək.\n\nupdate_item   \n     \"item_name\"   \n\nServer avtomatik olaraq yenidən işə salınmalı idi (çünki biz yuxarıda  əmri ilə  parametrindən istifadə etmişik).\n\nCode example:\nupdate_item   \n     \"item_name\"",
          "word_count": 41
        },
        {
          "title": "İnteraktiv API sənədlərindəki dəyişikliyə baxaq",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "Yenidən http://127.0.0.1:8000/docs ünvanına daxil olun.",
            "List:\nİnteraktiv API sənədləri yeni gövdə də daxil olmaq ilə avtomatik olaraq yenilənəcək:",
            "List:\n\"Try it out\" düyməsini klikləyin, bu, parametrləri doldurmağa və API ilə birbaşa əlaqə saxlamağa imkan verir:",
            "List:\nSonra \"Execute\" düyməsini klikləyin, istifadəçi interfeysi API ilə əlaqə quracaq, parametrləri göndərəcək, nəticələri əldə edəcək və onları ekranda göstərəcək:"
          ],
          "section_id": 12,
          "content_text": "Yenidən http://127.0.0.1:8000/docs ünvanına daxil olun.\n\nList:\nİnteraktiv API sənədləri yeni gövdə də daxil olmaq ilə avtomatik olaraq yenilənəcək:\n\nList:\n\"Try it out\" düyməsini klikləyin, bu, parametrləri doldurmağa və API ilə birbaşa əlaqə saxlamağa imkan verir:\n\nList:\nSonra \"Execute\" düyməsini klikləyin, istifadəçi interfeysi API ilə əlaqə quracaq, parametrləri göndərəcək, nəticələri əldə edəcək və onları ekranda göstərəcək:",
          "word_count": 55
        },
        {
          "title": "Alternativ API Sənədlərindəki Dəyişikliyə Baxaq",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "İndi isə yenidən http://127.0.0.1:8000/redoc ünvanına daxil olun.",
            "List:\nAlternativ sənədlər həm də yeni sorğu parametri və gövdəsini əks etdirəcək:"
          ],
          "section_id": 13,
          "content_text": "İndi isə yenidən http://127.0.0.1:8000/redoc ünvanına daxil olun.\n\nList:\nAlternativ sənədlər həm də yeni sorğu parametri və gövdəsini əks etdirəcək:",
          "word_count": 19
        },
        {
          "title": "Xülasə",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "Ümumiləşdirsək, parametrlər, gövdə və s. Biz məlumat növlərini  funksiya parametrləri kimi təyin edirik.",
            "Bunu standart müasir Python tipləri ilə edirsiniz.",
            "Yeni sintaksis, müəyyən bir kitabxananın metodlarını və ya siniflərini və s. öyrənmək məcburiyyətində deyilsiniz.",
            "və ya daha mürəkkəb  modeli üçün:",
            "...və yalnız parametr tipini təyin etməklə bunları əldə edirsiniz:",
            "List:\nRedaktor dəstəyi ilə:\nAvtomatik tamamlama.\nTip yoxlanması.\n\n\nMəlumatların Təsdiqlənməsi:\nMəlumat etibarsız olduqda avtomatik olaraq aydın xətalar göstərir.\nHətta çox dərin JSON obyektlərində belə doğrulama aparır.\n\n\nDaxil olan məlumatları  üçün aşağıdakı məlumat növlərindən istifadə edilir:\n\n parametrləri.\n parametrləri.\n.\n.\n.\n\n\n\nDaxil olan məlumatları  üçün aşağıdakı məlumat növlərindən istifadə edilir (JSON olaraq):\nPython tiplərinin (, , , , , və s) çevrilməsi.\n obyektləri.\n obyektləri.\nVerilənlər bazası modelləri.\nvə daha çoxu...\n\n\n2 alternativ istifadəçi interfeysi daxil olmaqla avtomatik interaktiv API sənədlərini təmin edir:\nSwagger UI.",
            "List:\nAvtomatik tamamlama.\nTip yoxlanması.",
            "List:\nMəlumat etibarsız olduqda avtomatik olaraq aydın xətalar göstərir.\nHətta çox dərin JSON obyektlərində belə doğrulama aparır.",
            "List:\nparametrləri.\n parametrləri.\n.\n.\n.",
            "List:\nPython tiplərinin (, , , , , və s) çevrilməsi.\n obyektləri.\n obyektləri.\nVerilənlər bazası modelləri.\nvə daha çoxu...",
            "Gəlin əvvəlki nümunəyə qayıdaq və -nin nələr edəcəyinə nəzər salaq:",
            "List:\nvə  sorğuları üçün -nin  olub-olmadığını yoxlayacaq.\n-nin  və  sorğuları üçün növünün  olduğunu yoxlayacaq.\nƏgər  deyilsə, səbəbini göstərən bir xəta mesajı göstərəcəkdir.\n\n\nməcburi olmayan  parametrinin  (http://127.0.0.1:8000/items/foo?q=somequery burdakı kimi) sorğusu içərisində olub olmadığını yoxlayacaq.\n parametrini  ilə yaratdığımız üçün, məcburi olmayan parametr olacaq.\nƏgər  olmasaydı, bu məcburi parametr olardı ( metodunun gövdəsində olduğu kimi).\n\n\n sorğusu üçün, /items/{item_id} gövdəsini JSON olaraq oxuyacaq:\n adında məcburi bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\n adında məcburi bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\n adında məcburi olmayan bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\nBütün bunlar ən dərin JSON obyektlərində belə işləyəcək.\n\n\nMəlumatların JSON-a və JSON-un Python obyektinə çevrilməsi avtomatik həyata keçiriləcək.\nHər şeyi OpenAPI ilə uyğun olacaq şəkildə avtomatik olaraq sənədləşdirəcək və onları aşağıdakı kimi istifadə edə biləcək:\nİnteraktiv sənədləşmə sistemləri.\nBir çox proqramlaşdırma dilləri üçün avtomatlaşdırılmış  kodu yaratma sistemləri.\n\n\n2 interaktiv sənədləşmə veb interfeysini birbaşa təmin edəcək.",
            "List:\nƏgər  deyilsə, səbəbini göstərən bir xəta mesajı göstərəcəkdir.",
            "List:\nparametrini  ilə yaratdığımız üçün, məcburi olmayan parametr olacaq.\nƏgər  olmasaydı, bu məcburi parametr olardı ( metodunun gövdəsində olduğu kimi).",
            "List:\nadında məcburi bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\n adında məcburi bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\n adında məcburi olmayan bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\nBütün bunlar ən dərin JSON obyektlərində belə işləyəcək.",
            "List:\nİnteraktiv sənədləşmə sistemləri.\nBir çox proqramlaşdırma dilləri üçün avtomatlaşdırılmış  kodu yaratma sistemləri.",
            "Yeni başlamışıq, amma siz artıq işin məntiqini başa düşmüsünüz.",
            "İndi aşağıdakı sətri dəyişdirməyə çalışın:",
            "...və redaktorun məlumat tiplərini bildiyini və avtomatik tamaladığını görəcəksiniz:",
            "Daha çox funksiyaya malik daha dolğun nümunə üçün Öyrədici - İstifadəçi Təlimatı səhifəsinə baxa bilərsiniz.",
            "Spoiler xəbərdarlığı: Öyrədici - istifadəçi təlimatına bunlar daxildir:",
            "List:\nParametrlərin, , , forma sahələri və  olaraq müəyyən edilməsi.\nmaximum_length və ya  kimi doğrulama məhdudiyyətlərinin necə təyin ediləcəyi.\nÇox güclü və istifadəsi asan Dependency Injection sistemi.\nTəhlükəsizlik və autentifikasiya, JWT tokenləri ilə  dəstəyi və HTTP Basic autentifikasiyası.\nçox dərin JSON modellərini müəyyən etmək üçün daha irəli səviyyə (lakin eyni dərəcədə asan) üsullar (Pydantic sayəsində).\nStrawberry və digər kitabxanalar ilə  inteqrasiyası.\nDigər əlavə xüsusiyyətlər (Starlette sayəsində):\nWebSockets\nHTTPX və  sayəsində çox asan testlər\n\nCookie Sessions\n...və daha çoxu.",
            "List:\nWebSockets\nHTTPX və  sayəsində çox asan testlər\n\nCookie Sessions\n...və daha çoxu."
          ],
          "section_id": 14,
          "content_text": "Ümumiləşdirsək, parametrlər, gövdə və s. Biz məlumat növlərini  funksiya parametrləri kimi təyin edirik.\n\nBunu standart müasir Python tipləri ilə edirsiniz.\n\nYeni sintaksis, müəyyən bir kitabxananın metodlarını və ya siniflərini və s. öyrənmək məcburiyyətində deyilsiniz.\n\nvə ya daha mürəkkəb  modeli üçün:\n\n...və yalnız parametr tipini təyin etməklə bunları əldə edirsiniz:\n\nList:\nRedaktor dəstəyi ilə:\nAvtomatik tamamlama.\nTip yoxlanması.\n\n\nMəlumatların Təsdiqlənməsi:\nMəlumat etibarsız olduqda avtomatik olaraq aydın xətalar göstərir.\nHətta çox dərin JSON obyektlərində belə doğrulama aparır.\n\n\nDaxil olan məlumatları  üçün aşağıdakı məlumat növlərindən istifadə edilir:\n\n parametrləri.\n parametrləri.\n.\n.\n.\n\n\n\nDaxil olan məlumatları  üçün aşağıdakı məlumat növlərindən istifadə edilir (JSON olaraq):\nPython tiplərinin (, , , , , və s) çevrilməsi.\n obyektləri.\n obyektləri.\nVerilənlər bazası modelləri.\nvə daha çoxu...\n\n\n2 alternativ istifadəçi interfeysi daxil olmaqla avtomatik interaktiv API sənədlərini təmin edir:\nSwagger UI.\n\nList:\nAvtomatik tamamlama.\nTip yoxlanması.\n\nList:\nMəlumat etibarsız olduqda avtomatik olaraq aydın xətalar göstərir.\nHətta çox dərin JSON obyektlərində belə doğrulama aparır.\n\nList:\nparametrləri.\n parametrləri.\n.\n.\n.\n\nList:\nPython tiplərinin (, , , , , və s) çevrilməsi.\n obyektləri.\n obyektləri.\nVerilənlər bazası modelləri.\nvə daha çoxu...\n\nGəlin əvvəlki nümunəyə qayıdaq və -nin nələr edəcəyinə nəzər salaq:\n\nList:\nvə  sorğuları üçün -nin  olub-olmadığını yoxlayacaq.\n-nin  və  sorğuları üçün növünün  olduğunu yoxlayacaq.\nƏgər  deyilsə, səbəbini göstərən bir xəta mesajı göstərəcəkdir.\n\n\nməcburi olmayan  parametrinin  (http://127.0.0.1:8000/items/foo?q=somequery burdakı kimi) sorğusu içərisində olub olmadığını yoxlayacaq.\n parametrini  ilə yaratdığımız üçün, məcburi olmayan parametr olacaq.\nƏgər  olmasaydı, bu məcburi parametr olardı ( metodunun gövdəsində olduğu kimi).\n\n\n sorğusu üçün, /items/{item_id} gövdəsini JSON olaraq oxuyacaq:\n adında məcburi bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\n adında məcburi bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\n adında məcburi olmayan bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\nBütün bunlar ən dərin JSON obyektlərində belə işləyəcək.\n\n\nMəlumatların JSON-a və JSON-un Python obyektinə çevrilməsi avtomatik həyata keçiriləcək.\nHər şeyi OpenAPI ilə uyğun olacaq şəkildə avtomatik olaraq sənədləşdirəcək və onları aşağıdakı kimi istifadə edə biləcək:\nİnteraktiv sənədləşmə sistemləri.\nBir çox proqramlaşdırma dilləri üçün avtomatlaşdırılmış  kodu yaratma sistemləri.\n\n\n2 interaktiv sənədləşmə veb interfeysini birbaşa təmin edəcək.\n\nList:\nƏgər  deyilsə, səbəbini göstərən bir xəta mesajı göstərəcəkdir.\n\nList:\nparametrini  ilə yaratdığımız üçün, məcburi olmayan parametr olacaq.\nƏgər  olmasaydı, bu məcburi parametr olardı ( metodunun gövdəsində olduğu kimi).\n\nList:\nadında məcburi bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\n adında məcburi bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\n adında məcburi olmayan bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\nBütün bunlar ən dərin JSON obyektlərində belə işləyəcək.\n\nList:\nİnteraktiv sənədləşmə sistemləri.\nBir çox proqramlaşdırma dilləri üçün avtomatlaşdırılmış  kodu yaratma sistemləri.\n\nYeni başlamışıq, amma siz artıq işin məntiqini başa düşmüsünüz.\n\nİndi aşağıdakı sətri dəyişdirməyə çalışın:\n\n...və redaktorun məlumat tiplərini bildiyini və avtomatik tamaladığını görəcəksiniz:\n\nDaha çox funksiyaya malik daha dolğun nümunə üçün Öyrədici - İstifadəçi Təlimatı səhifəsinə baxa bilərsiniz.\n\nSpoiler xəbərdarlığı: Öyrədici - istifadəçi təlimatına bunlar daxildir:\n\nList:\nParametrlərin, , , forma sahələri və  olaraq müəyyən edilməsi.\nmaximum_length və ya  kimi doğrulama məhdudiyyətlərinin necə təyin ediləcəyi.\nÇox güclü və istifadəsi asan Dependency Injection sistemi.\nTəhlükəsizlik və autentifikasiya, JWT tokenləri ilə  dəstəyi və HTTP Basic autentifikasiyası.\nçox dərin JSON modellərini müəyyən etmək üçün daha irəli səviyyə (lakin eyni dərəcədə asan) üsullar (Pydantic sayəsində).\nStrawberry və digər kitabxanalar ilə  inteqrasiyası.\nDigər əlavə xüsusiyyətlər (Starlette sayəsində):\nWebSockets\nHTTPX və  sayəsində çox asan testlər\n\nCookie Sessions\n...və daha çoxu.\n\nList:\nWebSockets\nHTTPX və  sayəsində çox asan testlər\n\nCookie Sessions\n...və daha çoxu.",
          "word_count": 571
        },
        {
          "title": "Performans",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "Müstəqil TechEmpower meyarları göstərir ki, Uvicorn üzərində işləyən  proqramları ən sürətli Python kitabxanalarından biridir, yalnız Starlette və Uvicorn-un özündən yavaşdır, ki FastAPI bunların üzərinə qurulmuş bir framework-dür. (*)",
            "Ətraflı məlumat üçün bu bölməyə nəzər salın Müqayisələr."
          ],
          "section_id": 15,
          "content_text": "Müstəqil TechEmpower meyarları göstərir ki, Uvicorn üzərində işləyən  proqramları ən sürətli Python kitabxanalarından biridir, yalnız Starlette və Uvicorn-un özündən yavaşdır, ki FastAPI bunların üzərinə qurulmuş bir framework-dür. (*)\n\nƏtraflı məlumat üçün bu bölməyə nəzər salın Müqayisələr.",
          "word_count": 36
        },
        {
          "title": "Məcburi Olmayan Tələblər",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "Pydantic tərəfindən istifadə olunanlar:",
            "List:\nemail-validator - e-poçtun yoxlanılması üçün.\npydantic-settings - parametrlərin idarə edilməsi üçün.\npydantic-extra-types - Pydantic ilə istifadə edilə bilən əlavə tiplər üçün.",
            "Starlette tərəfindən istifadə olunanlar:",
            "List:\n- Əgər TestClient strukturundan istifadə edəcəksinizsə, tələb olunur.\n - Standart  konfiqurasiyasından istifadə etmək istəyirsinizsə, tələb olunur.\npython-multipart - request.form() ilə forma  dəstəyindən istifadə etmək istəyirsinizsə, tələb olunur.\nitsdangerous - SessionMiddleware dəstəyi üçün tələb olunur.\n - SchemaGenerator dəstəyi üçün tələb olunur (Çox güman ki, FastAPI istifadə edərkən buna ehtiyacınız olmayacaq).\n - UJSONResponse istifadə etmək istəyirsinizsə, tələb olunur.",
            "Həm FastAPI, həm də Starlette tərəfindən istifadə olunur:",
            "List:\n- Yaratdığımız proqramı servis edəcək veb server kimi fəaliyyət göstərir.\n - ORJSONResponse istifadə edəcəksinizsə tələb olunur.",
            "Bütün bunları pip install fastapi[all] ilə quraşdıra bilərsiniz."
          ],
          "section_id": 16,
          "content_text": "Pydantic tərəfindən istifadə olunanlar:\n\nList:\nemail-validator - e-poçtun yoxlanılması üçün.\npydantic-settings - parametrlərin idarə edilməsi üçün.\npydantic-extra-types - Pydantic ilə istifadə edilə bilən əlavə tiplər üçün.\n\nStarlette tərəfindən istifadə olunanlar:\n\nList:\n- Əgər TestClient strukturundan istifadə edəcəksinizsə, tələb olunur.\n - Standart  konfiqurasiyasından istifadə etmək istəyirsinizsə, tələb olunur.\npython-multipart - request.form() ilə forma  dəstəyindən istifadə etmək istəyirsinizsə, tələb olunur.\nitsdangerous - SessionMiddleware dəstəyi üçün tələb olunur.\n - SchemaGenerator dəstəyi üçün tələb olunur (Çox güman ki, FastAPI istifadə edərkən buna ehtiyacınız olmayacaq).\n - UJSONResponse istifadə etmək istəyirsinizsə, tələb olunur.\n\nHəm FastAPI, həm də Starlette tərəfindən istifadə olunur:\n\nList:\n- Yaratdığımız proqramı servis edəcək veb server kimi fəaliyyət göstərir.\n - ORJSONResponse istifadə edəcəksinizsə tələb olunur.\n\nBütün bunları pip install fastapi[all] ilə quraşdıra bilərsiniz.",
          "word_count": 120
        },
        {
          "title": "Lisenziya",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/az/",
          "content": [
            "Bu layihə MIT lisenziyasının şərtlərinə əsasən lisenziyalaşdırılıb."
          ],
          "section_id": 17,
          "content_text": "Bu layihə MIT lisenziyasının şərtlərinə əsasən lisenziyalaşdırılıb.",
          "word_count": 7
        }
      ],
      "total_sections": 17
    },
    {
      "url": "https://fastapi.tiangolo.com/bn/",
      "page_title": "FastAPI",
      "domain": "fastapi.tiangolo.com",
      "sections": [
        {
          "title": "FastAPI",
          "level": 1,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "FastAPI উচ্চক্ষমতা সম্পন্ন, সহজে শেখার এবং দ্রুত কোড করে প্রোডাকশনের জন্য ফ্রামওয়ার্ক।",
            "নির্দেশিকা নথি: https://fastapi.tiangolo.com",
            ": https://github.com/fastapi/fastapi",
            "FastAPI একটি আধুনিক, দ্রুত ( বেশি ক্ষমতা ) সম্পন্ন, Python 3.6+ দিয়ে API তৈরির জন্য স্ট্যান্ডার্ড পাইথন টাইপ ইঙ্গিত ভিত্তিক ওয়েব ফ্রেমওয়ার্ক।",
            "এর মূল বৈশিষ্ট্য গুলো হলঃ",
            "List:\n: এটি  এবং  এর মত কার্যক্ষমতা সম্পন্ন (Starlette এবং Pydantic এর সাহায্যে)। পাইথন এর দ্রুততম ফ্রেমওয়ার্ক গুলোর মধ্যে এটি একটি।\nদ্রুত কোড করা:বৈশিষ্ট্য তৈরির গতি ২০০% থেকে ৩০০% বৃদ্ধি করে৷ *\nস্বল্প bugs: মানুব (ডেভেলপার) সৃষ্ট ত্রুটির প্রায় ৪০% হ্রাস করে। *\n\n: দুর্দান্ত এডিটর সাহায্য Completion নামেও পরিচিত। দ্রুত ডিবাগ করা যায়।\n\n\n: এটি এমন ভাবে সজানো হয়েছে যেন নির্দেশিকা নথি পড়ে সহজে শেখা এবং ব্যবহার করা যায়।\n\n: কোড পুনরাবৃত্তি কমানোর পাশাপাশি, bug কমায় এবং প্রতিটি প্যারামিটার ঘোষণা থেকে একাধিক ফিচার পাওয়া যায় ।\n: স্বয়ংক্রিয় ভাবে তৈরি ক্রিয়াশীল নির্দেশনা নথি (documentation) সহ উৎপাদন উপযোগি (Production-ready) কোড পাওয়া যায়।\nমান-ভিত্তিক: এর ভিত্তি  (যা পুর্বে Swagger নামে পরিচিত ছিল) এবং JSON Schema এর আদর্শের মানের ওপর",
            ": দুর্দান্ত এডিটর সাহায্য Completion নামেও পরিচিত। দ্রুত ডিবাগ করা যায়।",
            ": এটি এমন ভাবে সজানো হয়েছে যেন নির্দেশিকা নথি পড়ে সহজে শেখা এবং ব্যবহার করা যায়।",
            "* উৎপাদনমুখি এপ্লিকেশন বানানোর এক দল ডেভেলপার এর মতামত ভিত্তিক ফলাফল।"
          ],
          "section_id": 1,
          "content_text": "FastAPI উচ্চক্ষমতা সম্পন্ন, সহজে শেখার এবং দ্রুত কোড করে প্রোডাকশনের জন্য ফ্রামওয়ার্ক।\n\nনির্দেশিকা নথি: https://fastapi.tiangolo.com\n\n: https://github.com/fastapi/fastapi\n\nFastAPI একটি আধুনিক, দ্রুত ( বেশি ক্ষমতা ) সম্পন্ন, Python 3.6+ দিয়ে API তৈরির জন্য স্ট্যান্ডার্ড পাইথন টাইপ ইঙ্গিত ভিত্তিক ওয়েব ফ্রেমওয়ার্ক।\n\nএর মূল বৈশিষ্ট্য গুলো হলঃ\n\nList:\n: এটি  এবং  এর মত কার্যক্ষমতা সম্পন্ন (Starlette এবং Pydantic এর সাহায্যে)। পাইথন এর দ্রুততম ফ্রেমওয়ার্ক গুলোর মধ্যে এটি একটি।\nদ্রুত কোড করা:বৈশিষ্ট্য তৈরির গতি ২০০% থেকে ৩০০% বৃদ্ধি করে৷ *\nস্বল্প bugs: মানুব (ডেভেলপার) সৃষ্ট ত্রুটির প্রায় ৪০% হ্রাস করে। *\n\n: দুর্দান্ত এডিটর সাহায্য Completion নামেও পরিচিত। দ্রুত ডিবাগ করা যায়।\n\n\n: এটি এমন ভাবে সজানো হয়েছে যেন নির্দেশিকা নথি পড়ে সহজে শেখা এবং ব্যবহার করা যায়।\n\n: কোড পুনরাবৃত্তি কমানোর পাশাপাশি, bug কমায় এবং প্রতিটি প্যারামিটার ঘোষণা থেকে একাধিক ফিচার পাওয়া যায় ।\n: স্বয়ংক্রিয় ভাবে তৈরি ক্রিয়াশীল নির্দেশনা নথি (documentation) সহ উৎপাদন উপযোগি (Production-ready) কোড পাওয়া যায়।\nমান-ভিত্তিক: এর ভিত্তি  (যা পুর্বে Swagger নামে পরিচিত ছিল) এবং JSON Schema এর আদর্শের মানের ওপর\n\n: দুর্দান্ত এডিটর সাহায্য Completion নামেও পরিচিত। দ্রুত ডিবাগ করা যায়।\n\n: এটি এমন ভাবে সজানো হয়েছে যেন নির্দেশিকা নথি পড়ে সহজে শেখা এবং ব্যবহার করা যায়।\n\n* উৎপাদনমুখি এপ্লিকেশন বানানোর এক দল ডেভেলপার এর মতামত ভিত্তিক ফলাফল।",
          "word_count": 200
        },
        {
          "title": "মতামত সমূহ",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "\"আমি আজকাল  ব্যবহার করছি। [...] আমরা ভাবছি মাইক্রোসফ্টে ML সার্ভিস এ সকল দলের জন্য এটি ব্যবহার করব। যার মধ্যে কিছু পণ্য  এ সংযোযন হয় এবং কিছু  এর সাথে সংযোযন হচ্ছে।\"",
            "\"আমরা  লাইব্রেরি গ্রহণ করেছি একটি  সার্ভার তৈরি করতে, যা ভবিষ্যদ্বাণী পাওয়ার জন্য কুয়েরি করা যেতে পারে। [লুডউইগের জন্য]\"",
            "\" আমাদের ক্রাইসিস ম্যানেজমেন্ট অর্কেস্ট্রেশন ফ্রেমওয়ার্ক:  এর ওপেন সোর্স রিলিজ ঘোষণা করতে পেরে আনন্দিত! [যাকিনা  দিয়ে নির্মিত]\"",
            "\"আমি  নিয়ে চাঁদের সমান উৎসাহিত। এটি খুবই মজার!\"",
            "\"_সত্যিই, আপনি যা তৈরি করেছেন তা খুব মজবুত এবং পরিপূর্ন৷ অনেক উপায়ে, আমি যা  এ করতে চেয়েছিলাম - তা কাউকে তৈরি করতে দেখে আমি সত্যিই অনুপ্রানিত৷_\"",
            "\"আপনি যদি REST API তৈরির জন্য একটি আধুনিক ফ্রেমওয়ার্ক শিখতে চান, তাহলে  দেখুন [...] এটি দ্রুত, ব্যবহার করা সহজ এবং শিখতেও সহজ [...]_\"",
            "\"আমরা আমাদের  [...] এর জন্য - তে এসেছি [...] আমি মনে করি আপনিও এটি পছন্দ করবেন [...]\""
          ],
          "section_id": 2,
          "content_text": "\"আমি আজকাল  ব্যবহার করছি। [...] আমরা ভাবছি মাইক্রোসফ্টে ML সার্ভিস এ সকল দলের জন্য এটি ব্যবহার করব। যার মধ্যে কিছু পণ্য  এ সংযোযন হয় এবং কিছু  এর সাথে সংযোযন হচ্ছে।\"\n\n\"আমরা  লাইব্রেরি গ্রহণ করেছি একটি  সার্ভার তৈরি করতে, যা ভবিষ্যদ্বাণী পাওয়ার জন্য কুয়েরি করা যেতে পারে। [লুডউইগের জন্য]\"\n\n\" আমাদের ক্রাইসিস ম্যানেজমেন্ট অর্কেস্ট্রেশন ফ্রেমওয়ার্ক:  এর ওপেন সোর্স রিলিজ ঘোষণা করতে পেরে আনন্দিত! [যাকিনা  দিয়ে নির্মিত]\"\n\n\"আমি  নিয়ে চাঁদের সমান উৎসাহিত। এটি খুবই মজার!\"\n\n\"_সত্যিই, আপনি যা তৈরি করেছেন তা খুব মজবুত এবং পরিপূর্ন৷ অনেক উপায়ে, আমি যা  এ করতে চেয়েছিলাম - তা কাউকে তৈরি করতে দেখে আমি সত্যিই অনুপ্রানিত৷_\"\n\n\"আপনি যদি REST API তৈরির জন্য একটি আধুনিক ফ্রেমওয়ার্ক শিখতে চান, তাহলে  দেখুন [...] এটি দ্রুত, ব্যবহার করা সহজ এবং শিখতেও সহজ [...]_\"\n\n\"আমরা আমাদের  [...] এর জন্য - তে এসেছি [...] আমি মনে করি আপনিও এটি পছন্দ করবেন [...]\"",
          "word_count": 139
        },
        {
          "title": ", CLI এর জন্য FastAPI",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "আপনি যদি  অ্যাপ বানাতে চান, যা কিনা ওয়েব API এর পরিবর্তে টার্মিনালে ব্যবহার হবে, তাহলে দেখুন.",
            "হল FastAPI এর ছোট ভাইয়ের মত। এবং এটির উদ্দেশ্য ছিল CLIs এর FastAPI হওয়া। ⌨️ 🚀"
          ],
          "section_id": 3,
          "content_text": "আপনি যদি  অ্যাপ বানাতে চান, যা কিনা ওয়েব API এর পরিবর্তে টার্মিনালে ব্যবহার হবে, তাহলে দেখুন.\n\nহল FastAPI এর ছোট ভাইয়ের মত। এবং এটির উদ্দেশ্য ছিল CLIs এর FastAPI হওয়া। ⌨️ 🚀",
          "word_count": 32
        },
        {
          "title": "প্রয়োজনীয়তা গুলো",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "FastAPI কিছু দানবেদের কাঁধে দাঁড়িয়ে আছে:",
            "List:\nওয়েব অংশের জন্য.\n ডেটা অংশগুলির জন্য."
          ],
          "section_id": 4,
          "content_text": "FastAPI কিছু দানবেদের কাঁধে দাঁড়িয়ে আছে:\n\nList:\nওয়েব অংশের জন্য.\n ডেটা অংশগুলির জন্য.",
          "word_count": 13
        },
        {
          "title": "ইনস্টলেশন প্রক্রিয়া",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "আপনার একটি ASGI সার্ভারেরও প্রয়োজন হবে, প্রোডাকশনের জন্য  অথবা .",
            "Code example:\npipinstall\"uvicorn[standard]\""
          ],
          "section_id": 5,
          "content_text": "আপনার একটি ASGI সার্ভারেরও প্রয়োজন হবে, প্রোডাকশনের জন্য  অথবা .\n\nCode example:\npipinstall\"uvicorn[standard]\"",
          "word_count": 13
        },
        {
          "title": "তৈরি",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "List:\nনামে একটি ফাইল তৈরি করুন:",
            "যদি আপনার কোড  / , ব্যবহার করে তাহলে  ব্যবহার করুন:",
            "আপনি যদি না জানেন, \"তাড়াহুড়ো?\" বিভাগটি দেখুন  এবং  নথির মধ্যে দেখুন ."
          ],
          "section_id": 6,
          "content_text": "List:\nনামে একটি ফাইল তৈরি করুন:\n\nযদি আপনার কোড  / , ব্যবহার করে তাহলে  ব্যবহার করুন:\n\nআপনি যদি না জানেন, \"তাড়াহুড়ো?\" বিভাগটি দেখুন  এবং  নথির মধ্যে দেখুন .",
          "word_count": 28
        },
        {
          "title": "এটি চালান",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "Code example:\nuvicornmain:app--reload\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
            "uvicorn main:app নির্দেশনাটি দ্বারা বোঝায়:",
            "List:\n: ফাইল  (পাইথন \"মডিউল\")।\n: app = FastAPI() লাইন দিয়ে  এর ভিতরে তৈরি করা অবজেক্ট।\n: কোড পরিবর্তনের পরে সার্ভার পুনরায় চালু করুন। এটি শুধুমাত্র ডেভেলপমেন্ট এর সময় ব্যবহার করুন।"
          ],
          "section_id": 7,
          "content_text": "Code example:\nuvicornmain:app--reload\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n\nuvicorn main:app নির্দেশনাটি দ্বারা বোঝায়:\n\nList:\n: ফাইল  (পাইথন \"মডিউল\")।\n: app = FastAPI() লাইন দিয়ে  এর ভিতরে তৈরি করা অবজেক্ট।\n: কোড পরিবর্তনের পরে সার্ভার পুনরায় চালু করুন। এটি শুধুমাত্র ডেভেলপমেন্ট এর সময় ব্যবহার করুন।",
          "word_count": 67
        },
        {
          "title": "এটা চেক করুন",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "আপনার ব্রাউজার খুলুন http://127.0.0.1:8000/items/5?q=somequery এ।",
            "আপনি JSON রেসপন্স দেখতে পাবেন:",
            "আপনি ইতিমধ্যে একটি API তৈরি করেছেন যা:",
            "List:\nএবং /items/{item_id}  এ HTTP অনুরোধ গ্রহণ করে।\nউভয় ই   নেয় ( যা HTTP  নামেও পরিচিত)।\n /items/{item_id}-এ একটি path প্যারামিটার  আছে যা কিনা  হতে হবে।\n /items/{item_id}-এর একটি ঐচ্ছিক  query প্যারামিটার  আছে।"
          ],
          "section_id": 8,
          "content_text": "আপনার ব্রাউজার খুলুন http://127.0.0.1:8000/items/5?q=somequery এ।\n\nআপনি JSON রেসপন্স দেখতে পাবেন:\n\nআপনি ইতিমধ্যে একটি API তৈরি করেছেন যা:\n\nList:\nএবং /items/{item_id}  এ HTTP অনুরোধ গ্রহণ করে।\nউভয় ই   নেয় ( যা HTTP  নামেও পরিচিত)।\n /items/{item_id}-এ একটি path প্যারামিটার  আছে যা কিনা  হতে হবে।\n /items/{item_id}-এর একটি ঐচ্ছিক  query প্যারামিটার  আছে।",
          "word_count": 48
        },
        {
          "title": "ক্রিয়াশীল API নির্দেশিকা নথি",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "এখন যান http://127.0.0.1:8000/docs.",
            "আপনি স্বয়ংক্রিয় ভাবে প্রস্তুত ক্রিয়াশীল API নির্দেশিকা নথি দেখতে পাবেন (Swagger UI প্রদত্ত):"
          ],
          "section_id": 9,
          "content_text": "এখন যান http://127.0.0.1:8000/docs.\n\nআপনি স্বয়ংক্রিয় ভাবে প্রস্তুত ক্রিয়াশীল API নির্দেশিকা নথি দেখতে পাবেন (Swagger UI প্রদত্ত):",
          "word_count": 16
        },
        {
          "title": "বিকল্প API নির্দেশিকা নথি",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "এবং এখন http://127.0.0.1:8000/redoc এ যান.",
            "আপনি স্বয়ংক্রিয় ভাবে প্রস্তুত বিকল্প নির্দেশিকা নথি দেখতে পাবেন ( প্রদত্ত):"
          ],
          "section_id": 10,
          "content_text": "এবং এখন http://127.0.0.1:8000/redoc এ যান.\n\nআপনি স্বয়ংক্রিয় ভাবে প্রস্তুত বিকল্প নির্দেশিকা নথি দেখতে পাবেন ( প্রদত্ত):",
          "word_count": 16
        },
        {
          "title": "উদাহরণস্বরূপ আপগ্রেড",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "এখন  ফাইলটি পরিবর্তন করুন যেন এটি  রিকুয়েস্ট থেকে বডি পেতে পারে।",
            "Python স্ট্যান্ডার্ড লাইব্রেরি, Pydantic এর সাহায্যে বডি ঘোষণা করুন।",
            "Code example:\nupdate_item   \n     \"item_name\"",
            "সার্ভারটি স্বয়ংক্রিয়ভাবে পুনরায় লোড হওয়া উচিত (কারণ আপনি উপরের  কমান্ডে  যোগ করেছেন)।"
          ],
          "section_id": 11,
          "content_text": "এখন  ফাইলটি পরিবর্তন করুন যেন এটি  রিকুয়েস্ট থেকে বডি পেতে পারে।\n\nPython স্ট্যান্ডার্ড লাইব্রেরি, Pydantic এর সাহায্যে বডি ঘোষণা করুন।\n\nCode example:\nupdate_item   \n     \"item_name\"\n\nসার্ভারটি স্বয়ংক্রিয়ভাবে পুনরায় লোড হওয়া উচিত (কারণ আপনি উপরের  কমান্ডে  যোগ করেছেন)।",
          "word_count": 36
        },
        {
          "title": "ক্রিয়াশীল API নির্দেশিকা নথি উন্নীতকরণ",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "এখন http://127.0.0.1:8000/docs এডড্রেসে যান.",
            "List:\nক্রিয়াশীল API নির্দেশিকা নথিটি স্বয়ংক্রিয়ভাবে উন্নীত হযে যাবে, নতুন বডি সহ:",
            "List:\n\"Try it out\" বাটনে চাপুন, এটি আপনাকে পেরামিটারগুলো পূরণ করতে এবং API এর সাথে সরাসরি ক্রিয়া-কলাপ করতে দিবে:",
            "List:\nতারপরে \"Execute\" বাটনে চাপুন, ব্যবহারকারীর ইন্টারফেস আপনার API এর সাথে যোগাযোগ করবে, পেরামিটার পাঠাবে, ফলাফলগুলি পাবে এবং সেগুলি পর্রদায় দেখাবে:"
          ],
          "section_id": 12,
          "content_text": "এখন http://127.0.0.1:8000/docs এডড্রেসে যান.\n\nList:\nক্রিয়াশীল API নির্দেশিকা নথিটি স্বয়ংক্রিয়ভাবে উন্নীত হযে যাবে, নতুন বডি সহ:\n\nList:\n\"Try it out\" বাটনে চাপুন, এটি আপনাকে পেরামিটারগুলো পূরণ করতে এবং API এর সাথে সরাসরি ক্রিয়া-কলাপ করতে দিবে:\n\nList:\nতারপরে \"Execute\" বাটনে চাপুন, ব্যবহারকারীর ইন্টারফেস আপনার API এর সাথে যোগাযোগ করবে, পেরামিটার পাঠাবে, ফলাফলগুলি পাবে এবং সেগুলি পর্রদায় দেখাবে:",
          "word_count": 56
        },
        {
          "title": "বিকল্প API নির্দেশিকা নথি আপগ্রেড",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "এবং এখন http://127.0.0.1:8000/redoc এ যান।",
            "List:\nবিকল্প নির্দেশিকা নথিতেও নতুন কুয়েরি প্যারামিটার এবং বডি প্রতিফলিত হবে:"
          ],
          "section_id": 13,
          "content_text": "এবং এখন http://127.0.0.1:8000/redoc এ যান।\n\nList:\nবিকল্প নির্দেশিকা নথিতেও নতুন কুয়েরি প্যারামিটার এবং বডি প্রতিফলিত হবে:",
          "word_count": 16
        },
        {
          "title": "সংক্ষিপ্তকরণ",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "সংক্ষেপে, আপনি শুধু একবার প্যারামিটারের ধরন, বডি ইত্যাদি ফাংশন প্যারামিটার হিসেবে ঘোষণা করেন।",
            "আপনি সেটি আধুনিক পাইথনের সাথে করেন।",
            "আপনাকে নতুন করে নির্দিষ্ট কোন লাইব্রেরির বাক্য গঠন, ফাংশন বা ক্লাস কিছুই শিখতে হচ্ছে না।",
            "শুধুই আধুনিক Python 3.6+",
            "উদাহরণস্বরূপ,  এর জন্য:",
            "অথবা আরও জটিল  মডেলের জন্য:",
            "...এবং সেই একই ঘোষণার সাথে আপনি পাবেন:",
            "List:\nএডিটর সাহায্য, যেমন\n\n\nতথ্য যাচাইকরণ:\nডেটা অবৈধ হলে স্বয়ংক্রিয় এবং পরিষ্কার ত্রুটির নির্দেশনা।\nএমনকি গভীরভাবে নেস্ট করা JSON অবজেক্টের জন্য বৈধতা।\n\nপ্রেরিত তথ্য : যা নেটওয়ার্ক থেকে পাইথনের তথ্য এবং ধরনে আসে, এবং সেখান থেকে পড়া:\n\n\n\n\nপাথ প্যারামিটার।\nকুয়েরি প্যারামিটার।\n\n\n\n\n\n\n\nআউটপুট ডেটার : পাইথন ডেটা এবং টাইপ থেকে নেটওয়ার্ক ডেটাতে রূপান্তর করা (JSON হিসাবে):\n  -পাইথন টাইপে রূপান্তর করুন (, , , , , ইত্যাদি)।\n\n অবজেক্ট।\n objeঅবজেক্টcts।\nডাটাবেস মডেল।\n...এবং আরো অনেক।\nস্বয়ংক্রিয় ক্রিয়াশীল API নির্দেশিকা নথি, 2টি বিকল্প ব্যবহারকারীর ইন্টারফেস সহ:\nসোয়াগার ইউ আই (Swagger UI)।\nরিডক (ReDoc)।",
            "প্রেরিত তথ্য : যা নেটওয়ার্ক থেকে পাইথনের তথ্য এবং ধরনে আসে, এবং সেখান থেকে পড়া:",
            "আউটপুট ডেটার : পাইথন ডেটা এবং টাইপ থেকে নেটওয়ার্ক ডেটাতে রূপান্তর করা (JSON হিসাবে):\n  -পাইথন টাইপে রূপান্তর করুন (, , , , , ইত্যাদি)।",
            "পূর্ববর্তী কোড উদাহরণে ফিরে আসা যাক,  যা করবে:",
            "List:\nএবং  অনুরোধের জন্য পথে  আছে কিনা তা যাচাই করবে।\n এবং  অনুরোধের জন্য  টাইপ  এর হতে হবে তা যাচাই করবে।\nযদি না হয় তবে ক্লায়েন্ট একটি উপযুক্ত, পরিষ্কার ত্রুটি দেখতে পাবেন।\n অনুরোধের জন্য একটি ঐচ্ছিক ক্যুয়েরি প্যারামিটার নামক  (যেমন http://127.0.0.1:8000/items/foo?q=somequery) আছে কি তা চেক করবে।\nযেহেতু  প্যারামিটারটি  দিয়ে ঘোষণা করা হয়েছে, তাই এটি ঐচ্ছিক।\n ছাড়া এটি প্রয়োজনীয় হতো (যেমন  এর ক্ষেত্রে হয়েছে)।\n/items/{item_id} এর জন্য  অনুরোধের বডি JSON হিসাবে পড়ুন:\nলক্ষ করুন,  একটি প্রয়োজনীয় অ্যাট্রিবিউট হিসাবে বিবেচনা করেছে এবং এটি  হতে হবে।\nলক্ষ করুন এখানে,  অ্যাট্রিবিউটটি আবশ্যক এবং এটি  হতে হবে।\nলক্ষ করুন  একটি ঐচ্ছিক অ্যাট্রিবিউট এবং এটি  হতে হবে যদি উপস্থিত থাকে।\nএই সবটি গভীরভাবে অবস্থানরত JSON অবজেক্টগুলিতেও কাজ করবে।\nস্বয়ংক্রিয়ভাবে JSON হতে এবং JSON থেকে কনভার্ট করুন।\nOpenAPI দিয়ে সবকিছু ডকুমেন্ট করুন, যা ব্যবহার করা যেতে পারে:\nক্রিয়াশীল নির্দেশিকা নথি।\nঅনেক ভাষার জন্য স্বয়ংক্রিয় ক্লায়েন্ট কোড তৈরির ব্যবস্থা।\nসরাসরি 2টি ক্রিয়াশীল নির্দেশিকা নথি ওয়েব পৃষ্ঠ প্রদান করা হয়েছে।",
            "আমরা এতক্ষন শুধু এর পৃষ্ঠ তৈরি করেছি, কিন্তু আপনি ইতমধ্যেই এটি কিভাবে কাজ করে তার ধারণাও পেয়ে গিয়েছেন।",
            "নিম্নোক্ত লাইন গুলো পরিবর্তন করার চেষ্টা করুন:",
            "...এবং দেখুন কিভাবে আপনার এডিটর উপাদানগুলোকে সয়ংক্রিয়ভাবে-সম্পন্ন করবে এবং তাদের ধরন জানতে পারবে:",
            "আরও বৈশিষ্ট্য সম্পন্ন উদাহরণের জন্য, দেখুন টিউটোরিয়াল - ব্যবহারকারীর গাইড.",
            "স্পয়লার সতর্কতা: টিউটোরিয়াল - ব্যবহারকারীর গাইড নিম্নোক্ত বিষয়গুলি অন্তর্ভুক্ত করে:",
            "List:\n, , ফর্ম ফিল্ড এবং  এমন অন্যান্য জায়গা থেকে প্যারামিটার ঘোষণা করা।\nmaximum_length বা  এর মতো যাচাইকরণ বাধামুক্তি সেট করা হয় কিভাবে, তা নিয়ে আলোচনা করা হবে।\nএকটি খুব শক্তিশালী এবং ব্যবহার করা সহজ ডিপেন্ডেন্সি ইনজেকশন পদ্ধতি\n এবং  এবং HTTP Basic auth সহ নিরাপত্তা এবং অনুমোদনপ্রাপ্তি সম্পর্কিত বিষয়সমূহের উপর।\nগভীরভাবে অবস্থানরত JSON মডেল ঘোষণা করার জন্য আরও উন্নত (কিন্তু সমান সহজ) কৌশল (Pydantic কে ধন্যবাদ)।\nআরো অতিরিক্ত বৈশিষ্ট্য (স্টারলেটকে ধন্যবাদ) হিসাবে:\nWebSockets\n\nHTTPX এবং  ভিত্তিক অত্যন্ত সহজ পরীক্ষা\n\nCookie Sessions\n...এবং আরো।"
          ],
          "section_id": 14,
          "content_text": "সংক্ষেপে, আপনি শুধু একবার প্যারামিটারের ধরন, বডি ইত্যাদি ফাংশন প্যারামিটার হিসেবে ঘোষণা করেন।\n\nআপনি সেটি আধুনিক পাইথনের সাথে করেন।\n\nআপনাকে নতুন করে নির্দিষ্ট কোন লাইব্রেরির বাক্য গঠন, ফাংশন বা ক্লাস কিছুই শিখতে হচ্ছে না।\n\nশুধুই আধুনিক Python 3.6+\n\nউদাহরণস্বরূপ,  এর জন্য:\n\nঅথবা আরও জটিল  মডেলের জন্য:\n\n...এবং সেই একই ঘোষণার সাথে আপনি পাবেন:\n\nList:\nএডিটর সাহায্য, যেমন\n\n\nতথ্য যাচাইকরণ:\nডেটা অবৈধ হলে স্বয়ংক্রিয় এবং পরিষ্কার ত্রুটির নির্দেশনা।\nএমনকি গভীরভাবে নেস্ট করা JSON অবজেক্টের জন্য বৈধতা।\n\nপ্রেরিত তথ্য : যা নেটওয়ার্ক থেকে পাইথনের তথ্য এবং ধরনে আসে, এবং সেখান থেকে পড়া:\n\n\n\n\nপাথ প্যারামিটার।\nকুয়েরি প্যারামিটার।\n\n\n\n\n\n\n\nআউটপুট ডেটার : পাইথন ডেটা এবং টাইপ থেকে নেটওয়ার্ক ডেটাতে রূপান্তর করা (JSON হিসাবে):\n  -পাইথন টাইপে রূপান্তর করুন (, , , , , ইত্যাদি)।\n\n অবজেক্ট।\n objeঅবজেক্টcts।\nডাটাবেস মডেল।\n...এবং আরো অনেক।\nস্বয়ংক্রিয় ক্রিয়াশীল API নির্দেশিকা নথি, 2টি বিকল্প ব্যবহারকারীর ইন্টারফেস সহ:\nসোয়াগার ইউ আই (Swagger UI)।\nরিডক (ReDoc)।\n\nপ্রেরিত তথ্য : যা নেটওয়ার্ক থেকে পাইথনের তথ্য এবং ধরনে আসে, এবং সেখান থেকে পড়া:\n\nআউটপুট ডেটার : পাইথন ডেটা এবং টাইপ থেকে নেটওয়ার্ক ডেটাতে রূপান্তর করা (JSON হিসাবে):\n  -পাইথন টাইপে রূপান্তর করুন (, , , , , ইত্যাদি)।\n\nপূর্ববর্তী কোড উদাহরণে ফিরে আসা যাক,  যা করবে:\n\nList:\nএবং  অনুরোধের জন্য পথে  আছে কিনা তা যাচাই করবে।\n এবং  অনুরোধের জন্য  টাইপ  এর হতে হবে তা যাচাই করবে।\nযদি না হয় তবে ক্লায়েন্ট একটি উপযুক্ত, পরিষ্কার ত্রুটি দেখতে পাবেন।\n অনুরোধের জন্য একটি ঐচ্ছিক ক্যুয়েরি প্যারামিটার নামক  (যেমন http://127.0.0.1:8000/items/foo?q=somequery) আছে কি তা চেক করবে।\nযেহেতু  প্যারামিটারটি  দিয়ে ঘোষণা করা হয়েছে, তাই এটি ঐচ্ছিক।\n ছাড়া এটি প্রয়োজনীয় হতো (যেমন  এর ক্ষেত্রে হয়েছে)।\n/items/{item_id} এর জন্য  অনুরোধের বডি JSON হিসাবে পড়ুন:\nলক্ষ করুন,  একটি প্রয়োজনীয় অ্যাট্রিবিউট হিসাবে বিবেচনা করেছে এবং এটি  হতে হবে।\nলক্ষ করুন এখানে,  অ্যাট্রিবিউটটি আবশ্যক এবং এটি  হতে হবে।\nলক্ষ করুন  একটি ঐচ্ছিক অ্যাট্রিবিউট এবং এটি  হতে হবে যদি উপস্থিত থাকে।\nএই সবটি গভীরভাবে অবস্থানরত JSON অবজেক্টগুলিতেও কাজ করবে।\nস্বয়ংক্রিয়ভাবে JSON হতে এবং JSON থেকে কনভার্ট করুন।\nOpenAPI দিয়ে সবকিছু ডকুমেন্ট করুন, যা ব্যবহার করা যেতে পারে:\nক্রিয়াশীল নির্দেশিকা নথি।\nঅনেক ভাষার জন্য স্বয়ংক্রিয় ক্লায়েন্ট কোড তৈরির ব্যবস্থা।\nসরাসরি 2টি ক্রিয়াশীল নির্দেশিকা নথি ওয়েব পৃষ্ঠ প্রদান করা হয়েছে।\n\nআমরা এতক্ষন শুধু এর পৃষ্ঠ তৈরি করেছি, কিন্তু আপনি ইতমধ্যেই এটি কিভাবে কাজ করে তার ধারণাও পেয়ে গিয়েছেন।\n\nনিম্নোক্ত লাইন গুলো পরিবর্তন করার চেষ্টা করুন:\n\n...এবং দেখুন কিভাবে আপনার এডিটর উপাদানগুলোকে সয়ংক্রিয়ভাবে-সম্পন্ন করবে এবং তাদের ধরন জানতে পারবে:\n\nআরও বৈশিষ্ট্য সম্পন্ন উদাহরণের জন্য, দেখুন টিউটোরিয়াল - ব্যবহারকারীর গাইড.\n\nস্পয়লার সতর্কতা: টিউটোরিয়াল - ব্যবহারকারীর গাইড নিম্নোক্ত বিষয়গুলি অন্তর্ভুক্ত করে:\n\nList:\n, , ফর্ম ফিল্ড এবং  এমন অন্যান্য জায়গা থেকে প্যারামিটার ঘোষণা করা।\nmaximum_length বা  এর মতো যাচাইকরণ বাধামুক্তি সেট করা হয় কিভাবে, তা নিয়ে আলোচনা করা হবে।\nএকটি খুব শক্তিশালী এবং ব্যবহার করা সহজ ডিপেন্ডেন্সি ইনজেকশন পদ্ধতি\n এবং  এবং HTTP Basic auth সহ নিরাপত্তা এবং অনুমোদনপ্রাপ্তি সম্পর্কিত বিষয়সমূহের উপর।\nগভীরভাবে অবস্থানরত JSON মডেল ঘোষণা করার জন্য আরও উন্নত (কিন্তু সমান সহজ) কৌশল (Pydantic কে ধন্যবাদ)।\nআরো অতিরিক্ত বৈশিষ্ট্য (স্টারলেটকে ধন্যবাদ) হিসাবে:\nWebSockets\n\nHTTPX এবং  ভিত্তিক অত্যন্ত সহজ পরীক্ষা\n\nCookie Sessions\n...এবং আরো।",
          "word_count": 480
        },
        {
          "title": "কর্মক্ষমতা",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "স্বাধীন TechEmpower Benchmarks দেখায় যে  অ্যাপ্লিকেশনগুলি Uvicorn-এর অধীনে চলমান দ্রুততমপাইথন ফ্রেমওয়ার্কগুলির মধ্যে একটি, শুধুমাত্র Starlette এবং Uvicorn-এর পর (FastAPI দ্বারা অভ্যন্তরীণভাবে ব্যবহৃত)। (*)",
            "এটি সম্পর্কে আরও বুঝতে, দেখুন Benchmarks."
          ],
          "section_id": 15,
          "content_text": "স্বাধীন TechEmpower Benchmarks দেখায় যে  অ্যাপ্লিকেশনগুলি Uvicorn-এর অধীনে চলমান দ্রুততমপাইথন ফ্রেমওয়ার্কগুলির মধ্যে একটি, শুধুমাত্র Starlette এবং Uvicorn-এর পর (FastAPI দ্বারা অভ্যন্তরীণভাবে ব্যবহৃত)। (*)\n\nএটি সম্পর্কে আরও বুঝতে, দেখুন Benchmarks.",
          "word_count": 29
        },
        {
          "title": "ঐচ্ছিক নির্ভরশীলতা",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "Pydantic দ্বারা ব্যবহৃত:",
            "List:\nemail-validator - ইমেল যাচাইকরণের জন্য।",
            "স্টারলেট দ্বারা ব্যবহৃত:",
            "List:\n- আপনি যদি TestClient ব্যবহার করতে চান তাহলে আবশ্যক।\n - আপনি যদি প্রদত্ত টেমপ্লেট রূপরেখা ব্যবহার করতে চান তাহলে প্রয়োজন।\npython-multipart - আপনি যদি ফর্ম সহায়তা করতে চান তাহলে প্রয়োজন , request.form() সহ।\nitsdangerous - SessionMiddleware সহায়তার জন্য প্রয়োজন।\n - স্টারলেটের SchemaGenerator সাপোর্ট এর জন্য প্রয়োজন (আপনার সম্ভাবত FastAPI প্রয়োজন নেই)।\n - GraphQLApp সহায়তার জন্য প্রয়োজন।",
            "FastAPI / Starlette দ্বারা ব্যবহৃত:",
            "List:\n- সার্ভারের জন্য যা আপনার অ্যাপ্লিকেশন লোড করে এবং পরিবেশন করে।\n - আপনি ORJSONResponse ব্যবহার করতে চাইলে প্রয়োজন।\n - আপনি UJSONResponse ব্যবহার করতে চাইলে প্রয়োজন।",
            "আপনি এই সব ইনস্টল করতে পারেন pip install fastapi[all] দিয়ে."
          ],
          "section_id": 16,
          "content_text": "Pydantic দ্বারা ব্যবহৃত:\n\nList:\nemail-validator - ইমেল যাচাইকরণের জন্য।\n\nস্টারলেট দ্বারা ব্যবহৃত:\n\nList:\n- আপনি যদি TestClient ব্যবহার করতে চান তাহলে আবশ্যক।\n - আপনি যদি প্রদত্ত টেমপ্লেট রূপরেখা ব্যবহার করতে চান তাহলে প্রয়োজন।\npython-multipart - আপনি যদি ফর্ম সহায়তা করতে চান তাহলে প্রয়োজন , request.form() সহ।\nitsdangerous - SessionMiddleware সহায়তার জন্য প্রয়োজন।\n - স্টারলেটের SchemaGenerator সাপোর্ট এর জন্য প্রয়োজন (আপনার সম্ভাবত FastAPI প্রয়োজন নেই)।\n - GraphQLApp সহায়তার জন্য প্রয়োজন।\n\nFastAPI / Starlette দ্বারা ব্যবহৃত:\n\nList:\n- সার্ভারের জন্য যা আপনার অ্যাপ্লিকেশন লোড করে এবং পরিবেশন করে।\n - আপনি ORJSONResponse ব্যবহার করতে চাইলে প্রয়োজন।\n - আপনি UJSONResponse ব্যবহার করতে চাইলে প্রয়োজন।\n\nআপনি এই সব ইনস্টল করতে পারেন pip install fastapi[all] দিয়ে.",
          "word_count": 110
        },
        {
          "title": "লাইসেন্স",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/bn/",
          "content": [
            "এই প্রজেক্ট MIT লাইসেন্স নীতিমালার অধীনে শর্তায়িত।"
          ],
          "section_id": 17,
          "content_text": "এই প্রজেক্ট MIT লাইসেন্স নীতিমালার অধীনে শর্তায়িত।",
          "word_count": 7
        }
      ],
      "total_sections": 17
    },
    {
      "url": "https://fastapi.tiangolo.com/de/",
      "page_title": "FastAPI",
      "domain": "fastapi.tiangolo.com",
      "sections": [
        {
          "title": "FastAPI",
          "level": 1,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "FastAPI-Framework, hohe Performanz, leicht zu lernen, schnell zu entwickeln, produktionsreif",
            "Dokumentation: https://fastapi.tiangolo.com/de",
            ": https://github.com/fastapi/fastapi",
            "FastAPI ist ein modernes, schnelles (hoch performantes) Webframework zur Erstellung von APIs mit Python auf Basis von Standard-Python-Typhinweisen.",
            "Seine Schlüssel-Merkmale sind:",
            "List:\n: Sehr hohe Performanz, auf Augenhöhe mit  und  (dank Starlette und Pydantic). Eines der schnellsten verfügbaren Python-Frameworks.\nSchnell zu entwickeln: Erhöhen Sie die Geschwindigkeit bei der Entwicklung von Features um etwa 200 % bis 300 %. *\nWeniger Bugs: Verringern Sie die von Menschen (Entwicklern) verursachten Fehler um etwa 40 %. *\n: Hervorragende Editor-Unterstützung. Code-Vervollständigung überall. Weniger Zeit mit Debuggen verbringen.\n: So konzipiert, dass es einfach zu benutzen und zu erlernen ist. Weniger Zeit mit dem Lesen von Dokumentation verbringen.\n: Minimieren Sie die Verdoppelung von Code. Mehrere Features aus jeder Parameterdeklaration. Weniger Bugs.\n: Erhalten Sie produktionsreifen Code. Mit automatischer, interaktiver Dokumentation.\nStandards-basiert: Basierend auf (und vollständig kompatibel mit) den offenen Standards für APIs:  (früher bekannt als Swagger) und JSON Schema.",
            "* Schätzung basierend auf Tests in einem internen Entwicklungsteam, das Produktionsanwendungen erstellt."
          ],
          "section_id": 1,
          "content_text": "FastAPI-Framework, hohe Performanz, leicht zu lernen, schnell zu entwickeln, produktionsreif\n\nDokumentation: https://fastapi.tiangolo.com/de\n\n: https://github.com/fastapi/fastapi\n\nFastAPI ist ein modernes, schnelles (hoch performantes) Webframework zur Erstellung von APIs mit Python auf Basis von Standard-Python-Typhinweisen.\n\nSeine Schlüssel-Merkmale sind:\n\nList:\n: Sehr hohe Performanz, auf Augenhöhe mit  und  (dank Starlette und Pydantic). Eines der schnellsten verfügbaren Python-Frameworks.\nSchnell zu entwickeln: Erhöhen Sie die Geschwindigkeit bei der Entwicklung von Features um etwa 200 % bis 300 %. *\nWeniger Bugs: Verringern Sie die von Menschen (Entwicklern) verursachten Fehler um etwa 40 %. *\n: Hervorragende Editor-Unterstützung. Code-Vervollständigung überall. Weniger Zeit mit Debuggen verbringen.\n: So konzipiert, dass es einfach zu benutzen und zu erlernen ist. Weniger Zeit mit dem Lesen von Dokumentation verbringen.\n: Minimieren Sie die Verdoppelung von Code. Mehrere Features aus jeder Parameterdeklaration. Weniger Bugs.\n: Erhalten Sie produktionsreifen Code. Mit automatischer, interaktiver Dokumentation.\nStandards-basiert: Basierend auf (und vollständig kompatibel mit) den offenen Standards für APIs:  (früher bekannt als Swagger) und JSON Schema.\n\n* Schätzung basierend auf Tests in einem internen Entwicklungsteam, das Produktionsanwendungen erstellt.",
          "word_count": 172
        },
        {
          "title": "Meinungen",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "„[...] Ich verwende  heutzutage sehr oft. [...] Ich habe tatsächlich vor, es für alle ML-Services meines Teams bei Microsoft zu verwenden. Einige davon werden in das Kernprodukt  und einige -Produkte integriert.“",
            "„Wir haben die -Bibliothek übernommen, um einen -Server zu erstellen, der für Vorhersagen abgefragt werden kann. [für Ludwig]“",
            "„ freut sich, die Open-Source-Veröffentlichung unseres Krisenmanagement-Orchestrierung-Frameworks bekannt zu geben: ! [erstellt mit ]“",
            "„Ich bin hellauf begeistert von . Es macht so viel Spaß!“",
            "„Ehrlich, was Du gebaut hast, sieht super solide und poliert aus. In vielerlei Hinsicht ist es so, wie ich  haben wollte – es ist wirklich inspirierend, jemanden so etwas bauen zu sehen.“",
            "„Wenn Sie ein modernes Framework zum Erstellen von REST-APIs erlernen möchten, schauen Sie sich  an. [...] Es ist schnell, einfach zu verwenden und leicht zu lernen [...]“",
            "„Wir haben zu  für unsere  gewechselt [...] Ich denke, es wird Ihnen gefallen [...]“",
            "„Falls irgendjemand eine Produktions-Python-API erstellen möchte, kann ich  wärmstens empfehlen. Es ist wunderschön konzipiert, einfach zu verwenden und hoch skalierbar; es ist zu einer Schlüsselkomponente unserer API-First-Entwicklungsstrategie geworden und treibt viele Automatisierungen und Services an, wie etwa unseren Virtual TAC Engineer.“"
          ],
          "section_id": 2,
          "content_text": "„[...] Ich verwende  heutzutage sehr oft. [...] Ich habe tatsächlich vor, es für alle ML-Services meines Teams bei Microsoft zu verwenden. Einige davon werden in das Kernprodukt  und einige -Produkte integriert.“\n\n„Wir haben die -Bibliothek übernommen, um einen -Server zu erstellen, der für Vorhersagen abgefragt werden kann. [für Ludwig]“\n\n„ freut sich, die Open-Source-Veröffentlichung unseres Krisenmanagement-Orchestrierung-Frameworks bekannt zu geben: ! [erstellt mit ]“\n\n„Ich bin hellauf begeistert von . Es macht so viel Spaß!“\n\n„Ehrlich, was Du gebaut hast, sieht super solide und poliert aus. In vielerlei Hinsicht ist es so, wie ich  haben wollte – es ist wirklich inspirierend, jemanden so etwas bauen zu sehen.“\n\n„Wenn Sie ein modernes Framework zum Erstellen von REST-APIs erlernen möchten, schauen Sie sich  an. [...] Es ist schnell, einfach zu verwenden und leicht zu lernen [...]“\n\n„Wir haben zu  für unsere  gewechselt [...] Ich denke, es wird Ihnen gefallen [...]“\n\n„Falls irgendjemand eine Produktions-Python-API erstellen möchte, kann ich  wärmstens empfehlen. Es ist wunderschön konzipiert, einfach zu verwenden und hoch skalierbar; es ist zu einer Schlüsselkomponente unserer API-First-Entwicklungsstrategie geworden und treibt viele Automatisierungen und Services an, wie etwa unseren Virtual TAC Engineer.“",
          "word_count": 188
        },
        {
          "title": ", das FastAPI der CLIs",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Wenn Sie eine -Anwendung für das Terminal erstellen, anstelle einer Web-API, schauen Sie sich  an.",
            "ist die kleine Schwester von FastAPI. Und es soll das FastAPI der CLIs sein. ⌨️ 🚀"
          ],
          "section_id": 3,
          "content_text": "Wenn Sie eine -Anwendung für das Terminal erstellen, anstelle einer Web-API, schauen Sie sich  an.\n\nist die kleine Schwester von FastAPI. Und es soll das FastAPI der CLIs sein. ⌨️ 🚀",
          "word_count": 31
        },
        {
          "title": "Anforderungen",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "FastAPI steht auf den Schultern von Giganten:",
            "List:\nfür die Webanteile.\n für die Datenanteile."
          ],
          "section_id": 4,
          "content_text": "FastAPI steht auf den Schultern von Giganten:\n\nList:\nfür die Webanteile.\n für die Datenanteile.",
          "word_count": 14
        },
        {
          "title": "Installation",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Erstellen und aktivieren Sie eine virtuelle Umgebung und installieren Sie dann FastAPI:",
            "Code example:\npipinstall\"fastapi[standard]\"",
            ": Stellen Sie sicher, dass Sie \"fastapi[standard]\" in Anführungszeichen setzen, damit es in allen Terminals funktioniert."
          ],
          "section_id": 5,
          "content_text": "Erstellen und aktivieren Sie eine virtuelle Umgebung und installieren Sie dann FastAPI:\n\nCode example:\npipinstall\"fastapi[standard]\"\n\n: Stellen Sie sicher, dass Sie \"fastapi[standard]\" in Anführungszeichen setzen, damit es in allen Terminals funktioniert.",
          "word_count": 31
        },
        {
          "title": "Erstellung",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Erstellen Sie eine Datei  mit:",
            "Wenn Ihr Code  /  verwendet, benutzen Sie :",
            "Wenn Sie das nicht kennen, schauen Sie sich den Abschnitt „In Eile?“ über  und  in der Dokumentation an."
          ],
          "section_id": 6,
          "content_text": "Erstellen Sie eine Datei  mit:\n\nWenn Ihr Code  /  verwendet, benutzen Sie :\n\nWenn Sie das nicht kennen, schauen Sie sich den Abschnitt „In Eile?“ über  und  in der Dokumentation an.",
          "word_count": 31
        },
        {
          "title": "Starten",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Starten Sie den Server mit:",
            "Code example:\nfastapidevmain.py\n ╭────────── FastAPI CLI - Development mode ───────────╮\n │                                                     │\n │  Serving at: http://127.0.0.1:8000                  │\n │                                                     │\n │  API docs: http://127.0.0.1:8000/docs               │\n │                                                     │\n │  Running in development mode, for production use:   │\n │                                                     │\n │  fastapi run                                        │\n │                                                     │\n ╰─────────────────────────────────────────────────────╯\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
            "Der Befehl fastapi dev liest Ihre -Datei, erkennt die -App darin und startet einen Server mit .",
            "Standardmäßig wird fastapi dev mit aktiviertem Auto-Reload für die lokale Entwicklung gestartet.",
            "Sie können mehr darüber in der FastAPI CLI Dokumentation lesen."
          ],
          "section_id": 7,
          "content_text": "Starten Sie den Server mit:\n\nCode example:\nfastapidevmain.py\n ╭────────── FastAPI CLI - Development mode ───────────╮\n │                                                     │\n │  Serving at: http://127.0.0.1:8000                  │\n │                                                     │\n │  API docs: http://127.0.0.1:8000/docs               │\n │                                                     │\n │  Running in development mode, for production use:   │\n │                                                     │\n │  fastapi run                                        │\n │                                                     │\n ╰─────────────────────────────────────────────────────╯\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n\nDer Befehl fastapi dev liest Ihre -Datei, erkennt die -App darin und startet einen Server mit .\n\nStandardmäßig wird fastapi dev mit aktiviertem Auto-Reload für die lokale Entwicklung gestartet.\n\nSie können mehr darüber in der FastAPI CLI Dokumentation lesen.",
          "word_count": 127
        },
        {
          "title": "Es testen",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Öffnen Sie Ihren Browser unter http://127.0.0.1:8000/items/5?q=somequery.",
            "Sie sehen die JSON- als:",
            "Sie haben bereits eine API erstellt, welche:",
            "List:\nHTTP- auf den   und /items/{item_id} entgegennimmt.\nBeide  nehmen  Operationen (auch bekannt als HTTP-) entgegen.\nDer  /items/{item_id} hat einen Pfad-Parameter , der ein  sein sollte.\nDer  /items/{item_id} hat einen optionalen -Query-Parameter ."
          ],
          "section_id": 8,
          "content_text": "Öffnen Sie Ihren Browser unter http://127.0.0.1:8000/items/5?q=somequery.\n\nSie sehen die JSON- als:\n\nSie haben bereits eine API erstellt, welche:\n\nList:\nHTTP- auf den   und /items/{item_id} entgegennimmt.\nBeide  nehmen  Operationen (auch bekannt als HTTP-) entgegen.\nDer  /items/{item_id} hat einen Pfad-Parameter , der ein  sein sollte.\nDer  /items/{item_id} hat einen optionalen -Query-Parameter .",
          "word_count": 50
        },
        {
          "title": "Interaktive API-Dokumentation",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Gehen Sie nun auf http://127.0.0.1:8000/docs.",
            "Sie sehen die automatische interaktive API-Dokumentation (bereitgestellt von Swagger UI):"
          ],
          "section_id": 9,
          "content_text": "Gehen Sie nun auf http://127.0.0.1:8000/docs.\n\nSie sehen die automatische interaktive API-Dokumentation (bereitgestellt von Swagger UI):",
          "word_count": 15
        },
        {
          "title": "Alternative API-Dokumentation",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Und jetzt gehen Sie auf http://127.0.0.1:8000/redoc.",
            "Sie sehen die alternative automatische Dokumentation (bereitgestellt von ):"
          ],
          "section_id": 10,
          "content_text": "Und jetzt gehen Sie auf http://127.0.0.1:8000/redoc.\n\nSie sehen die alternative automatische Dokumentation (bereitgestellt von ):",
          "word_count": 15
        },
        {
          "title": "Beispiel Aktualisierung",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Ändern Sie jetzt die Datei , um den  eines -Requests zu empfangen.",
            "Deklarieren Sie den Body mit Standard-Python-Typen, dank Pydantic.",
            "Code example:\nupdate_item   \n     \"item_name\"",
            "Der fastapi dev-Server sollte automatisch neu laden."
          ],
          "section_id": 11,
          "content_text": "Ändern Sie jetzt die Datei , um den  eines -Requests zu empfangen.\n\nDeklarieren Sie den Body mit Standard-Python-Typen, dank Pydantic.\n\nCode example:\nupdate_item   \n     \"item_name\"\n\nDer fastapi dev-Server sollte automatisch neu laden.",
          "word_count": 31
        },
        {
          "title": "Interaktive API-Dokumentation aktualisieren",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Gehen Sie jetzt auf http://127.0.0.1:8000/docs.",
            "List:\nDie interaktive API-Dokumentation wird automatisch aktualisiert, einschließlich des neuen Bodys:",
            "List:\nKlicken Sie auf den Button „Try it out“, damit können Sie die Parameter ausfüllen und direkt mit der API interagieren:",
            "List:\nKlicken Sie dann auf den Button „Execute“, die Benutzeroberfläche wird mit Ihrer API kommunizieren, sendet die Parameter, holt die Ergebnisse und zeigt sie auf dem Bildschirm an:"
          ],
          "section_id": 12,
          "content_text": "Gehen Sie jetzt auf http://127.0.0.1:8000/docs.\n\nList:\nDie interaktive API-Dokumentation wird automatisch aktualisiert, einschließlich des neuen Bodys:\n\nList:\nKlicken Sie auf den Button „Try it out“, damit können Sie die Parameter ausfüllen und direkt mit der API interagieren:\n\nList:\nKlicken Sie dann auf den Button „Execute“, die Benutzeroberfläche wird mit Ihrer API kommunizieren, sendet die Parameter, holt die Ergebnisse und zeigt sie auf dem Bildschirm an:",
          "word_count": 65
        },
        {
          "title": "Alternative API-Dokumentation aktualisieren",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Und jetzt gehen Sie auf http://127.0.0.1:8000/redoc.",
            "List:\nDie alternative Dokumentation wird ebenfalls den neuen Query-Parameter und Body widerspiegeln:"
          ],
          "section_id": 13,
          "content_text": "Und jetzt gehen Sie auf http://127.0.0.1:8000/redoc.\n\nList:\nDie alternative Dokumentation wird ebenfalls den neuen Query-Parameter und Body widerspiegeln:",
          "word_count": 18
        },
        {
          "title": "Zusammenfassung",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Zusammengefasst deklarieren Sie  die Typen von Parametern, Body, usw. als Funktionsparameter.",
            "Das machen Sie mit modernen Standard-Python-Typen.",
            "Sie müssen keine neue Syntax, Methoden oder Klassen einer bestimmten Bibliothek usw. lernen.",
            "Zum Beispiel für ein :",
            "oder für ein komplexeres -Modell:",
            "... und mit dieser einen Deklaration erhalten Sie:",
            "List:\nEditor-Unterstützung, einschließlich:\nCode-Vervollständigung.\nTypprüfungen.\n\n\nValidierung von Daten:\nAutomatische und eindeutige Fehler, wenn die Daten ungültig sind.\nValidierung sogar für tief verschachtelte JSON-Objekte.\n\n\nKonvertierung von Eingabedaten: Aus dem Netzwerk kommend, zu Python-Daten und -Typen. Lesen von:\n\nPfad-Parametern.\nQuery-Parametern.\n\n\nFormularen.\n\n\n\nKonvertierung von Ausgabedaten: Konvertierung von Python-Daten und -Typen zu Netzwerkdaten (als JSON):\nKonvertieren von Python-Typen (, , , , , usw.).\n-Objekte.\n-Objekte.\nDatenbankmodelle.\n... und viele mehr.\n\n\nAutomatische interaktive API-Dokumentation, einschließlich zwei alternativer Benutzeroberflächen:\nSwagger UI.",
            "List:\nCode-Vervollständigung.\nTypprüfungen.",
            "List:\nAutomatische und eindeutige Fehler, wenn die Daten ungültig sind.\nValidierung sogar für tief verschachtelte JSON-Objekte.",
            "List:\nPfad-Parametern.\nQuery-Parametern.\n\n\nFormularen.",
            "List:\nKonvertieren von Python-Typen (, , , , , usw.).\n-Objekte.\n-Objekte.\nDatenbankmodelle.\n... und viele mehr.",
            "Um auf das vorherige Codebeispiel zurückzukommen,  wird:",
            "List:\nValidieren, dass es eine  im Pfad für - und -Requests gibt.\nValidieren, ob die  vom Typ  für - und -Requests ist.\nFalls nicht, sieht der Client einen hilfreichen, klaren Fehler.\n\n\nPrüfen, ob es einen optionalen Query-Parameter namens  (wie in http://127.0.0.1:8000/items/foo?q=somequery) für -Requests gibt.\nDa der -Parameter mit  deklariert ist, ist er optional.\nOhne das  wäre er erforderlich (wie der Body im Fall von ).\n\n\nBei -Requests an /items/{item_id} den Body als JSON lesen:\nPrüfen, ob er ein erforderliches Attribut  hat, das ein  sein muss.\nPrüfen, ob er ein erforderliches Attribut  hat, das ein  sein muss.\nPrüfen, ob er ein optionales Attribut  hat, das ein  sein muss, falls vorhanden.\nAll dies würde auch für tief verschachtelte JSON-Objekte funktionieren.\n\n\nAutomatisch von und nach JSON konvertieren.\nAlles mit OpenAPI dokumentieren, welches verwendet werden kann von:\nInteraktiven Dokumentationssystemen.\nAutomatisch Client-Code generierenden Systemen für viele Sprachen.\n\n\nZwei interaktive Dokumentations-Weboberflächen direkt bereitstellen.",
            "List:\nFalls nicht, sieht der Client einen hilfreichen, klaren Fehler.",
            "List:\nDa der -Parameter mit  deklariert ist, ist er optional.\nOhne das  wäre er erforderlich (wie der Body im Fall von ).",
            "List:\nPrüfen, ob er ein erforderliches Attribut  hat, das ein  sein muss.\nPrüfen, ob er ein erforderliches Attribut  hat, das ein  sein muss.\nPrüfen, ob er ein optionales Attribut  hat, das ein  sein muss, falls vorhanden.\nAll dies würde auch für tief verschachtelte JSON-Objekte funktionieren.",
            "List:\nInteraktiven Dokumentationssystemen.\nAutomatisch Client-Code generierenden Systemen für viele Sprachen.",
            "Wir haben nur an der Oberfläche gekratzt, aber Sie bekommen schon eine Vorstellung davon, wie das Ganze funktioniert.",
            "Versuchen Sie, diese Zeile zu ändern:",
            "... und sehen Sie, wie Ihr Editor die Attribute automatisch vervollständigt und ihre Typen kennt:",
            "Für ein vollständigeres Beispiel, mit weiteren Funktionen, siehe das Tutorial – Benutzerhandbuch.",
            "Spoiler-Alarm: Das Tutorial – Benutzerhandbuch enthält:",
            "List:\nDeklaration von Parametern von anderen verschiedenen Stellen wie: , , Formularfelder und .\nWie man Validierungs-Constraints wie maximum_length oder  setzt.\nEin sehr leistungsfähiges und einfach zu bedienendes System für Dependency Injection.\nSicherheit und Authentifizierung, einschließlich Unterstützung für  mit JWT-Tokens und HTTP Basic Authentifizierung.\nFortgeschrittenere (aber ebenso einfache) Techniken zur Deklaration tief verschachtelter JSON-Modelle (dank Pydantic).\n-Integration mit Strawberry und anderen Bibliotheken.\nViele zusätzliche Features (dank Starlette) wie:\nWebSockets\nextrem einfache Tests auf Basis von HTTPX und \n\nCookie-Sessions\n... und mehr.",
            "List:\nWebSockets\nextrem einfache Tests auf Basis von HTTPX und \n\nCookie-Sessions\n... und mehr."
          ],
          "section_id": 14,
          "content_text": "Zusammengefasst deklarieren Sie  die Typen von Parametern, Body, usw. als Funktionsparameter.\n\nDas machen Sie mit modernen Standard-Python-Typen.\n\nSie müssen keine neue Syntax, Methoden oder Klassen einer bestimmten Bibliothek usw. lernen.\n\nZum Beispiel für ein :\n\noder für ein komplexeres -Modell:\n\n... und mit dieser einen Deklaration erhalten Sie:\n\nList:\nEditor-Unterstützung, einschließlich:\nCode-Vervollständigung.\nTypprüfungen.\n\n\nValidierung von Daten:\nAutomatische und eindeutige Fehler, wenn die Daten ungültig sind.\nValidierung sogar für tief verschachtelte JSON-Objekte.\n\n\nKonvertierung von Eingabedaten: Aus dem Netzwerk kommend, zu Python-Daten und -Typen. Lesen von:\n\nPfad-Parametern.\nQuery-Parametern.\n\n\nFormularen.\n\n\n\nKonvertierung von Ausgabedaten: Konvertierung von Python-Daten und -Typen zu Netzwerkdaten (als JSON):\nKonvertieren von Python-Typen (, , , , , usw.).\n-Objekte.\n-Objekte.\nDatenbankmodelle.\n... und viele mehr.\n\n\nAutomatische interaktive API-Dokumentation, einschließlich zwei alternativer Benutzeroberflächen:\nSwagger UI.\n\nList:\nCode-Vervollständigung.\nTypprüfungen.\n\nList:\nAutomatische und eindeutige Fehler, wenn die Daten ungültig sind.\nValidierung sogar für tief verschachtelte JSON-Objekte.\n\nList:\nPfad-Parametern.\nQuery-Parametern.\n\n\nFormularen.\n\nList:\nKonvertieren von Python-Typen (, , , , , usw.).\n-Objekte.\n-Objekte.\nDatenbankmodelle.\n... und viele mehr.\n\nUm auf das vorherige Codebeispiel zurückzukommen,  wird:\n\nList:\nValidieren, dass es eine  im Pfad für - und -Requests gibt.\nValidieren, ob die  vom Typ  für - und -Requests ist.\nFalls nicht, sieht der Client einen hilfreichen, klaren Fehler.\n\n\nPrüfen, ob es einen optionalen Query-Parameter namens  (wie in http://127.0.0.1:8000/items/foo?q=somequery) für -Requests gibt.\nDa der -Parameter mit  deklariert ist, ist er optional.\nOhne das  wäre er erforderlich (wie der Body im Fall von ).\n\n\nBei -Requests an /items/{item_id} den Body als JSON lesen:\nPrüfen, ob er ein erforderliches Attribut  hat, das ein  sein muss.\nPrüfen, ob er ein erforderliches Attribut  hat, das ein  sein muss.\nPrüfen, ob er ein optionales Attribut  hat, das ein  sein muss, falls vorhanden.\nAll dies würde auch für tief verschachtelte JSON-Objekte funktionieren.\n\n\nAutomatisch von und nach JSON konvertieren.\nAlles mit OpenAPI dokumentieren, welches verwendet werden kann von:\nInteraktiven Dokumentationssystemen.\nAutomatisch Client-Code generierenden Systemen für viele Sprachen.\n\n\nZwei interaktive Dokumentations-Weboberflächen direkt bereitstellen.\n\nList:\nFalls nicht, sieht der Client einen hilfreichen, klaren Fehler.\n\nList:\nDa der -Parameter mit  deklariert ist, ist er optional.\nOhne das  wäre er erforderlich (wie der Body im Fall von ).\n\nList:\nPrüfen, ob er ein erforderliches Attribut  hat, das ein  sein muss.\nPrüfen, ob er ein erforderliches Attribut  hat, das ein  sein muss.\nPrüfen, ob er ein optionales Attribut  hat, das ein  sein muss, falls vorhanden.\nAll dies würde auch für tief verschachtelte JSON-Objekte funktionieren.\n\nList:\nInteraktiven Dokumentationssystemen.\nAutomatisch Client-Code generierenden Systemen für viele Sprachen.\n\nWir haben nur an der Oberfläche gekratzt, aber Sie bekommen schon eine Vorstellung davon, wie das Ganze funktioniert.\n\nVersuchen Sie, diese Zeile zu ändern:\n\n... und sehen Sie, wie Ihr Editor die Attribute automatisch vervollständigt und ihre Typen kennt:\n\nFür ein vollständigeres Beispiel, mit weiteren Funktionen, siehe das Tutorial – Benutzerhandbuch.\n\nSpoiler-Alarm: Das Tutorial – Benutzerhandbuch enthält:\n\nList:\nDeklaration von Parametern von anderen verschiedenen Stellen wie: , , Formularfelder und .\nWie man Validierungs-Constraints wie maximum_length oder  setzt.\nEin sehr leistungsfähiges und einfach zu bedienendes System für Dependency Injection.\nSicherheit und Authentifizierung, einschließlich Unterstützung für  mit JWT-Tokens und HTTP Basic Authentifizierung.\nFortgeschrittenere (aber ebenso einfache) Techniken zur Deklaration tief verschachtelter JSON-Modelle (dank Pydantic).\n-Integration mit Strawberry und anderen Bibliotheken.\nViele zusätzliche Features (dank Starlette) wie:\nWebSockets\nextrem einfache Tests auf Basis von HTTPX und \n\nCookie-Sessions\n... und mehr.\n\nList:\nWebSockets\nextrem einfache Tests auf Basis von HTTPX und \n\nCookie-Sessions\n... und mehr.",
          "word_count": 557
        },
        {
          "title": "Performanz",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Unabhängige TechEmpower-Benchmarks zeigen -Anwendungen, die unter Uvicorn laufen, als eines der schnellsten verfügbaren Python-Frameworks, nur hinter Starlette und Uvicorn selbst (intern von FastAPI verwendet). (*)",
            "Um mehr darüber zu erfahren, siehe den Abschnitt Benchmarks."
          ],
          "section_id": 15,
          "content_text": "Unabhängige TechEmpower-Benchmarks zeigen -Anwendungen, die unter Uvicorn laufen, als eines der schnellsten verfügbaren Python-Frameworks, nur hinter Starlette und Uvicorn selbst (intern von FastAPI verwendet). (*)\n\nUm mehr darüber zu erfahren, siehe den Abschnitt Benchmarks.",
          "word_count": 34
        },
        {
          "title": "Abhängigkeiten",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "FastAPI hängt von Pydantic und Starlette ab."
          ],
          "section_id": 16,
          "content_text": "FastAPI hängt von Pydantic und Starlette ab.",
          "word_count": 7
        },
        {
          "title": "-Abhängigkeiten",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Wenn Sie FastAPI mit pip install \"fastapi[standard]\" installieren, kommt es mit der -Gruppe optionaler Abhängigkeiten:",
            "Verwendet von Pydantic:",
            "List:\nemail-validator – für E-Mail-Validierung.",
            "Verwendet von Starlette:",
            "List:\n– erforderlich, wenn Sie den TestClient verwenden möchten.\n – erforderlich, wenn Sie die Default-Template-Konfiguration verwenden möchten.\npython-multipart – erforderlich, wenn Sie Formulare mittels request.form()  möchten.",
            "Verwendet von FastAPI:",
            "List:\n– für den Server, der Ihre Anwendung lädt und bereitstellt. Dies umfasst uvicorn[standard], das einige Abhängigkeiten (z. B. ) beinhaltet, die für eine Bereitstellung mit hoher Performanz benötigt werden.\nfastapi-cli[standard] – um den -Befehl bereitzustellen.\nDies beinhaltet fastapi-cloud-cli, das es Ihnen ermöglicht, Ihre FastAPI-Anwendung auf FastAPI Cloud bereitzustellen.",
            "List:\nDies beinhaltet fastapi-cloud-cli, das es Ihnen ermöglicht, Ihre FastAPI-Anwendung auf FastAPI Cloud bereitzustellen."
          ],
          "section_id": 17,
          "content_text": "Wenn Sie FastAPI mit pip install \"fastapi[standard]\" installieren, kommt es mit der -Gruppe optionaler Abhängigkeiten:\n\nVerwendet von Pydantic:\n\nList:\nemail-validator – für E-Mail-Validierung.\n\nVerwendet von Starlette:\n\nList:\n– erforderlich, wenn Sie den TestClient verwenden möchten.\n – erforderlich, wenn Sie die Default-Template-Konfiguration verwenden möchten.\npython-multipart – erforderlich, wenn Sie Formulare mittels request.form()  möchten.\n\nVerwendet von FastAPI:\n\nList:\n– für den Server, der Ihre Anwendung lädt und bereitstellt. Dies umfasst uvicorn[standard], das einige Abhängigkeiten (z. B. ) beinhaltet, die für eine Bereitstellung mit hoher Performanz benötigt werden.\nfastapi-cli[standard] – um den -Befehl bereitzustellen.\nDies beinhaltet fastapi-cloud-cli, das es Ihnen ermöglicht, Ihre FastAPI-Anwendung auf FastAPI Cloud bereitzustellen.\n\nList:\nDies beinhaltet fastapi-cloud-cli, das es Ihnen ermöglicht, Ihre FastAPI-Anwendung auf FastAPI Cloud bereitzustellen.",
          "word_count": 118
        },
        {
          "title": "Ohne -Abhängigkeiten",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Wenn Sie die  optionalen Abhängigkeiten nicht einschließen möchten, können Sie mit pip install fastapi statt pip install \"fastapi[standard]\" installieren."
          ],
          "section_id": 18,
          "content_text": "Wenn Sie die  optionalen Abhängigkeiten nicht einschließen möchten, können Sie mit pip install fastapi statt pip install \"fastapi[standard]\" installieren.",
          "word_count": 19
        },
        {
          "title": "Ohne fastapi-cloud-cli",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Wenn Sie FastAPI mit den Standardabhängigkeiten, aber ohne das fastapi-cloud-cli installieren möchten, können Sie mit pip install \"fastapi[standard-no-fastapi-cloud-cli]\" installieren."
          ],
          "section_id": 19,
          "content_text": "Wenn Sie FastAPI mit den Standardabhängigkeiten, aber ohne das fastapi-cloud-cli installieren möchten, können Sie mit pip install \"fastapi[standard-no-fastapi-cloud-cli]\" installieren.",
          "word_count": 19
        },
        {
          "title": "Zusätzliche optionale Abhängigkeiten",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Es gibt einige zusätzliche Abhängigkeiten, die Sie installieren möchten.",
            "Zusätzliche optionale Pydantic-Abhängigkeiten:",
            "List:\npydantic-settings – für die Verwaltung von Einstellungen.\npydantic-extra-types – für zusätzliche Typen zur Verwendung mit Pydantic.",
            "Zusätzliche optionale FastAPI-Abhängigkeiten:",
            "List:\n– erforderlich, wenn Sie ORJSONResponse verwenden möchten.\n – erforderlich, wenn Sie UJSONResponse verwenden möchten."
          ],
          "section_id": 20,
          "content_text": "Es gibt einige zusätzliche Abhängigkeiten, die Sie installieren möchten.\n\nZusätzliche optionale Pydantic-Abhängigkeiten:\n\nList:\npydantic-settings – für die Verwaltung von Einstellungen.\npydantic-extra-types – für zusätzliche Typen zur Verwendung mit Pydantic.\n\nZusätzliche optionale FastAPI-Abhängigkeiten:\n\nList:\n– erforderlich, wenn Sie ORJSONResponse verwenden möchten.\n – erforderlich, wenn Sie UJSONResponse verwenden möchten.",
          "word_count": 47
        },
        {
          "title": "Lizenz",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/de/",
          "content": [
            "Dieses Projekt ist unter den Bedingungen der MIT-Lizenz lizenziert."
          ],
          "section_id": 21,
          "content_text": "Dieses Projekt ist unter den Bedingungen der MIT-Lizenz lizenziert.",
          "word_count": 9
        }
      ],
      "total_sections": 21
    },
    {
      "url": "https://fastapi.tiangolo.com/es/",
      "page_title": "FastAPI",
      "domain": "fastapi.tiangolo.com",
      "sections": [
        {
          "title": "FastAPI",
          "level": 1,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "FastAPI framework, alto rendimiento, fácil de aprender, rápido de programar, listo para producción",
            "Documentación: https://fastapi.tiangolo.com",
            "Código Fuente: https://github.com/fastapi/fastapi",
            "FastAPI es un framework web moderno, rápido (de alto rendimiento), para construir APIs con Python basado en las anotaciones de tipos estándar de Python.",
            "Las características clave son:",
            "List:\n: Muy alto rendimiento, a la par con  y  (gracias a Starlette y Pydantic). Uno de los frameworks Python más rápidos disponibles.\nRápido de programar: Aumenta la velocidad para desarrollar funcionalidades en aproximadamente un 200% a 300%. *\nMenos bugs: Reduce en aproximadamente un 40% los errores inducidos por humanos (desarrolladores). *\n: Gran soporte para editores. Autocompletado en todas partes. Menos tiempo depurando.\n: Diseñado para ser fácil de usar y aprender. Menos tiempo leyendo documentación.\n: Minimiza la duplicación de código. Múltiples funcionalidades desde cada declaración de parámetro. Menos bugs.\n: Obtén código listo para producción. Con documentación interactiva automática.\nBasado en estándares: Basado (y completamente compatible) con los estándares abiertos para APIs:  (anteriormente conocido como Swagger) y JSON Schema.",
            "* estimación basada en pruebas con un equipo de desarrollo interno, construyendo aplicaciones de producción."
          ],
          "section_id": 1,
          "content_text": "FastAPI framework, alto rendimiento, fácil de aprender, rápido de programar, listo para producción\n\nDocumentación: https://fastapi.tiangolo.com\n\nCódigo Fuente: https://github.com/fastapi/fastapi\n\nFastAPI es un framework web moderno, rápido (de alto rendimiento), para construir APIs con Python basado en las anotaciones de tipos estándar de Python.\n\nLas características clave son:\n\nList:\n: Muy alto rendimiento, a la par con  y  (gracias a Starlette y Pydantic). Uno de los frameworks Python más rápidos disponibles.\nRápido de programar: Aumenta la velocidad para desarrollar funcionalidades en aproximadamente un 200% a 300%. *\nMenos bugs: Reduce en aproximadamente un 40% los errores inducidos por humanos (desarrolladores). *\n: Gran soporte para editores. Autocompletado en todas partes. Menos tiempo depurando.\n: Diseñado para ser fácil de usar y aprender. Menos tiempo leyendo documentación.\n: Minimiza la duplicación de código. Múltiples funcionalidades desde cada declaración de parámetro. Menos bugs.\n: Obtén código listo para producción. Con documentación interactiva automática.\nBasado en estándares: Basado (y completamente compatible) con los estándares abiertos para APIs:  (anteriormente conocido como Swagger) y JSON Schema.\n\n* estimación basada en pruebas con un equipo de desarrollo interno, construyendo aplicaciones de producción.",
          "word_count": 184
        },
        {
          "title": "Opiniones",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "\"[...] Estoy usando  un montón estos días. [...] De hecho, estoy planeando usarlo para todos los servicios de ML de mi equipo en Microsoft. Algunos de ellos se están integrando en el núcleo del producto  y algunos productos de .\"",
            "\"Adoptamos el paquete  para crear un servidor  que pueda ser consultado para obtener predicciones. [para Ludwig]\"",
            "\" se complace en anunciar el lanzamiento de código abierto de nuestro framework de orquestación de gestión de crisis: ! [construido con ]\"",
            "\"Estoy súper emocionado con . ¡Es tan divertido!\"",
            "\"Honestamente, lo que has construido parece súper sólido y pulido. En muchos aspectos, es lo que quería que  fuera; es realmente inspirador ver a alguien construir eso.\"",
            "\"Si estás buscando aprender un framework moderno para construir APIs REST, échale un vistazo a  [...] Es rápido, fácil de usar y fácil de aprender [...]\"",
            "\"Nos hemos cambiado a  para nuestras  [...] Creo que te gustará [...]\"",
            "\"Si alguien está buscando construir una API de Python para producción, altamente recomendaría . Está hermosamente diseñado, es simple de usar y altamente escalable, se ha convertido en un componente clave en nuestra estrategia de desarrollo API primero y está impulsando muchas automatizaciones y servicios como nuestro Ingeniero Virtual TAC.\""
          ],
          "section_id": 2,
          "content_text": "\"[...] Estoy usando  un montón estos días. [...] De hecho, estoy planeando usarlo para todos los servicios de ML de mi equipo en Microsoft. Algunos de ellos se están integrando en el núcleo del producto  y algunos productos de .\"\n\n\"Adoptamos el paquete  para crear un servidor  que pueda ser consultado para obtener predicciones. [para Ludwig]\"\n\n\" se complace en anunciar el lanzamiento de código abierto de nuestro framework de orquestación de gestión de crisis: ! [construido con ]\"\n\n\"Estoy súper emocionado con . ¡Es tan divertido!\"\n\n\"Honestamente, lo que has construido parece súper sólido y pulido. En muchos aspectos, es lo que quería que  fuera; es realmente inspirador ver a alguien construir eso.\"\n\n\"Si estás buscando aprender un framework moderno para construir APIs REST, échale un vistazo a  [...] Es rápido, fácil de usar y fácil de aprender [...]\"\n\n\"Nos hemos cambiado a  para nuestras  [...] Creo que te gustará [...]\"\n\n\"Si alguien está buscando construir una API de Python para producción, altamente recomendaría . Está hermosamente diseñado, es simple de usar y altamente escalable, se ha convertido en un componente clave en nuestra estrategia de desarrollo API primero y está impulsando muchas automatizaciones y servicios como nuestro Ingeniero Virtual TAC.\"",
          "word_count": 202
        },
        {
          "title": ", el FastAPI de las CLIs",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "Si estás construyendo una aplicación de  para ser usada en el terminal en lugar de una API web, revisa .",
            "es el hermano pequeño de FastAPI. Y está destinado a ser el FastAPI de las CLIs. ⌨️ 🚀"
          ],
          "section_id": 3,
          "content_text": "Si estás construyendo una aplicación de  para ser usada en el terminal en lugar de una API web, revisa .\n\nes el hermano pequeño de FastAPI. Y está destinado a ser el FastAPI de las CLIs. ⌨️ 🚀",
          "word_count": 38
        },
        {
          "title": "Requisitos",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "FastAPI se apoya en hombros de gigantes:",
            "List:\npara las partes web.\n para las partes de datos."
          ],
          "section_id": 4,
          "content_text": "FastAPI se apoya en hombros de gigantes:\n\nList:\npara las partes web.\n para las partes de datos.",
          "word_count": 17
        },
        {
          "title": "Instalación",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "Crea y activa un entorno virtual y luego instala FastAPI:",
            "Code example:\npipinstall\"fastapi[standard]\"",
            ": Asegúrate de poner \"fastapi[standard]\" entre comillas para asegurar que funcione en todas las terminales."
          ],
          "section_id": 5,
          "content_text": "Crea y activa un entorno virtual y luego instala FastAPI:\n\nCode example:\npipinstall\"fastapi[standard]\"\n\n: Asegúrate de poner \"fastapi[standard]\" entre comillas para asegurar que funcione en todas las terminales.",
          "word_count": 28
        },
        {
          "title": "Créalo",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "List:\nCrea un archivo  con:",
            "Si tu código usa  / , usa :",
            "Si no lo sabes, revisa la sección \"¿Con prisa?\" sobre  y  en la documentación."
          ],
          "section_id": 6,
          "content_text": "List:\nCrea un archivo  con:\n\nSi tu código usa  / , usa :\n\nSi no lo sabes, revisa la sección \"¿Con prisa?\" sobre  y  en la documentación.",
          "word_count": 27
        },
        {
          "title": "Córrelo",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "Corre el servidor con:",
            "Code example:\nfastapidevmain.py\n ╭────────── FastAPI CLI - Development mode ───────────╮\n │                                                     │\n │  Serving at: http://127.0.0.1:8000                  │\n │                                                     │\n │  API docs: http://127.0.0.1:8000/docs               │\n │                                                     │\n │  Running in development mode, for production use:   │\n │                                                     │\n │  fastapi run                                        │\n │                                                     │\n ╰─────────────────────────────────────────────────────╯\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
            "El comando fastapi dev lee tu archivo , detecta la app  en él y arranca un servidor usando .",
            "Por defecto, fastapi dev comenzará con auto-recarga habilitada para el desarrollo local.",
            "Puedes leer más sobre esto en la documentación del CLI de FastAPI."
          ],
          "section_id": 7,
          "content_text": "Corre el servidor con:\n\nCode example:\nfastapidevmain.py\n ╭────────── FastAPI CLI - Development mode ───────────╮\n │                                                     │\n │  Serving at: http://127.0.0.1:8000                  │\n │                                                     │\n │  API docs: http://127.0.0.1:8000/docs               │\n │                                                     │\n │  Running in development mode, for production use:   │\n │                                                     │\n │  fastapi run                                        │\n │                                                     │\n ╰─────────────────────────────────────────────────────╯\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n\nEl comando fastapi dev lee tu archivo , detecta la app  en él y arranca un servidor usando .\n\nPor defecto, fastapi dev comenzará con auto-recarga habilitada para el desarrollo local.\n\nPuedes leer más sobre esto en la documentación del CLI de FastAPI.",
          "word_count": 130
        },
        {
          "title": "Revísalo",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "Abre tu navegador en http://127.0.0.1:8000/items/5?q=somequery.",
            "Verás el response JSON como:",
            "Ya creaste una API que:",
            "List:\nRecibe requests HTTP en los   y /items/{item_id}.\nAmbos  toman operaciones  (también conocidas como métodos HTTP).\nEl  /items/{item_id} tiene un parámetro de path  que debe ser un .\nEl  /items/{item_id} tiene un parámetro de query  opcional que es un ."
          ],
          "section_id": 8,
          "content_text": "Abre tu navegador en http://127.0.0.1:8000/items/5?q=somequery.\n\nVerás el response JSON como:\n\nYa creaste una API que:\n\nList:\nRecibe requests HTTP en los   y /items/{item_id}.\nAmbos  toman operaciones  (también conocidas como métodos HTTP).\nEl  /items/{item_id} tiene un parámetro de path  que debe ser un .\nEl  /items/{item_id} tiene un parámetro de query  opcional que es un .",
          "word_count": 55
        },
        {
          "title": "Documentación interactiva de la API",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "Ahora ve a http://127.0.0.1:8000/docs.",
            "Verás la documentación interactiva automática de la API (proporcionada por Swagger UI):"
          ],
          "section_id": 9,
          "content_text": "Ahora ve a http://127.0.0.1:8000/docs.\n\nVerás la documentación interactiva automática de la API (proporcionada por Swagger UI):",
          "word_count": 16
        },
        {
          "title": "Documentación de API Alternativa",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "Y ahora, ve a http://127.0.0.1:8000/redoc.",
            "Verás la documentación alternativa automática (proporcionada por ):"
          ],
          "section_id": 10,
          "content_text": "Y ahora, ve a http://127.0.0.1:8000/redoc.\n\nVerás la documentación alternativa automática (proporcionada por ):",
          "word_count": 13
        },
        {
          "title": "Actualización del Ejemplo",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "Ahora modifica el archivo  para recibir un body desde un request .",
            "Declara el body usando tipos estándar de Python, gracias a Pydantic.",
            "Code example:\nupdate_item   \n     \"item_name\"",
            "El servidor fastapi dev debería recargarse automáticamente."
          ],
          "section_id": 11,
          "content_text": "Ahora modifica el archivo  para recibir un body desde un request .\n\nDeclara el body usando tipos estándar de Python, gracias a Pydantic.\n\nCode example:\nupdate_item   \n     \"item_name\"\n\nEl servidor fastapi dev debería recargarse automáticamente.",
          "word_count": 34
        },
        {
          "title": "Actualización de la Documentación Interactiva de la API",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "Ahora ve a http://127.0.0.1:8000/docs.",
            "List:\nLa documentación interactiva de la API se actualizará automáticamente, incluyendo el nuevo body:",
            "List:\nHaz clic en el botón \"Try it out\", te permite llenar los parámetros e interactuar directamente con la API:",
            "List:\nLuego haz clic en el botón \"Execute\", la interfaz de usuario se comunicará con tu API, enviará los parámetros, obtendrá los resultados y los mostrará en la pantalla:"
          ],
          "section_id": 12,
          "content_text": "Ahora ve a http://127.0.0.1:8000/docs.\n\nList:\nLa documentación interactiva de la API se actualizará automáticamente, incluyendo el nuevo body:\n\nList:\nHaz clic en el botón \"Try it out\", te permite llenar los parámetros e interactuar directamente con la API:\n\nList:\nLuego haz clic en el botón \"Execute\", la interfaz de usuario se comunicará con tu API, enviará los parámetros, obtendrá los resultados y los mostrará en la pantalla:",
          "word_count": 67
        },
        {
          "title": "Actualización de la Documentación Alternativa de la API",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "Y ahora, ve a http://127.0.0.1:8000/redoc.",
            "List:\nLa documentación alternativa también reflejará el nuevo parámetro de query y body:"
          ],
          "section_id": 13,
          "content_text": "Y ahora, ve a http://127.0.0.1:8000/redoc.\n\nList:\nLa documentación alternativa también reflejará el nuevo parámetro de query y body:",
          "word_count": 18
        },
        {
          "title": "Resumen",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "En resumen, declaras  los tipos de parámetros, body, etc. como parámetros de función.",
            "Lo haces con tipos estándar modernos de Python.",
            "No tienes que aprender una nueva sintaxis, los métodos o clases de un paquete específico, etc.",
            "Por ejemplo, para un :",
            "o para un modelo  más complejo:",
            "...y con esa única declaración obtienes:",
            "List:\nSoporte para editores, incluyendo:\nAutocompletado.\nChequeo de tipos.\n\n\nValidación de datos:\nErrores automáticos y claros cuando los datos son inválidos.\nValidación incluso para objetos JSON profundamente anidados.\n\n\nConversión de datos de entrada: de la red a los datos y tipos de Python. Leyendo desde:\n\nParámetros de path.\nParámetros de query.\n\n\n\n\n\n\nConversión de datos de salida: convirtiendo de datos y tipos de Python a datos de red (como JSON):\nConvertir tipos de Python (, , , , , etc).\nObjetos .\nObjetos .\nModelos de base de datos.\n...y muchos más.\n\n\nDocumentación interactiva automática de la API, incluyendo 2 interfaces de usuario alternativas:\nSwagger UI.",
            "List:\nAutocompletado.\nChequeo de tipos.",
            "List:\nErrores automáticos y claros cuando los datos son inválidos.\nValidación incluso para objetos JSON profundamente anidados.",
            "List:\nParámetros de path.\nParámetros de query.",
            "List:\nConvertir tipos de Python (, , , , , etc).\nObjetos .\nObjetos .\nModelos de base de datos.\n...y muchos más.",
            "Volviendo al ejemplo de código anterior, :",
            "List:\nValidará que haya un  en el path para requests  y .\nValidará que el  sea del tipo  para requests  y .\nSi no lo es, el cliente verá un error útil y claro.\n\n\nComprobará si hay un parámetro de query opcional llamado  (como en http://127.0.0.1:8000/items/foo?q=somequery) para requests .\nComo el parámetro  está declarado con , es opcional.\nSin el  sería requerido (como lo es el body en el caso con ).\n\n\nPara requests  a /items/{item_id}, leerá el body como JSON:\nComprobará que tiene un atributo requerido  que debe ser un .\nComprobará que tiene un atributo requerido  que debe ser un .\nComprobará que tiene un atributo opcional , que debe ser un , si está presente.\nTodo esto también funcionaría para objetos JSON profundamente anidados.\n\n\nConvertirá de y a JSON automáticamente.\nDocumentará todo con OpenAPI, que puede ser usado por:\nSistemas de documentación interactiva.\nSistemas de generación automática de código cliente, para muchos lenguajes.\n\n\nProporcionará 2 interfaces web de documentación interactiva directamente.",
            "List:\nSi no lo es, el cliente verá un error útil y claro.",
            "List:\nComo el parámetro  está declarado con , es opcional.\nSin el  sería requerido (como lo es el body en el caso con ).",
            "List:\nComprobará que tiene un atributo requerido  que debe ser un .\nComprobará que tiene un atributo requerido  que debe ser un .\nComprobará que tiene un atributo opcional , que debe ser un , si está presente.\nTodo esto también funcionaría para objetos JSON profundamente anidados.",
            "List:\nSistemas de documentación interactiva.\nSistemas de generación automática de código cliente, para muchos lenguajes.",
            "Solo tocamos los conceptos básicos, pero ya te haces una idea de cómo funciona todo.",
            "Intenta cambiar la línea con:",
            "...y observa cómo tu editor autocompleta los atributos y conoce sus tipos:",
            "Para un ejemplo más completo incluyendo más funcionalidades, ve al Tutorial - Guía del Usuario.",
            "Alerta de spoilers: el tutorial - guía del usuario incluye:",
            "List:\nDeclaración de parámetros desde otros lugares diferentes como: , , campos de formulario y .\nCómo establecer restricciones de validación como maximum_length o .\nUn sistema de Inyección de Dependencias muy poderoso y fácil de usar.\nSeguridad y autenticación, incluyendo soporte para  con tokens JWT y autenticación HTTP Basic.\nTécnicas más avanzadas (pero igualmente fáciles) para declarar modelos JSON profundamente anidados (gracias a Pydantic).\nIntegración con  usando Strawberry y otros paquetes.\nMuchas funcionalidades extra (gracias a Starlette) como:\nWebSockets\npruebas extremadamente fáciles basadas en HTTPX y \n\nSesiones de Cookies",
            "List:\nWebSockets\npruebas extremadamente fáciles basadas en HTTPX y \n\nSesiones de Cookies"
          ],
          "section_id": 14,
          "content_text": "En resumen, declaras  los tipos de parámetros, body, etc. como parámetros de función.\n\nLo haces con tipos estándar modernos de Python.\n\nNo tienes que aprender una nueva sintaxis, los métodos o clases de un paquete específico, etc.\n\nPor ejemplo, para un :\n\no para un modelo  más complejo:\n\n...y con esa única declaración obtienes:\n\nList:\nSoporte para editores, incluyendo:\nAutocompletado.\nChequeo de tipos.\n\n\nValidación de datos:\nErrores automáticos y claros cuando los datos son inválidos.\nValidación incluso para objetos JSON profundamente anidados.\n\n\nConversión de datos de entrada: de la red a los datos y tipos de Python. Leyendo desde:\n\nParámetros de path.\nParámetros de query.\n\n\n\n\n\n\nConversión de datos de salida: convirtiendo de datos y tipos de Python a datos de red (como JSON):\nConvertir tipos de Python (, , , , , etc).\nObjetos .\nObjetos .\nModelos de base de datos.\n...y muchos más.\n\n\nDocumentación interactiva automática de la API, incluyendo 2 interfaces de usuario alternativas:\nSwagger UI.\n\nList:\nAutocompletado.\nChequeo de tipos.\n\nList:\nErrores automáticos y claros cuando los datos son inválidos.\nValidación incluso para objetos JSON profundamente anidados.\n\nList:\nParámetros de path.\nParámetros de query.\n\nList:\nConvertir tipos de Python (, , , , , etc).\nObjetos .\nObjetos .\nModelos de base de datos.\n...y muchos más.\n\nVolviendo al ejemplo de código anterior, :\n\nList:\nValidará que haya un  en el path para requests  y .\nValidará que el  sea del tipo  para requests  y .\nSi no lo es, el cliente verá un error útil y claro.\n\n\nComprobará si hay un parámetro de query opcional llamado  (como en http://127.0.0.1:8000/items/foo?q=somequery) para requests .\nComo el parámetro  está declarado con , es opcional.\nSin el  sería requerido (como lo es el body en el caso con ).\n\n\nPara requests  a /items/{item_id}, leerá el body como JSON:\nComprobará que tiene un atributo requerido  que debe ser un .\nComprobará que tiene un atributo requerido  que debe ser un .\nComprobará que tiene un atributo opcional , que debe ser un , si está presente.\nTodo esto también funcionaría para objetos JSON profundamente anidados.\n\n\nConvertirá de y a JSON automáticamente.\nDocumentará todo con OpenAPI, que puede ser usado por:\nSistemas de documentación interactiva.\nSistemas de generación automática de código cliente, para muchos lenguajes.\n\n\nProporcionará 2 interfaces web de documentación interactiva directamente.\n\nList:\nSi no lo es, el cliente verá un error útil y claro.\n\nList:\nComo el parámetro  está declarado con , es opcional.\nSin el  sería requerido (como lo es el body en el caso con ).\n\nList:\nComprobará que tiene un atributo requerido  que debe ser un .\nComprobará que tiene un atributo requerido  que debe ser un .\nComprobará que tiene un atributo opcional , que debe ser un , si está presente.\nTodo esto también funcionaría para objetos JSON profundamente anidados.\n\nList:\nSistemas de documentación interactiva.\nSistemas de generación automática de código cliente, para muchos lenguajes.\n\nSolo tocamos los conceptos básicos, pero ya te haces una idea de cómo funciona todo.\n\nIntenta cambiar la línea con:\n\n...y observa cómo tu editor autocompleta los atributos y conoce sus tipos:\n\nPara un ejemplo más completo incluyendo más funcionalidades, ve al Tutorial - Guía del Usuario.\n\nAlerta de spoilers: el tutorial - guía del usuario incluye:\n\nList:\nDeclaración de parámetros desde otros lugares diferentes como: , , campos de formulario y .\nCómo establecer restricciones de validación como maximum_length o .\nUn sistema de Inyección de Dependencias muy poderoso y fácil de usar.\nSeguridad y autenticación, incluyendo soporte para  con tokens JWT y autenticación HTTP Basic.\nTécnicas más avanzadas (pero igualmente fáciles) para declarar modelos JSON profundamente anidados (gracias a Pydantic).\nIntegración con  usando Strawberry y otros paquetes.\nMuchas funcionalidades extra (gracias a Starlette) como:\nWebSockets\npruebas extremadamente fáciles basadas en HTTPX y \n\nSesiones de Cookies\n\nList:\nWebSockets\npruebas extremadamente fáciles basadas en HTTPX y \n\nSesiones de Cookies",
          "word_count": 640
        },
        {
          "title": "Rendimiento",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "Benchmarks independientes de TechEmpower muestran aplicaciones  ejecutándose bajo Uvicorn como uno de los frameworks Python más rápidos disponibles, solo por debajo de Starlette y Uvicorn (usados internamente por FastAPI). (*)",
            "Para entender más sobre esto, ve la sección Benchmarks."
          ],
          "section_id": 15,
          "content_text": "Benchmarks independientes de TechEmpower muestran aplicaciones  ejecutándose bajo Uvicorn como uno de los frameworks Python más rápidos disponibles, solo por debajo de Starlette y Uvicorn (usados internamente por FastAPI). (*)\n\nPara entender más sobre esto, ve la sección Benchmarks.",
          "word_count": 39
        },
        {
          "title": "Dependencias",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "FastAPI depende de Pydantic y Starlette."
          ],
          "section_id": 16,
          "content_text": "FastAPI depende de Pydantic y Starlette.",
          "word_count": 6
        },
        {
          "title": "Dependencias",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "Cuando instalas FastAPI con pip install \"fastapi[standard]\" viene con el grupo  de dependencias opcionales:",
            "List:\nemail-validator - para validación de correos electrónicos.",
            "Usadas por Starlette:",
            "List:\n- Requerido si deseas usar el TestClient.\n - Requerido si deseas usar la configuración de plantilla predeterminada.\npython-multipart - Requerido si deseas soportar  de forms, con request.form().",
            "Usadas por FastAPI / Starlette:",
            "List:\n- para el servidor que carga y sirve tu aplicación. Esto incluye uvicorn[standard], que incluye algunas dependencias (por ejemplo, ) necesarias para servir con alto rendimiento.\nfastapi-cli - para proporcionar el comando ."
          ],
          "section_id": 17,
          "content_text": "Cuando instalas FastAPI con pip install \"fastapi[standard]\" viene con el grupo  de dependencias opcionales:\n\nList:\nemail-validator - para validación de correos electrónicos.\n\nUsadas por Starlette:\n\nList:\n- Requerido si deseas usar el TestClient.\n - Requerido si deseas usar la configuración de plantilla predeterminada.\npython-multipart - Requerido si deseas soportar  de forms, con request.form().\n\nUsadas por FastAPI / Starlette:\n\nList:\n- para el servidor que carga y sirve tu aplicación. Esto incluye uvicorn[standard], que incluye algunas dependencias (por ejemplo, ) necesarias para servir con alto rendimiento.\nfastapi-cli - para proporcionar el comando .",
          "word_count": 92
        },
        {
          "title": "Sin Dependencias",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "Si no deseas incluir las dependencias opcionales , puedes instalar con pip install fastapi en lugar de pip install \"fastapi[standard]\"."
          ],
          "section_id": 18,
          "content_text": "Si no deseas incluir las dependencias opcionales , puedes instalar con pip install fastapi en lugar de pip install \"fastapi[standard]\".",
          "word_count": 20
        },
        {
          "title": "Dependencias Opcionales Adicionales",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "Existen algunas dependencias adicionales que podrías querer instalar.",
            "Dependencias opcionales adicionales de Pydantic:",
            "List:\npydantic-settings - para la gestión de configuraciones.\npydantic-extra-types - para tipos extra para ser usados con Pydantic.",
            "Dependencias opcionales adicionales de FastAPI:",
            "List:\n- Requerido si deseas usar ORJSONResponse.\n - Requerido si deseas usar UJSONResponse."
          ],
          "section_id": 19,
          "content_text": "Existen algunas dependencias adicionales que podrías querer instalar.\n\nDependencias opcionales adicionales de Pydantic:\n\nList:\npydantic-settings - para la gestión de configuraciones.\npydantic-extra-types - para tipos extra para ser usados con Pydantic.\n\nDependencias opcionales adicionales de FastAPI:\n\nList:\n- Requerido si deseas usar ORJSONResponse.\n - Requerido si deseas usar UJSONResponse.",
          "word_count": 49
        },
        {
          "title": "Licencia",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/es/",
          "content": [
            "Este proyecto tiene licencia bajo los términos de la licencia MIT."
          ],
          "section_id": 20,
          "content_text": "Este proyecto tiene licencia bajo los términos de la licencia MIT.",
          "word_count": 11
        }
      ],
      "total_sections": 20
    },
    {
      "url": "https://fastapi.tiangolo.com/fa/",
      "page_title": "FastAPI",
      "domain": "fastapi.tiangolo.com",
      "sections": [
        {
          "title": "FastAPI",
          "level": 1,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "فریم‌ورک FastAPI، کارایی بالا، یادگیری آسان، کدنویسی سریع، آماده برای استفاده در محیط پروداکشن",
            ": https://fastapi.tiangolo.com",
            ": https://github.com/fastapi/fastapi",
            "FastAPI یک وب فریم‌ورک مدرن و سریع (با کارایی بالا) برای ایجاد APIهای متنوع (وب، وب‌سوکت و غبره) با زبان پایتون نسخه +۳.۶ است. این فریم‌ورک با رعایت کامل راهنمای نوع داده (Type Hint) ایجاد شده است.",
            "ویژگی‌های کلیدی این فریم‌ورک عبارتند از:",
            "List:\n: کارایی بسیار بالا و قابل مقایسه با   و  (با تشکر از Starlette و Pydantic). یکی از سریع‌ترین فریم‌ورک‌های پایتونی موجود.\n\n\nکدنویسی سریع: افزایش ۲۰۰ تا ۳۰۰ درصدی سرعت توسعه قابلیت‌های جدید. *\n\n: کاهش ۴۰ درصدی خطاهای انسانی (برنامه‌نویسی). *\n: پشتیبانی فوق‌العاده در محیط‌های توسعه یکپارچه (IDE).  در همه بخش‌های کد. کاهش زمان رفع باگ.\n: طراحی شده برای یادگیری و استفاده آسان. کاهش زمان مورد نیاز برای مراجعه به مستندات.\n: کاهش تکرار در کد. چندین قابلیت برای هر پارامتر (منظور پارامترهای ورودی تابع هندلر می‌باشد، به بخش  در همین صفحه مراجعه شود). باگ کمتر.\n: ایجاد کدی آماده برای استفاده در محیط پروداکشن و تولید خودکار مستندات تعاملی\nمبتنی بر استانداردها: مبتنی بر (و منطبق با) استانداردهای متن باز مربوط به API:  (سوگر سابق) و JSON Schema.",
            ": کارایی بسیار بالا و قابل مقایسه با   و  (با تشکر از Starlette و Pydantic). یکی از سریع‌ترین فریم‌ورک‌های پایتونی موجود.",
            "کدنویسی سریع: افزایش ۲۰۰ تا ۳۰۰ درصدی سرعت توسعه قابلیت‌های جدید. *",
            "* تخمین‌ها بر اساس تست‌های انجام شده در یک تیم توسعه داخلی که مشغول ایجاد برنامه‌های کاربردی واقعی بودند صورت گرفته است."
          ],
          "section_id": 1,
          "content_text": "فریم‌ورک FastAPI، کارایی بالا، یادگیری آسان، کدنویسی سریع، آماده برای استفاده در محیط پروداکشن\n\n: https://fastapi.tiangolo.com\n\n: https://github.com/fastapi/fastapi\n\nFastAPI یک وب فریم‌ورک مدرن و سریع (با کارایی بالا) برای ایجاد APIهای متنوع (وب، وب‌سوکت و غبره) با زبان پایتون نسخه +۳.۶ است. این فریم‌ورک با رعایت کامل راهنمای نوع داده (Type Hint) ایجاد شده است.\n\nویژگی‌های کلیدی این فریم‌ورک عبارتند از:\n\nList:\n: کارایی بسیار بالا و قابل مقایسه با   و  (با تشکر از Starlette و Pydantic). یکی از سریع‌ترین فریم‌ورک‌های پایتونی موجود.\n\n\nکدنویسی سریع: افزایش ۲۰۰ تا ۳۰۰ درصدی سرعت توسعه قابلیت‌های جدید. *\n\n: کاهش ۴۰ درصدی خطاهای انسانی (برنامه‌نویسی). *\n: پشتیبانی فوق‌العاده در محیط‌های توسعه یکپارچه (IDE).  در همه بخش‌های کد. کاهش زمان رفع باگ.\n: طراحی شده برای یادگیری و استفاده آسان. کاهش زمان مورد نیاز برای مراجعه به مستندات.\n: کاهش تکرار در کد. چندین قابلیت برای هر پارامتر (منظور پارامترهای ورودی تابع هندلر می‌باشد، به بخش  در همین صفحه مراجعه شود). باگ کمتر.\n: ایجاد کدی آماده برای استفاده در محیط پروداکشن و تولید خودکار مستندات تعاملی\nمبتنی بر استانداردها: مبتنی بر (و منطبق با) استانداردهای متن باز مربوط به API:  (سوگر سابق) و JSON Schema.\n\n: کارایی بسیار بالا و قابل مقایسه با   و  (با تشکر از Starlette و Pydantic). یکی از سریع‌ترین فریم‌ورک‌های پایتونی موجود.\n\nکدنویسی سریع: افزایش ۲۰۰ تا ۳۰۰ درصدی سرعت توسعه قابلیت‌های جدید. *\n\n* تخمین‌ها بر اساس تست‌های انجام شده در یک تیم توسعه داخلی که مشغول ایجاد برنامه‌های کاربردی واقعی بودند صورت گرفته است.",
          "word_count": 248
        },
        {
          "title": ", فریم‌ورکی معادل FastAPI برای کار با واسط خط فرمان",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "اگر در حال ساختن برنامه‌ای برای استفاده در  (به جای استفاده در وب) هستید، می‌توانید از . استفاده کنید.",
            "دوقلوی کوچکتر FastAPI است و قرار است معادلی برای FastAPI در برنامه‌های CLI باشد.️ 🚀"
          ],
          "section_id": 2,
          "content_text": "اگر در حال ساختن برنامه‌ای برای استفاده در  (به جای استفاده در وب) هستید، می‌توانید از . استفاده کنید.\n\nدوقلوی کوچکتر FastAPI است و قرار است معادلی برای FastAPI در برنامه‌های CLI باشد.️ 🚀",
          "word_count": 34
        },
        {
          "title": "نیازمندی‌ها",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "FastAPI مبتنی بر ابزارهای قدرتمند زیر است:",
            "List:\nفریم‌ورک  برای بخش وب.\nکتابخانه  برای بخش داده‌."
          ],
          "section_id": 3,
          "content_text": "FastAPI مبتنی بر ابزارهای قدرتمند زیر است:\n\nList:\nفریم‌ورک  برای بخش وب.\nکتابخانه  برای بخش داده‌.",
          "word_count": 16
        },
        {
          "title": "نصب",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "نصب یک سرور پروداکشن نظیر  یا  نیز جزء نیازمندی‌هاست.",
            "Code example:\npipinstall\"uvicorn[standard]\""
          ],
          "section_id": 4,
          "content_text": "نصب یک سرور پروداکشن نظیر  یا  نیز جزء نیازمندی‌هاست.\n\nCode example:\npipinstall\"uvicorn[standard]\"",
          "word_count": 12
        },
        {
          "title": "ایجاد کنید",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "List:\nفایلی به نام  با محتوای زیر ایجاد کنید:",
            "اگر در کدتان از  /  استفاده می‌کنید، از  برای تعریف تابع خود استفاده کنید:",
            "اگر با async / await آشنا نیستید، به بخش \"عجله‌ دارید?\" در صفحه درباره  و  در مستندات مراجعه کنید."
          ],
          "section_id": 5,
          "content_text": "List:\nفایلی به نام  با محتوای زیر ایجاد کنید:\n\nاگر در کدتان از  /  استفاده می‌کنید، از  برای تعریف تابع خود استفاده کنید:\n\nاگر با async / await آشنا نیستید، به بخش \"عجله‌ دارید?\" در صفحه درباره  و  در مستندات مراجعه کنید.",
          "word_count": 42
        },
        {
          "title": "اجرا کنید",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "با استفاده از دستور زیر سرور را اجرا کنید:",
            "Code example:\nuvicornmain:app--reload\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
            "دستور uvicorn main:app شامل موارد زیر است:",
            "List:\n: فایل  (ماژول پایتون ایجاد شده).\n: شیء ایجاد شده در فایل  در خط app = FastAPI().\n: ریستارت کردن سرور با تغییر کد. تنها در هنگام توسعه از این گزینه استفاده شود.."
          ],
          "section_id": 6,
          "content_text": "با استفاده از دستور زیر سرور را اجرا کنید:\n\nCode example:\nuvicornmain:app--reload\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n\nدستور uvicorn main:app شامل موارد زیر است:\n\nList:\n: فایل  (ماژول پایتون ایجاد شده).\n: شیء ایجاد شده در فایل  در خط app = FastAPI().\n: ریستارت کردن سرور با تغییر کد. تنها در هنگام توسعه از این گزینه استفاده شود..",
          "word_count": 81
        },
        {
          "title": "بررسی کنید",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "آدرس http://127.0.0.1:8000/items/5?q=somequery را در مرورگر خود باز کنید.",
            "پاسخ JSON زیر را مشاهده خواهید کرد:",
            "تا اینجا شما APIای ساختید که:",
            "List:\nدرخواست‌های HTTP به   و /items/{item_id} را دریافت می‌کند.\nهردو    (یا HTTP )  را پشتیبانی می‌کند.\n /items/{item_id} شامل  پارامتر مسیر  از نوع  است.\n /items/{item_id} شامل  پارامتر پرسمان اختیاری  از نوع  است."
          ],
          "section_id": 7,
          "content_text": "آدرس http://127.0.0.1:8000/items/5?q=somequery را در مرورگر خود باز کنید.\n\nپاسخ JSON زیر را مشاهده خواهید کرد:\n\nتا اینجا شما APIای ساختید که:\n\nList:\nدرخواست‌های HTTP به   و /items/{item_id} را دریافت می‌کند.\nهردو    (یا HTTP )  را پشتیبانی می‌کند.\n /items/{item_id} شامل  پارامتر مسیر  از نوع  است.\n /items/{item_id} شامل  پارامتر پرسمان اختیاری  از نوع  است.",
          "word_count": 52
        },
        {
          "title": "مستندات API تعاملی",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "حال به آدرس  http://127.0.0.1:8000/docs بروید.",
            "مستندات API تعاملی (ایجاد شده به کمک Swagger UI) را مشاهده خواهید کرد:"
          ],
          "section_id": 8,
          "content_text": "حال به آدرس  http://127.0.0.1:8000/docs بروید.\n\nمستندات API تعاملی (ایجاد شده به کمک Swagger UI) را مشاهده خواهید کرد:",
          "word_count": 18
        },
        {
          "title": "مستندات API جایگزین",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "حال به آدرس  http://127.0.0.1:8000/redoc بروید.",
            "مستندات خودکار دیگری را مشاهده خواهید کرد که به کمک  ایجاد می‌شود:"
          ],
          "section_id": 9,
          "content_text": "حال به آدرس  http://127.0.0.1:8000/redoc بروید.\n\nمستندات خودکار دیگری را مشاهده خواهید کرد که به کمک  ایجاد می‌شود:",
          "word_count": 17
        },
        {
          "title": "تغییر مثال",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "حال فایل  را مطابق زیر ویرایش کنید تا بتوانید  یک درخواست  را دریافت کنید.",
            "به کمک Pydantic بدنه درخواست را با  استاندارد پایتون تعریف کنید.",
            "Code example:\nupdate_item   \n     \"item_name\"",
            "سرور به صورت خودکار ری‌استارت می‌شود (زیرا پیشتر از گزینه  در دستور    استفاده کردیم)."
          ],
          "section_id": 10,
          "content_text": "حال فایل  را مطابق زیر ویرایش کنید تا بتوانید  یک درخواست  را دریافت کنید.\n\nبه کمک Pydantic بدنه درخواست را با  استاندارد پایتون تعریف کنید.\n\nCode example:\nupdate_item   \n     \"item_name\"\n\nسرور به صورت خودکار ری‌استارت می‌شود (زیرا پیشتر از گزینه  در دستور    استفاده کردیم).",
          "word_count": 43
        },
        {
          "title": "تغییر مستندات API تعاملی",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "مجددا به آدرس  http://127.0.0.1:8000/docs بروید.",
            "List:\nمستندات API تعاملی به صورت خودکار به‌روز شده است و شامل بدنه تعریف شده در مرحله قبل است:",
            "List:\nروی دکمه \"Try it out\" کلیک کنید، اکنون می‌توانید پارامترهای مورد نیاز هر API را مشخص کرده و به صورت مستقیم با آنها تعامل کنید:",
            "List:\nسپس روی دکمه \"Execute\" کلیک کنید، خواهید دید که واسط کاربری با APIهای تعریف شده ارتباط برقرار کرده، پارامترهای مورد نیاز را به آن‌ها ارسال می‌کند، سپس نتایج را دریافت کرده و در صفحه نشان می‌دهد:"
          ],
          "section_id": 11,
          "content_text": "مجددا به آدرس  http://127.0.0.1:8000/docs بروید.\n\nList:\nمستندات API تعاملی به صورت خودکار به‌روز شده است و شامل بدنه تعریف شده در مرحله قبل است:\n\nList:\nروی دکمه \"Try it out\" کلیک کنید، اکنون می‌توانید پارامترهای مورد نیاز هر API را مشخص کرده و به صورت مستقیم با آنها تعامل کنید:\n\nList:\nسپس روی دکمه \"Execute\" کلیک کنید، خواهید دید که واسط کاربری با APIهای تعریف شده ارتباط برقرار کرده، پارامترهای مورد نیاز را به آن‌ها ارسال می‌کند، سپس نتایج را دریافت کرده و در صفحه نشان می‌دهد:",
          "word_count": 87
        },
        {
          "title": "تغییر مستندات API جایگزین",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "حال به آدرس http://127.0.0.1:8000/redoc بروید.",
            "List:\nخواهید دید که مستندات جایگزین نیز به‌روزرسانی شده و شامل پارامتر پرسمان و بدنه تعریف شده می‌باشد:"
          ],
          "section_id": 12,
          "content_text": "حال به آدرس http://127.0.0.1:8000/redoc بروید.\n\nList:\nخواهید دید که مستندات جایگزین نیز به‌روزرسانی شده و شامل پارامتر پرسمان و بدنه تعریف شده می‌باشد:",
          "word_count": 23
        },
        {
          "title": "خلاصه",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "به طور خلاصه شما  انواع پارامترها، بدنه و غیره را به عنوان پارامترهای ورودی تابع خود تعریف می‌کنید.",
            "این کار را با استفاده از انواع استاندارد و مدرن موجود در پایتون انجام می‌دهید.",
            "نیازی به یادگیری  جدید یا متدها و کلاس‌های یک کتابخانه بخصوص و غیره نیست.",
            "به عنوان مثال برای یک پارامتر از نوع :",
            "یا برای یک مدل پیچیده‌تر مثل :",
            "...و با همین اعلان تمامی قابلیت‌های زیر در دسترس قرار می‌گیرد:",
            "List:\nپشتیبانی ویرایشگر متنی شامل:\n\nبررسی انواع داده.\n\n\nاعتبارسنجی داده:\nخطاهای خودکار و مشخص در هنگام نامعتبر بودن داده.\nاعتبارسنجی، حتی برای اشیاء JSON تو در تو.\n\n\n داده ورودی: که از شبکه رسیده به انواع و داد‌ه‌ پایتونی. این داده‌ شامل:\n\nپارامترهای مسیر.\nپارامترهای پرسمان.\n.\nسرآیند‌ها (هدرها).\n.\n.\n\n\n داده خروجی: تبدیل از انواع و داده‌ پایتون به داده شبکه  (مانند JSON):\nتبدیل انواع داده پایتونی (, , , ,  و غیره).\nاشیاء .\nاشیاء .\nqمدل‌های پایگاه‌داده.\nو موارد بیشمار دیگر.\n\n\nدو مدل مستند API تعاملی خودکار :\nSwagger UI.",
            "List:\nخطاهای خودکار و مشخص در هنگام نامعتبر بودن داده.\nاعتبارسنجی، حتی برای اشیاء JSON تو در تو.",
            "List:\nپارامترهای مسیر.\nپارامترهای پرسمان.\n.\nسرآیند‌ها (هدرها).\n.\n.",
            "List:\nتبدیل انواع داده پایتونی (, , , ,  و غیره).\nاشیاء .\nاشیاء .\nqمدل‌های پایگاه‌داده.\nو موارد بیشمار دیگر.",
            "به مثال قبلی باز می‌گردیم، در این مثال  موارد زیر را انجام می‌دهد:",
            "List:\nاعتبارسنجی اینکه پارامتر  در مسیر درخواست‌های  و  موجود است.\nاعتبارسنجی اینکه پارامتر  در درخواست‌های  و  از نوع  است.\nاگر غیر از این موارد باشد، سرویس‌گیرنده خطای مفید و مشخصی دریافت خواهد کرد.\n\n\nبررسی وجود پارامتر پرسمان اختیاری  (مانند http://127.0.0.1:8000/items/foo?q=somequery) در درخواست‌های .\nاز آنجا که پارامتر  با   مقداردهی شده است، این پارامتر اختیاری است.\nاگر از مقدار اولیه  استفاده نکنیم، این پارامتر الزامی خواهد بود (همانند بدنه درخواست در درخواست ).\n\n\nبرای درخواست‌های  به آدرس /items/{item_id}، بدنه درخواست باید از نوع JSON تعریف شده باشد:\nبررسی اینکه بدنه شامل فیلدی با نام  و از نوع  است.\nبررسی اینکه بدنه شامل فیلدی با نام  و از نوع  است.\nبررسی اینکه بدنه شامل فیلدی اختیاری با نام  است، که در صورت وجود باید از نوع  باشد.\nتمامی این موارد برای اشیاء JSON در هر عمقی قابل بررسی می‌باشد.\n\n\nتبدیل از/به JSON به صورت خودکار.\nمستندسازی همه چیز با استفاده از OpenAPI، که می‌توان از آن برای موارد زیر استفاده کرد:\nسیستم مستندات تعاملی.\nتولید خودکار کد سرویس‌گیرنده‌ در زبان‌های برنامه‌نویسی بیشمار.\n\n\nفراهم سازی ۲ مستند تعاملی مبتنی بر وب به صورت پیش‌فرض.",
            "List:\nاگر غیر از این موارد باشد، سرویس‌گیرنده خطای مفید و مشخصی دریافت خواهد کرد.",
            "List:\nاز آنجا که پارامتر  با   مقداردهی شده است، این پارامتر اختیاری است.\nاگر از مقدار اولیه  استفاده نکنیم، این پارامتر الزامی خواهد بود (همانند بدنه درخواست در درخواست ).",
            "List:\nبررسی اینکه بدنه شامل فیلدی با نام  و از نوع  است.\nبررسی اینکه بدنه شامل فیلدی با نام  و از نوع  است.\nبررسی اینکه بدنه شامل فیلدی اختیاری با نام  است، که در صورت وجود باید از نوع  باشد.\nتمامی این موارد برای اشیاء JSON در هر عمقی قابل بررسی می‌باشد.",
            "List:\nسیستم مستندات تعاملی.\nتولید خودکار کد سرویس‌گیرنده‌ در زبان‌های برنامه‌نویسی بیشمار.",
            "موارد ذکر شده تنها پاره‌ای از ویژگی‌های بیشمار FastAPI است اما ایده‌ای کلی از طرز کار آن در اختیار قرار می‌دهد.",
            "خط زیر را به این صورت تغییر دهید:",
            "در حین تایپ کردن توجه کنید که چگونه ویرایش‌گر، ویژگی‌های کلاس   را تشخیص داده و به تکمیل خودکار آنها کمک می‌کند:",
            "برای مشاهده مثال‌های کامل‌تر که شامل قابلیت‌های بیشتری از FastAPI باشد به بخش آموزش - راهنمای کاربر مراجعه کنید.",
            "هشدار اسپویل: بخش آموزش - راهنمای کاربر شامل موارد زیر است:",
            "List:\nاعلان پارامترهای موجود در بخش‌های دیگر درخواست، شامل: سرآیند‌ (هدر)ها، ، فیلد‌های فرم و .\nچگونگی تنظیم محدودیت‌های اعتبارسنجی به عنوان مثال maximum_length یا .\nسیستم Dependency Injection قوی و کاربردی.\nامنیت و تایید هویت, شامل پشتیبانی از  مبتنی بر JWT tokens و HTTP Basic.\nتکنیک پیشرفته برای تعریف مدل‌های چند سطحی JSON (بر اساس Pydantic).\nقابلیت‌های اضافی دیگر (بر اساس Starlette) شامل:\n\n\nتست‌های خودکار آسان مبتنی بر HTTPX و \n\nCookie Sessions\nو موارد بیشمار دیگر.",
            "List:\nتست‌های خودکار آسان مبتنی بر HTTPX و \n\nCookie Sessions\nو موارد بیشمار دیگر."
          ],
          "section_id": 13,
          "content_text": "به طور خلاصه شما  انواع پارامترها، بدنه و غیره را به عنوان پارامترهای ورودی تابع خود تعریف می‌کنید.\n\nاین کار را با استفاده از انواع استاندارد و مدرن موجود در پایتون انجام می‌دهید.\n\nنیازی به یادگیری  جدید یا متدها و کلاس‌های یک کتابخانه بخصوص و غیره نیست.\n\nبه عنوان مثال برای یک پارامتر از نوع :\n\nیا برای یک مدل پیچیده‌تر مثل :\n\n...و با همین اعلان تمامی قابلیت‌های زیر در دسترس قرار می‌گیرد:\n\nList:\nپشتیبانی ویرایشگر متنی شامل:\n\nبررسی انواع داده.\n\n\nاعتبارسنجی داده:\nخطاهای خودکار و مشخص در هنگام نامعتبر بودن داده.\nاعتبارسنجی، حتی برای اشیاء JSON تو در تو.\n\n\n داده ورودی: که از شبکه رسیده به انواع و داد‌ه‌ پایتونی. این داده‌ شامل:\n\nپارامترهای مسیر.\nپارامترهای پرسمان.\n.\nسرآیند‌ها (هدرها).\n.\n.\n\n\n داده خروجی: تبدیل از انواع و داده‌ پایتون به داده شبکه  (مانند JSON):\nتبدیل انواع داده پایتونی (, , , ,  و غیره).\nاشیاء .\nاشیاء .\nqمدل‌های پایگاه‌داده.\nو موارد بیشمار دیگر.\n\n\nدو مدل مستند API تعاملی خودکار :\nSwagger UI.\n\nList:\nخطاهای خودکار و مشخص در هنگام نامعتبر بودن داده.\nاعتبارسنجی، حتی برای اشیاء JSON تو در تو.\n\nList:\nپارامترهای مسیر.\nپارامترهای پرسمان.\n.\nسرآیند‌ها (هدرها).\n.\n.\n\nList:\nتبدیل انواع داده پایتونی (, , , ,  و غیره).\nاشیاء .\nاشیاء .\nqمدل‌های پایگاه‌داده.\nو موارد بیشمار دیگر.\n\nبه مثال قبلی باز می‌گردیم، در این مثال  موارد زیر را انجام می‌دهد:\n\nList:\nاعتبارسنجی اینکه پارامتر  در مسیر درخواست‌های  و  موجود است.\nاعتبارسنجی اینکه پارامتر  در درخواست‌های  و  از نوع  است.\nاگر غیر از این موارد باشد، سرویس‌گیرنده خطای مفید و مشخصی دریافت خواهد کرد.\n\n\nبررسی وجود پارامتر پرسمان اختیاری  (مانند http://127.0.0.1:8000/items/foo?q=somequery) در درخواست‌های .\nاز آنجا که پارامتر  با   مقداردهی شده است، این پارامتر اختیاری است.\nاگر از مقدار اولیه  استفاده نکنیم، این پارامتر الزامی خواهد بود (همانند بدنه درخواست در درخواست ).\n\n\nبرای درخواست‌های  به آدرس /items/{item_id}، بدنه درخواست باید از نوع JSON تعریف شده باشد:\nبررسی اینکه بدنه شامل فیلدی با نام  و از نوع  است.\nبررسی اینکه بدنه شامل فیلدی با نام  و از نوع  است.\nبررسی اینکه بدنه شامل فیلدی اختیاری با نام  است، که در صورت وجود باید از نوع  باشد.\nتمامی این موارد برای اشیاء JSON در هر عمقی قابل بررسی می‌باشد.\n\n\nتبدیل از/به JSON به صورت خودکار.\nمستندسازی همه چیز با استفاده از OpenAPI، که می‌توان از آن برای موارد زیر استفاده کرد:\nسیستم مستندات تعاملی.\nتولید خودکار کد سرویس‌گیرنده‌ در زبان‌های برنامه‌نویسی بیشمار.\n\n\nفراهم سازی ۲ مستند تعاملی مبتنی بر وب به صورت پیش‌فرض.\n\nList:\nاگر غیر از این موارد باشد، سرویس‌گیرنده خطای مفید و مشخصی دریافت خواهد کرد.\n\nList:\nاز آنجا که پارامتر  با   مقداردهی شده است، این پارامتر اختیاری است.\nاگر از مقدار اولیه  استفاده نکنیم، این پارامتر الزامی خواهد بود (همانند بدنه درخواست در درخواست ).\n\nList:\nبررسی اینکه بدنه شامل فیلدی با نام  و از نوع  است.\nبررسی اینکه بدنه شامل فیلدی با نام  و از نوع  است.\nبررسی اینکه بدنه شامل فیلدی اختیاری با نام  است، که در صورت وجود باید از نوع  باشد.\nتمامی این موارد برای اشیاء JSON در هر عمقی قابل بررسی می‌باشد.\n\nList:\nسیستم مستندات تعاملی.\nتولید خودکار کد سرویس‌گیرنده‌ در زبان‌های برنامه‌نویسی بیشمار.\n\nموارد ذکر شده تنها پاره‌ای از ویژگی‌های بیشمار FastAPI است اما ایده‌ای کلی از طرز کار آن در اختیار قرار می‌دهد.\n\nخط زیر را به این صورت تغییر دهید:\n\nدر حین تایپ کردن توجه کنید که چگونه ویرایش‌گر، ویژگی‌های کلاس   را تشخیص داده و به تکمیل خودکار آنها کمک می‌کند:\n\nبرای مشاهده مثال‌های کامل‌تر که شامل قابلیت‌های بیشتری از FastAPI باشد به بخش آموزش - راهنمای کاربر مراجعه کنید.\n\nهشدار اسپویل: بخش آموزش - راهنمای کاربر شامل موارد زیر است:\n\nList:\nاعلان پارامترهای موجود در بخش‌های دیگر درخواست، شامل: سرآیند‌ (هدر)ها، ، فیلد‌های فرم و .\nچگونگی تنظیم محدودیت‌های اعتبارسنجی به عنوان مثال maximum_length یا .\nسیستم Dependency Injection قوی و کاربردی.\nامنیت و تایید هویت, شامل پشتیبانی از  مبتنی بر JWT tokens و HTTP Basic.\nتکنیک پیشرفته برای تعریف مدل‌های چند سطحی JSON (بر اساس Pydantic).\nقابلیت‌های اضافی دیگر (بر اساس Starlette) شامل:\n\n\nتست‌های خودکار آسان مبتنی بر HTTPX و \n\nCookie Sessions\nو موارد بیشمار دیگر.\n\nList:\nتست‌های خودکار آسان مبتنی بر HTTPX و \n\nCookie Sessions\nو موارد بیشمار دیگر.",
          "word_count": 689
        },
        {
          "title": "کارایی",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "معیار (بنچمارک‌)های مستقل TechEmpower حاکی از آن است که برنامه‌های  که تحت Uvicorn اجرا می‌شود، یکی از سریع‌ترین فریم‌ورک‌های مبتنی بر پایتون، است که کمی ضعیف‌تر از Starlette و Uvicorn عمل می‌کند (فریم‌ورک و سروری که FastAPI بر اساس آنها ایجاد شده است) (*)",
            "برای درک بهتری از این موضوع به بخش بنچ‌مارک‌ها مراجعه کنید."
          ],
          "section_id": 14,
          "content_text": "معیار (بنچمارک‌)های مستقل TechEmpower حاکی از آن است که برنامه‌های  که تحت Uvicorn اجرا می‌شود، یکی از سریع‌ترین فریم‌ورک‌های مبتنی بر پایتون، است که کمی ضعیف‌تر از Starlette و Uvicorn عمل می‌کند (فریم‌ورک و سروری که FastAPI بر اساس آنها ایجاد شده است) (*)\n\nبرای درک بهتری از این موضوع به بخش بنچ‌مارک‌ها مراجعه کنید.",
          "word_count": 55
        },
        {
          "title": "نیازمندی‌های اختیاری",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "استفاده شده توسط Pydantic:",
            "List:\nemail-validator - برای اعتبارسنجی آدرس‌های ایمیل.",
            "استفاده شده توسط Starlette:",
            "List:\n- در صورتی که می‌خواهید از TestClient استفاده کنید.\n - در صورتی که می‌خواهید از FileResponse و StaticFiles استفاده کنید.\n - در صورتی که بخواهید از پیکربندی پیش‌فرض برای قالب‌ها استفاده کنید.\npython-multipart - در صورتی که بخواهید با استفاده از request.form() از قابلیت \"تجزیه (parse)\" فرم استفاده کنید.\nitsdangerous - در صورتی که بخواید از SessionMiddleware پشتیبانی کنید.\n - برای پشتیبانی SchemaGenerator در Starlet (به احتمال زیاد برای کار کردن با FastAPI به آن نیازی پیدا نمی‌کنید).\n - در صورتی که از  GraphQLApp پشتیبانی می‌کنید.",
            "استفاده شده توسط FastAPI / Starlette:",
            "List:\n- برای سرور اجرا کننده برنامه وب.\n - در صورتی که بخواهید از ORJSONResponse استفاده کنید.\n - در صورتی که بخواهید از UJSONResponse استفاده کنید.",
            "می‌توان همه این موارد را با استفاده از دستور pip install fastapi[all]. به صورت یکجا نصب کرد."
          ],
          "section_id": 15,
          "content_text": "استفاده شده توسط Pydantic:\n\nList:\nemail-validator - برای اعتبارسنجی آدرس‌های ایمیل.\n\nاستفاده شده توسط Starlette:\n\nList:\n- در صورتی که می‌خواهید از TestClient استفاده کنید.\n - در صورتی که می‌خواهید از FileResponse و StaticFiles استفاده کنید.\n - در صورتی که بخواهید از پیکربندی پیش‌فرض برای قالب‌ها استفاده کنید.\npython-multipart - در صورتی که بخواهید با استفاده از request.form() از قابلیت \"تجزیه (parse)\" فرم استفاده کنید.\nitsdangerous - در صورتی که بخواید از SessionMiddleware پشتیبانی کنید.\n - برای پشتیبانی SchemaGenerator در Starlet (به احتمال زیاد برای کار کردن با FastAPI به آن نیازی پیدا نمی‌کنید).\n - در صورتی که از  GraphQLApp پشتیبانی می‌کنید.\n\nاستفاده شده توسط FastAPI / Starlette:\n\nList:\n- برای سرور اجرا کننده برنامه وب.\n - در صورتی که بخواهید از ORJSONResponse استفاده کنید.\n - در صورتی که بخواهید از UJSONResponse استفاده کنید.\n\nمی‌توان همه این موارد را با استفاده از دستور pip install fastapi[all]. به صورت یکجا نصب کرد.",
          "word_count": 151
        },
        {
          "title": "لایسنس",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fa/",
          "content": [
            "این پروژه مشمول قوانین و مقررات لایسنس MIT است."
          ],
          "section_id": 16,
          "content_text": "این پروژه مشمول قوانین و مقررات لایسنس MIT است.",
          "word_count": 9
        }
      ],
      "total_sections": 16
    },
    {
      "url": "https://fastapi.tiangolo.com/fr/",
      "page_title": "FastAPI",
      "domain": "fastapi.tiangolo.com",
      "sections": [
        {
          "title": "FastAPI",
          "level": 1,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "Framework FastAPI, haute performance, facile à apprendre, rapide à coder, prêt pour la production",
            "Documentation : https://fastapi.tiangolo.com",
            "Code Source : https://github.com/fastapi/fastapi",
            "FastAPI est un framework web moderne et rapide (haute performance) pour la création d'API avec Python, basé sur les annotations de type standard de Python.",
            "Les principales fonctionnalités sont :",
            "List:\n: De très hautes performances, au niveau de  et  (grâce à Starlette et Pydantic). L'un des frameworks Python les plus rapides.\nRapide à coder : Augmente la vitesse de développement des fonctionnalités d'environ 200 % à 300 %. *\nMoins de bugs : Réduit d'environ 40 % les erreurs induites par le développeur. *\n : Excellente compatibilité avec les IDE. Complétion complète. Moins de temps passé à déboguer.\n : Conçu pour être facile à utiliser et à apprendre. Moins de temps passé à lire la documentation.\n : Diminue la duplication de code. De nombreuses fonctionnalités liées à la déclaration de chaque paramètre. Moins de bugs.\n : Obtenez un code prêt pour la production. Avec une documentation interactive automatique.\nBasé sur des normes : Basé sur (et entièrement compatible avec) les standards ouverts pour les APIs :  (précédemment connu sous le nom de Swagger) et JSON Schema.",
            "* estimation basée sur des tests d'une équipe de développement interne, construisant des applications de production."
          ],
          "section_id": 1,
          "content_text": "Framework FastAPI, haute performance, facile à apprendre, rapide à coder, prêt pour la production\n\nDocumentation : https://fastapi.tiangolo.com\n\nCode Source : https://github.com/fastapi/fastapi\n\nFastAPI est un framework web moderne et rapide (haute performance) pour la création d'API avec Python, basé sur les annotations de type standard de Python.\n\nLes principales fonctionnalités sont :\n\nList:\n: De très hautes performances, au niveau de  et  (grâce à Starlette et Pydantic). L'un des frameworks Python les plus rapides.\nRapide à coder : Augmente la vitesse de développement des fonctionnalités d'environ 200 % à 300 %. *\nMoins de bugs : Réduit d'environ 40 % les erreurs induites par le développeur. *\n : Excellente compatibilité avec les IDE. Complétion complète. Moins de temps passé à déboguer.\n : Conçu pour être facile à utiliser et à apprendre. Moins de temps passé à lire la documentation.\n : Diminue la duplication de code. De nombreuses fonctionnalités liées à la déclaration de chaque paramètre. Moins de bugs.\n : Obtenez un code prêt pour la production. Avec une documentation interactive automatique.\nBasé sur des normes : Basé sur (et entièrement compatible avec) les standards ouverts pour les APIs :  (précédemment connu sous le nom de Swagger) et JSON Schema.\n\n* estimation basée sur des tests d'une équipe de développement interne, construisant des applications de production.",
          "word_count": 214
        },
        {
          "title": "Opinions",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "\"[...] J'utilise beaucoup  ces derniers temps. [...] Je prévois de l'utiliser dans mon équipe pour tous les services de ML chez Microsoft. Certains d'entre eux seront intégrés dans le coeur de  et dans certains produits .\"",
            "\"Nous avons adopté la bibliothèque  pour créer un serveur  qui peut être interrogé pour obtenir des prédictions. [pour Ludwig]\"",
            "\" a le plaisir d'annoncer la sortie en open-source de notre framework d'orchestration de gestion de crise :  ! [construit avec ]\"",
            "\"Je suis très enthousiaste à propos de . C'est un bonheur !\"",
            "\"Honnêtement, ce que vous avez construit a l'air super solide et élégant. A bien des égards, c'est comme ça que je voulais que  soit - c'est vraiment inspirant de voir quelqu'un construire ça.\"",
            "\"Si vous cherchez à apprendre un framework moderne pour créer des APIs REST, regardez  [...] C'est rapide, facile à utiliser et à apprendre [...]\"",
            "\"Nous sommes passés à  pour nos  [...] Je pense que vous l'aimerez [...]\"",
            "\"Si quelqu'un cherche à construire une API Python de production, je recommande vivement . Il est bien conçu, simple à utiliser et très évolutif. Il est devenu un composant clé dans notre stratégie de développement API first et il est à l'origine de nombreux automatismes et services tels que notre ingénieur virtuel TAC.\""
          ],
          "section_id": 2,
          "content_text": "\"[...] J'utilise beaucoup  ces derniers temps. [...] Je prévois de l'utiliser dans mon équipe pour tous les services de ML chez Microsoft. Certains d'entre eux seront intégrés dans le coeur de  et dans certains produits .\"\n\n\"Nous avons adopté la bibliothèque  pour créer un serveur  qui peut être interrogé pour obtenir des prédictions. [pour Ludwig]\"\n\n\" a le plaisir d'annoncer la sortie en open-source de notre framework d'orchestration de gestion de crise :  ! [construit avec ]\"\n\n\"Je suis très enthousiaste à propos de . C'est un bonheur !\"\n\n\"Honnêtement, ce que vous avez construit a l'air super solide et élégant. A bien des égards, c'est comme ça que je voulais que  soit - c'est vraiment inspirant de voir quelqu'un construire ça.\"\n\n\"Si vous cherchez à apprendre un framework moderne pour créer des APIs REST, regardez  [...] C'est rapide, facile à utiliser et à apprendre [...]\"\n\n\"Nous sommes passés à  pour nos  [...] Je pense que vous l'aimerez [...]\"\n\n\"Si quelqu'un cherche à construire une API Python de production, je recommande vivement . Il est bien conçu, simple à utiliser et très évolutif. Il est devenu un composant clé dans notre stratégie de développement API first et il est à l'origine de nombreux automatismes et services tels que notre ingénieur virtuel TAC.\"",
          "word_count": 212
        },
        {
          "title": ", le FastAPI des",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "Si vous souhaitez construire une application  utilisable dans un terminal au lieu d'une API web, regardez .",
            "est le petit frère de FastAPI. Et il est destiné à être le FastAPI des . ⌨️ 🚀"
          ],
          "section_id": 3,
          "content_text": "Si vous souhaitez construire une application  utilisable dans un terminal au lieu d'une API web, regardez .\n\nest le petit frère de FastAPI. Et il est destiné à être le FastAPI des . ⌨️ 🚀",
          "word_count": 35
        },
        {
          "title": "Prérequis",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "FastAPI repose sur les épaules de géants :",
            "List:\npour les parties web.\n pour les parties données."
          ],
          "section_id": 4,
          "content_text": "FastAPI repose sur les épaules de géants :\n\nList:\npour les parties web.\n pour les parties données.",
          "word_count": 17
        },
        {
          "title": "Installation",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "Vous aurez également besoin d'un serveur ASGI pour la production tel que  ou .",
            "Code example:\npipinstall\"uvicorn[standard]\""
          ],
          "section_id": 5,
          "content_text": "Vous aurez également besoin d'un serveur ASGI pour la production tel que  ou .\n\nCode example:\npipinstall\"uvicorn[standard]\"",
          "word_count": 17
        },
        {
          "title": "Créez",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "List:\nCréez un fichier  avec :",
            "Si votre code utilise  / , utilisez  :",
            "Si vous n'êtes pas familier avec cette notion, consultez la section \"Vous êtes pressés ?\" à propos de  et  dans la documentation."
          ],
          "section_id": 6,
          "content_text": "List:\nCréez un fichier  avec :\n\nSi votre code utilise  / , utilisez  :\n\nSi vous n'êtes pas familier avec cette notion, consultez la section \"Vous êtes pressés ?\" à propos de  et  dans la documentation.",
          "word_count": 36
        },
        {
          "title": "Lancez",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "Lancez le serveur avec :",
            "Code example:\nuvicornmain:app--reload\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.",
            "La commande uvicorn main:app fait référence à :",
            "List:\n: le fichier  (le \"module\" Python).\n : l'objet créé à l'intérieur de  avec la ligne app = FastAPI().\n : fait redémarrer le serveur après des changements de code. À n'utiliser que pour le développement."
          ],
          "section_id": 7,
          "content_text": "Lancez le serveur avec :\n\nCode example:\nuvicornmain:app--reload\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n\nLa commande uvicorn main:app fait référence à :\n\nList:\n: le fichier  (le \"module\" Python).\n : l'objet créé à l'intérieur de  avec la ligne app = FastAPI().\n : fait redémarrer le serveur après des changements de code. À n'utiliser que pour le développement.",
          "word_count": 79
        },
        {
          "title": "Vérifiez",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "Ouvrez votre navigateur à l'adresse http://127.0.0.1:8000/items/5?q=somequery.",
            "Vous obtenez alors cette réponse  :",
            "Vous venez de créer une API qui :",
            "List:\nReçoit les requêtes HTTP pour les   et /items/{item_id}.\nLes deux  acceptent des opérations  (également connu sous le nom de  HTTP).\nLe  /items/{item_id} a un    qui doit être un .\nLe  /items/{item_id} a un paramètre de requête optionnel  de type ."
          ],
          "section_id": 8,
          "content_text": "Ouvrez votre navigateur à l'adresse http://127.0.0.1:8000/items/5?q=somequery.\n\nVous obtenez alors cette réponse  :\n\nVous venez de créer une API qui :\n\nList:\nReçoit les requêtes HTTP pour les   et /items/{item_id}.\nLes deux  acceptent des opérations  (également connu sous le nom de  HTTP).\nLe  /items/{item_id} a un    qui doit être un .\nLe  /items/{item_id} a un paramètre de requête optionnel  de type .",
          "word_count": 61
        },
        {
          "title": "Documentation API interactive",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "Maintenant, rendez-vous sur http://127.0.0.1:8000/docs.",
            "Vous verrez la documentation interactive automatique de l'API (fournie par Swagger UI) :"
          ],
          "section_id": 9,
          "content_text": "Maintenant, rendez-vous sur http://127.0.0.1:8000/docs.\n\nVous verrez la documentation interactive automatique de l'API (fournie par Swagger UI) :",
          "word_count": 17
        },
        {
          "title": "Documentation API alternative",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "Et maintenant, rendez-vous sur http://127.0.0.1:8000/redoc.",
            "Vous verrez la documentation interactive automatique de l'API (fournie par ) :"
          ],
          "section_id": 10,
          "content_text": "Et maintenant, rendez-vous sur http://127.0.0.1:8000/redoc.\n\nVous verrez la documentation interactive automatique de l'API (fournie par ) :",
          "word_count": 17
        },
        {
          "title": "Exemple plus poussé",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "Maintenant, modifiez le fichier  pour recevoir  d'une requête .",
            "Déclarez ce corps en utilisant les types Python standards, grâce à Pydantic.",
            "Code example:\nupdate_item   \n     \"item_name\"",
            "Le serveur se recharge normalement automatiquement (car vous avez pensé à  dans la commande  ci-dessus)."
          ],
          "section_id": 11,
          "content_text": "Maintenant, modifiez le fichier  pour recevoir  d'une requête .\n\nDéclarez ce corps en utilisant les types Python standards, grâce à Pydantic.\n\nCode example:\nupdate_item   \n     \"item_name\"\n\nLe serveur se recharge normalement automatiquement (car vous avez pensé à  dans la commande  ci-dessus).",
          "word_count": 40
        },
        {
          "title": "Plus loin avec la documentation API interactive",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "Maintenant, rendez-vous sur http://127.0.0.1:8000/docs.",
            "List:\nLa documentation interactive de l'API sera automatiquement mise à jour, y compris le nouveau corps de la requête :",
            "List:\nCliquez sur le bouton \"Try it out\", il vous permet de renseigner les paramètres et d'interagir directement avec l'API :",
            "List:\nCliquez ensuite sur le bouton \"Execute\", l'interface utilisateur communiquera avec votre API, enverra les paramètres, obtiendra les résultats et les affichera à l'écran :"
          ],
          "section_id": 12,
          "content_text": "Maintenant, rendez-vous sur http://127.0.0.1:8000/docs.\n\nList:\nLa documentation interactive de l'API sera automatiquement mise à jour, y compris le nouveau corps de la requête :\n\nList:\nCliquez sur le bouton \"Try it out\", il vous permet de renseigner les paramètres et d'interagir directement avec l'API :\n\nList:\nCliquez ensuite sur le bouton \"Execute\", l'interface utilisateur communiquera avec votre API, enverra les paramètres, obtiendra les résultats et les affichera à l'écran :",
          "word_count": 70
        },
        {
          "title": "Plus loin avec la documentation API alternative",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "Et maintenant, rendez-vous sur http://127.0.0.1:8000/redoc.",
            "List:\nLa documentation alternative reflétera également le nouveau paramètre de requête et le nouveau corps :"
          ],
          "section_id": 13,
          "content_text": "Et maintenant, rendez-vous sur http://127.0.0.1:8000/redoc.\n\nList:\nLa documentation alternative reflétera également le nouveau paramètre de requête et le nouveau corps :",
          "word_count": 21
        },
        {
          "title": "En résumé",
          "level": 3,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "En résumé, vous déclarez  les types de paramètres,   de la requête, etc. en tant que paramètres de fonction.",
            "Vous faites cela avec les types Python standard modernes.",
            "Vous n'avez pas à apprendre une nouvelle syntaxe, les méthodes ou les classes d'une bibliothèque spécifique, etc.",
            "Par exemple, pour un :",
            "ou pour un modèle  plus complexe :",
            "... et avec cette déclaration unique, vous obtenez :",
            "List:\nUne assistance dans votre IDE, notamment :\nla complétion.\nla vérification des types.\n\n\nLa validation des données :\ndes erreurs automatiques et claires lorsque les données ne sont pas valides.\nune validation même pour les objets  profondément imbriqués.\n\n\nUne conversion des données d'entrée : venant du réseau et allant vers les données et types de Python, permettant de lire :\nle .\nles paramètres du chemin.\nles paramètres de la requête.\nles cookies.\nles en-têtes.\nles formulaires.\nles fichiers.\n\n\nLa conversion des données de sortie : conversion des données et types Python en données réseau (au format ), permettant de convertir :\nles types Python (, , , , , etc).\nles objets .\nles objets .\nles modèles de base de données.\n... et beaucoup plus.\n\n\nLa documentation API interactive automatique, avec 2 interfaces utilisateur au choix :\nSwagger UI.",
            "List:\nla complétion.\nla vérification des types.",
            "List:\ndes erreurs automatiques et claires lorsque les données ne sont pas valides.\nune validation même pour les objets  profondément imbriqués.",
            "List:\nle .\nles paramètres du chemin.\nles paramètres de la requête.\nles cookies.\nles en-têtes.\nles formulaires.\nles fichiers.",
            "List:\nles types Python (, , , , , etc).\nles objets .\nles objets .\nles modèles de base de données.\n... et beaucoup plus.",
            "Pour revenir à l'exemple de code précédent,  permet de :",
            "List:\nValider que  existe dans le chemin des requêtes  et .\nValider que  est de type  pour les requêtes  et .\nSi ce n'est pas le cas, le client voit une erreur utile et claire.\n\n\nVérifier qu'il existe un paramètre de requête facultatif nommé  (comme dans http://127.0.0.1:8000/items/foo?q=somequery) pour les requêtes .\nPuisque le paramètre  est déclaré avec , il est facultatif.\nSans le , il serait nécessaire (comme l'est  de la requête dans le cas du ).\n\n\nPour les requêtes  vers /items/{item_id}, de lire   en  :\nVérifier qu'il a un attribut obligatoire  qui devrait être un .\nVérifier qu'il a un attribut obligatoire  qui doit être un .\nVérifier qu'il a un attribut facultatif , qui devrait être un , s'il est présent.\nTout cela fonctionnerait également pour les objets  profondément imbriqués.\n\n\nConvertir de et vers  automatiquement.\nDocumenter tout avec OpenAPI, qui peut être utilisé par :\nLes systèmes de documentation interactifs.\nLes systèmes de génération automatique de code client, pour de nombreuses langues.\n\n\nFournir directement 2 interfaces web de documentation interactive.",
            "List:\nSi ce n'est pas le cas, le client voit une erreur utile et claire.",
            "List:\nPuisque le paramètre  est déclaré avec , il est facultatif.\nSans le , il serait nécessaire (comme l'est  de la requête dans le cas du ).",
            "List:\nVérifier qu'il a un attribut obligatoire  qui devrait être un .\nVérifier qu'il a un attribut obligatoire  qui doit être un .\nVérifier qu'il a un attribut facultatif , qui devrait être un , s'il est présent.\nTout cela fonctionnerait également pour les objets  profondément imbriqués.",
            "List:\nLes systèmes de documentation interactifs.\nLes systèmes de génération automatique de code client, pour de nombreuses langues.",
            "Nous n'avons fait qu'effleurer la surface, mais vous avez déjà une idée de la façon dont tout cela fonctionne.",
            "Essayez de changer la ligne contenant :",
            "... et voyez comment votre éditeur complétera automatiquement les attributs et connaîtra leurs types :",
            "Pour un exemple plus complet comprenant plus de fonctionnalités, voir le Tutoriel - Guide utilisateur.",
            "Spoiler alert : le tutoriel - guide utilisateur inclut :",
            "List:\nDéclaration de paramètres provenant d'autres endroits différents comme : ., , champs de formulaire et .\nL'utilisation de contraintes de validation comme maximum_length ou .\nUn système d'injection de dépendance  très puissant et facile à utiliser .\nSécurité et authentification, y compris la prise en charge de  avec les jetons  et l'authentification HTTP Basic.\nDes techniques plus avancées (mais tout aussi faciles) pour déclarer les modèles  profondément imbriqués (grâce à Pydantic).\nIntégration de  avec Strawberry et d'autres bibliothèques.\nD'obtenir de nombreuses fonctionnalités supplémentaires (grâce à  Starlette) comme :\nWebSockets\nde tester le code très facilement avec  et \n\nCookie Sessions\n... et plus encore.",
            "List:\nWebSockets\nde tester le code très facilement avec  et \n\nCookie Sessions\n... et plus encore."
          ],
          "section_id": 14,
          "content_text": "En résumé, vous déclarez  les types de paramètres,   de la requête, etc. en tant que paramètres de fonction.\n\nVous faites cela avec les types Python standard modernes.\n\nVous n'avez pas à apprendre une nouvelle syntaxe, les méthodes ou les classes d'une bibliothèque spécifique, etc.\n\nPar exemple, pour un :\n\nou pour un modèle  plus complexe :\n\n... et avec cette déclaration unique, vous obtenez :\n\nList:\nUne assistance dans votre IDE, notamment :\nla complétion.\nla vérification des types.\n\n\nLa validation des données :\ndes erreurs automatiques et claires lorsque les données ne sont pas valides.\nune validation même pour les objets  profondément imbriqués.\n\n\nUne conversion des données d'entrée : venant du réseau et allant vers les données et types de Python, permettant de lire :\nle .\nles paramètres du chemin.\nles paramètres de la requête.\nles cookies.\nles en-têtes.\nles formulaires.\nles fichiers.\n\n\nLa conversion des données de sortie : conversion des données et types Python en données réseau (au format ), permettant de convertir :\nles types Python (, , , , , etc).\nles objets .\nles objets .\nles modèles de base de données.\n... et beaucoup plus.\n\n\nLa documentation API interactive automatique, avec 2 interfaces utilisateur au choix :\nSwagger UI.\n\nList:\nla complétion.\nla vérification des types.\n\nList:\ndes erreurs automatiques et claires lorsque les données ne sont pas valides.\nune validation même pour les objets  profondément imbriqués.\n\nList:\nle .\nles paramètres du chemin.\nles paramètres de la requête.\nles cookies.\nles en-têtes.\nles formulaires.\nles fichiers.\n\nList:\nles types Python (, , , , , etc).\nles objets .\nles objets .\nles modèles de base de données.\n... et beaucoup plus.\n\nPour revenir à l'exemple de code précédent,  permet de :\n\nList:\nValider que  existe dans le chemin des requêtes  et .\nValider que  est de type  pour les requêtes  et .\nSi ce n'est pas le cas, le client voit une erreur utile et claire.\n\n\nVérifier qu'il existe un paramètre de requête facultatif nommé  (comme dans http://127.0.0.1:8000/items/foo?q=somequery) pour les requêtes .\nPuisque le paramètre  est déclaré avec , il est facultatif.\nSans le , il serait nécessaire (comme l'est  de la requête dans le cas du ).\n\n\nPour les requêtes  vers /items/{item_id}, de lire   en  :\nVérifier qu'il a un attribut obligatoire  qui devrait être un .\nVérifier qu'il a un attribut obligatoire  qui doit être un .\nVérifier qu'il a un attribut facultatif , qui devrait être un , s'il est présent.\nTout cela fonctionnerait également pour les objets  profondément imbriqués.\n\n\nConvertir de et vers  automatiquement.\nDocumenter tout avec OpenAPI, qui peut être utilisé par :\nLes systèmes de documentation interactifs.\nLes systèmes de génération automatique de code client, pour de nombreuses langues.\n\n\nFournir directement 2 interfaces web de documentation interactive.\n\nList:\nSi ce n'est pas le cas, le client voit une erreur utile et claire.\n\nList:\nPuisque le paramètre  est déclaré avec , il est facultatif.\nSans le , il serait nécessaire (comme l'est  de la requête dans le cas du ).\n\nList:\nVérifier qu'il a un attribut obligatoire  qui devrait être un .\nVérifier qu'il a un attribut obligatoire  qui doit être un .\nVérifier qu'il a un attribut facultatif , qui devrait être un , s'il est présent.\nTout cela fonctionnerait également pour les objets  profondément imbriqués.\n\nList:\nLes systèmes de documentation interactifs.\nLes systèmes de génération automatique de code client, pour de nombreuses langues.\n\nNous n'avons fait qu'effleurer la surface, mais vous avez déjà une idée de la façon dont tout cela fonctionne.\n\nEssayez de changer la ligne contenant :\n\n... et voyez comment votre éditeur complétera automatiquement les attributs et connaîtra leurs types :\n\nPour un exemple plus complet comprenant plus de fonctionnalités, voir le Tutoriel - Guide utilisateur.\n\nSpoiler alert : le tutoriel - guide utilisateur inclut :\n\nList:\nDéclaration de paramètres provenant d'autres endroits différents comme : ., , champs de formulaire et .\nL'utilisation de contraintes de validation comme maximum_length ou .\nUn système d'injection de dépendance  très puissant et facile à utiliser .\nSécurité et authentification, y compris la prise en charge de  avec les jetons  et l'authentification HTTP Basic.\nDes techniques plus avancées (mais tout aussi faciles) pour déclarer les modèles  profondément imbriqués (grâce à Pydantic).\nIntégration de  avec Strawberry et d'autres bibliothèques.\nD'obtenir de nombreuses fonctionnalités supplémentaires (grâce à  Starlette) comme :\nWebSockets\nde tester le code très facilement avec  et \n\nCookie Sessions\n... et plus encore.\n\nList:\nWebSockets\nde tester le code très facilement avec  et \n\nCookie Sessions\n... et plus encore.",
          "word_count": 756
        },
        {
          "title": "Performance",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "Les benchmarks TechEmpower indépendants montrent que les applications  s'exécutant sous Uvicorn sont  parmi les frameworks existants en Python les plus rapides , juste derrière Starlette et Uvicorn (utilisés en interne par FastAPI). (*)",
            "Pour en savoir plus, consultez la section Benchmarks."
          ],
          "section_id": 15,
          "content_text": "Les benchmarks TechEmpower indépendants montrent que les applications  s'exécutant sous Uvicorn sont  parmi les frameworks existants en Python les plus rapides , juste derrière Starlette et Uvicorn (utilisés en interne par FastAPI). (*)\n\nPour en savoir plus, consultez la section Benchmarks.",
          "word_count": 41
        },
        {
          "title": "Dépendances facultatives",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "Utilisées par Pydantic:",
            "List:\nemail-validator - pour la validation des adresses email.",
            "Utilisées par Starlette :",
            "List:\n- Obligatoire si vous souhaitez utiliser TestClient.\n - Obligatoire si vous souhaitez utiliser la configuration de template par défaut.\npython-multipart - Obligatoire si vous souhaitez supporter le \"décodage\" de formulaire avec request.form().\nitsdangerous - Obligatoire pour la prise en charge de SessionMiddleware.\n - Obligatoire pour le support SchemaGenerator de Starlette (vous n'en avez probablement pas besoin avec FastAPI).",
            "Utilisées par FastAPI / Starlette :",
            "List:\n- Pour le serveur qui charge et sert votre application.\n - Obligatoire si vous voulez utiliser ORJSONResponse.\n - Obligatoire si vous souhaitez utiliser UJSONResponse.",
            "Vous pouvez tout installer avec pip install fastapi[all]."
          ],
          "section_id": 16,
          "content_text": "Utilisées par Pydantic:\n\nList:\nemail-validator - pour la validation des adresses email.\n\nUtilisées par Starlette :\n\nList:\n- Obligatoire si vous souhaitez utiliser TestClient.\n - Obligatoire si vous souhaitez utiliser la configuration de template par défaut.\npython-multipart - Obligatoire si vous souhaitez supporter le \"décodage\" de formulaire avec request.form().\nitsdangerous - Obligatoire pour la prise en charge de SessionMiddleware.\n - Obligatoire pour le support SchemaGenerator de Starlette (vous n'en avez probablement pas besoin avec FastAPI).\n\nUtilisées par FastAPI / Starlette :\n\nList:\n- Pour le serveur qui charge et sert votre application.\n - Obligatoire si vous voulez utiliser ORJSONResponse.\n - Obligatoire si vous souhaitez utiliser UJSONResponse.\n\nVous pouvez tout installer avec pip install fastapi[all].",
          "word_count": 114
        },
        {
          "title": "Licence",
          "level": 2,
          "page_title": "FastAPI",
          "url": "https://fastapi.tiangolo.com/fr/",
          "content": [
            "Ce projet est soumis aux termes de la licence MIT."
          ],
          "section_id": 17,
          "content_text": "Ce projet est soumis aux termes de la licence MIT.",
          "word_count": 10
        }
      ],
      "total_sections": 17
    }
  ],
  "semantic_chunks": [
    {
      "text": "# FastAPI\n\nFastAPI framework, high performance, easy to learn, fast to code, ready for production\n\nDocumentation: https://fastapi.tiangolo.com\n\nSource Code: https://github.com/fastapi/fastapi\n\nFastAPI is a modern, fast (high-performance), web framework for building APIs with Python based on standard Python type hints.\n\nThe key features are:\n\nList:\n: Very high performance, on par with  and  (thanks to Starlette and Pydantic). One of the fastest Python frameworks available.\nFast to code: Increase the speed to develop features by about 200% to 300%. *\nFewer bugs: Reduce about 40% of human (developer) induced errors. *\n: Great editor support. Completion everywhere. Less time debugging.\n: Designed to be easy to use and learn. Less time reading docs.\n: Minimize code duplication. Multiple features from each parameter declaration. Fewer bugs.\n: Get production-ready code. With automatic interactive documentation.\nStandards-based: Based on (and fully compatible with) the open standards for APIs:  (previously known as Swagger) and JSON Schema.\n\n* estimation based on tests on an internal development team, building production applications.",
      "title": "FastAPI",
      "section_title": "FastAPI",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 1,
      "type": "complete_section",
      "word_count": 164,
      "chunk_id": 0
    },
    {
      "text": "# FastAPI - Opinions\n\n\"[...] I'm using  a ton these days. [...] I'm actually planning to use it for all of my team's ML services at Microsoft. Some of them are getting integrated into the core  product and some  products.\"\n\n\"We adopted the  library to spawn a  server that can be queried to obtain predictions. [for Ludwig]\"\n\n\" is pleased to announce the open-source release of our crisis management orchestration framework: ! [built with ]\"\n\n\"I’m over the moon excited about . It’s so fun!\"\n\n\"Honestly, what you've built looks super solid and polished. In many ways, it's what I wanted  to be - it's really inspiring to see someone build that.\"\n\n\"If you're looking to learn one modern framework for building REST APIs, check out  [...] It's fast, easy to use and easy to learn [...]\"\n\n\"We've switched over to  for our  [...] I think you'll like it [...]\"\n\n\"If anyone is looking to build a production Python API, I would highly recommend . It is beautifully designed, simple to use and highly scalable, it has become a key component in our API first development strategy and is driving many automations and services such as our Virtual TAC Engineer.\"",
      "title": "FastAPI - Opinions",
      "section_title": "Opinions",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 200,
      "chunk_id": 1
    },
    {
      "text": "# FastAPI - , the FastAPI of CLIs\n\nIf you are building a  app to be used in the terminal instead of a web API, check out .\n\nis FastAPI's little sibling. And it's intended to be the FastAPI of CLIs. ⌨️ 🚀",
      "title": "FastAPI - , the FastAPI of CLIs",
      "section_title": ", the FastAPI of CLIs",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 43,
      "chunk_id": 2
    },
    {
      "text": "# FastAPI - Requirements\n\nFastAPI stands on the shoulders of giants:\n\nList:\nfor the web parts.\n for the data parts.",
      "title": "FastAPI - Requirements",
      "section_title": "Requirements",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 20,
      "chunk_id": 3
    },
    {
      "text": "# FastAPI - Installation\n\nCreate and activate a virtual environment and then install FastAPI:\n\nCode example:\npipinstall\"fastapi[standard]\"\n\n: Make sure you put \"fastapi[standard]\" in quotes to ensure it works in all terminals.",
      "title": "FastAPI - Installation",
      "section_title": "Installation",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 32,
      "chunk_id": 4
    },
    {
      "text": "# FastAPI - Create it\n\nIf your code uses  / , use :\n\nIf you don't know, check the \"In a hurry?\" section about  and  in the docs.",
      "title": "FastAPI - Create it",
      "section_title": "Create it",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 28,
      "chunk_id": 5
    },
    {
      "text": "# FastAPI - Run it (Part 1)\n\nCode example:\nfastapidevmain.py\n ╭────────── FastAPI CLI - Development mode ───────────╮\n │                                                     │\n │  Serving at: http://127.0.0.1:8000                  │\n │                                                     │\n │  API docs: http://127.0.0.1:8000/docs               │\n │                                                     │\n │  Running in development mode, for production use:   │\n │                                                     │\n │  fastapi run                                        │\n │                                                     │\n ╰─────────────────────────────────────────────────────╯\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n\nThe command fastapi dev reads your  file, detects the  app in it, and starts a server using .\n\nBy default, fastapi dev will start with auto-reload enabled for local development.",
      "title": "FastAPI - Run it (Part 1)",
      "section_title": "Run it",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 120,
      "chunk_id": 6,
      "part_number": 1
    },
    {
      "text": "# FastAPI - Run it (Part 2)\n\nYou can read more about it in the FastAPI CLI docs.",
      "title": "FastAPI - Run it (Part 2)",
      "section_title": "Run it",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 18,
      "chunk_id": 7,
      "part_number": 2
    },
    {
      "text": "# FastAPI - Check it\n\nOpen your browser at http://127.0.0.1:8000/items/5?q=somequery.\n\nYou will see the JSON response as:\n\nYou already created an API that:\n\nList:\nReceives HTTP requests in the   and /items/{item_id}.\nBoth  take  operations (also known as HTTP ).\nThe  /items/{item_id} has a path parameter  that should be an .\nThe  /items/{item_id} has an optional  query parameter .",
      "title": "FastAPI - Check it",
      "section_title": "Check it",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 58,
      "chunk_id": 8
    },
    {
      "text": "# FastAPI - Interactive API docs\n\nNow go to http://127.0.0.1:8000/docs.\n\nYou will see the automatic interactive API documentation (provided by Swagger UI):",
      "title": "FastAPI - Interactive API docs",
      "section_title": "Interactive API docs",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 22,
      "chunk_id": 9
    },
    {
      "text": "# FastAPI - Alternative API docs\n\nAnd now, go to http://127.0.0.1:8000/redoc.\n\nYou will see the alternative automatic documentation (provided by ):",
      "title": "FastAPI - Alternative API docs",
      "section_title": "Alternative API docs",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 21,
      "chunk_id": 10
    },
    {
      "text": "# FastAPI - Example upgrade\n\nNow modify the file  to receive a body from a  request.\n\nDeclare the body using standard Python types, thanks to Pydantic.\n\nCode example:\nupdate_item   \n     \"item_name\"\n\nThe fastapi dev server should reload automatically.",
      "title": "FastAPI - Example upgrade",
      "section_title": "Example upgrade",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 37,
      "chunk_id": 11
    },
    {
      "text": "# FastAPI - Interactive API docs upgrade\n\nNow go to http://127.0.0.1:8000/docs.\n\nList:\nThe interactive API documentation will be automatically updated, including the new body:\n\nList:\nClick on the button \"Try it out\", it allows you to fill the parameters and directly interact with the API:\n\nList:\nThen click on the \"Execute\" button, the user interface will communicate with your API, send the parameters, get the results and show them on the screen:",
      "title": "FastAPI - Interactive API docs upgrade",
      "section_title": "Interactive API docs upgrade",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 72,
      "chunk_id": 12
    },
    {
      "text": "# FastAPI - Alternative API docs upgrade\n\nAnd now, go to http://127.0.0.1:8000/redoc.\n\nList:\nThe alternative documentation will also reflect the new query parameter and body:",
      "title": "FastAPI - Alternative API docs upgrade",
      "section_title": "Alternative API docs upgrade",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 25,
      "chunk_id": 13
    },
    {
      "text": "# FastAPI - Recap (Part 1)\n\nIn summary, you declare  the types of parameters, body, etc. as function parameters.\n\nYou do that with standard modern Python types.\n\nYou don't have to learn a new syntax, the methods or classes of a specific library, etc.\n\nFor example, for an :\n\nor for a more complex  model:\n\n...and with that single declaration you get:\n\nList:\nEditor support, including:\nCompletion.\nType checks.\n\n\nValidation of data:\nAutomatic and clear errors when the data is invalid.\nValidation even for deeply nested JSON objects.\n\n\nConversion of input data: coming from the network to Python data and types. Reading from:\n\nPath parameters.\nQuery parameters.\n\n\n\n\n\n\nConversion of output data: converting from Python data and types to network data (as JSON):\nConvert Python types (, , , , , etc).\n objects.\n objects.\nDatabase models.\n...and many more.\n\n\nAutomatic interactive API documentation, including 2 alternative user interfaces:\nSwagger UI.\n\nList:\nCompletion.\nType checks.\n\nList:\nAutomatic and clear errors when the data is invalid.\nValidation even for deeply nested JSON objects.\n\nList:\nPath parameters.\nQuery parameters.\n\nList:\nConvert Python types (, , , , , etc).\n objects.\n objects.\nDatabase models.\n...and many more.",
      "title": "FastAPI - Recap (Part 1)",
      "section_title": "Recap",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 192,
      "chunk_id": 14,
      "part_number": 1
    },
    {
      "text": "# FastAPI - Recap (Part 2)\n\nComing back to the previous code example,  will:\n\nList:\nValidate that there is an  in the path for  and  requests.\nValidate that the  is of type  for  and  requests.\nIf it is not, the client will see a useful, clear error.\n\n\nCheck if there is an optional query parameter named  (as in http://127.0.0.1:8000/items/foo?q=somequery) for  requests.\nAs the  parameter is declared with , it is optional.\nWithout the  it would be required (as is the body in the case with ).\n\n\nFor  requests to /items/{item_id}, read the body as JSON:\nCheck that it has a required attribute  that should be a .\nCheck that it has a required attribute  that has to be a .\nCheck that it has an optional attribute , that should be a , if present.\nAll this would also work for deeply nested JSON objects.\n\n\nConvert from and to JSON automatically.\nDocument everything with OpenAPI, that can be used by:\nInteractive documentation systems.\nAutomatic client code generation systems, for many languages.\n\n\nProvide 2 interactive documentation web interfaces directly.\n\nList:\nIf it is not, the client will see a useful, clear error.",
      "title": "FastAPI - Recap (Part 2)",
      "section_title": "Recap",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 191,
      "chunk_id": 15,
      "part_number": 2
    },
    {
      "text": "# FastAPI - Recap (Part 3)\n\nList:\nAs the  parameter is declared with , it is optional.\nWithout the  it would be required (as is the body in the case with ).\n\nList:\nCheck that it has a required attribute  that should be a .\nCheck that it has a required attribute  that has to be a .\nCheck that it has an optional attribute , that should be a , if present.\nAll this would also work for deeply nested JSON objects.\n\nList:\nInteractive documentation systems.\nAutomatic client code generation systems, for many languages.\n\nWe just scratched the surface, but you already get the idea of how it all works.\n\nTry changing the line with:\n\n...and see how your editor will auto-complete the attributes and know their types:\n\nFor a more complete example including more features, see the Tutorial - User Guide.\n\nSpoiler alert: the tutorial - user guide includes:",
      "title": "FastAPI - Recap (Part 3)",
      "section_title": "Recap",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 151,
      "chunk_id": 16,
      "part_number": 3
    },
    {
      "text": "# FastAPI - Recap (Part 4)\n\nList:\nDeclaration of parameters from other different places as: , , form fields and .\nHow to set validation constraints as maximum_length or .\nA very powerful and easy to use Dependency Injection system.\nSecurity and authentication, including support for  with JWT tokens and HTTP Basic auth.\nMore advanced (but equally easy) techniques for declaring deeply nested JSON models (thanks to Pydantic).\n integration with Strawberry and other libraries.\nMany extra features (thanks to Starlette) as:\nWebSockets\nextremely easy tests based on HTTPX and \n\nCookie Sessions\n...and more.\n\nList:\nWebSockets\nextremely easy tests based on HTTPX and \n\nCookie Sessions\n...and more.",
      "title": "FastAPI - Recap (Part 4)",
      "section_title": "Recap",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 106,
      "chunk_id": 17,
      "part_number": 4
    },
    {
      "text": "# FastAPI - Performance\n\nIndependent TechEmpower benchmarks show  applications running under Uvicorn as one of the fastest Python frameworks available, only below Starlette and Uvicorn themselves (used internally by FastAPI). (*)\n\nTo understand more about it, see the section Benchmarks.",
      "title": "FastAPI - Performance",
      "section_title": "Performance",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 40,
      "chunk_id": 18
    },
    {
      "text": "# FastAPI - Dependencies\n\nFastAPI depends on Pydantic and Starlette.",
      "title": "FastAPI - Dependencies",
      "section_title": "Dependencies",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 10,
      "chunk_id": 19
    },
    {
      "text": "# FastAPI - Dependencies\n\nWhen you install FastAPI with pip install \"fastapi[standard]\" it comes with the  group of optional dependencies:\n\nList:\nemail-validator - for email validation.\n\nList:\n- Required if you want to use the TestClient.\n - Required if you want to use the default template configuration.\npython-multipart - Required if you want to support form , with request.form().\n\nList:\n- for the server that loads and serves your application. This includes uvicorn[standard], which includes some dependencies (e.g. ) needed for high performance serving.\nfastapi-cli[standard] - to provide the  command.\nThis includes fastapi-cloud-cli, which allows you to deploy your FastAPI application to FastAPI Cloud.\n\nList:\nThis includes fastapi-cloud-cli, which allows you to deploy your FastAPI application to FastAPI Cloud.",
      "title": "FastAPI - Dependencies",
      "section_title": "Dependencies",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 119,
      "chunk_id": 20
    },
    {
      "text": "# FastAPI - Without  Dependencies\n\nIf you don't want to include the  optional dependencies, you can install with pip install fastapi instead of pip install \"fastapi[standard]\".",
      "title": "FastAPI - Without  Dependencies",
      "section_title": "Without  Dependencies",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 26,
      "chunk_id": 21
    },
    {
      "text": "# FastAPI - Without fastapi-cloud-cli\n\nIf you want to install FastAPI with the standard dependencies but without the fastapi-cloud-cli, you can install with pip install \"fastapi[standard-no-fastapi-cloud-cli]\".",
      "title": "FastAPI - Without fastapi-cloud-cli",
      "section_title": "Without fastapi-cloud-cli",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 26,
      "chunk_id": 22
    },
    {
      "text": "# FastAPI - Additional Optional Dependencies\n\nThere are some additional dependencies you might want to install.\n\nAdditional optional Pydantic dependencies:\n\nList:\npydantic-settings - for settings management.\npydantic-extra-types - for extra types to be used with Pydantic.\n\nAdditional optional FastAPI dependencies:\n\nList:\n- Required if you want to use ORJSONResponse.\n - Required if you want to use UJSONResponse.",
      "title": "FastAPI - Additional Optional Dependencies",
      "section_title": "Additional Optional Dependencies",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 57,
      "chunk_id": 23
    },
    {
      "text": "# FastAPI - License\n\nThis project is licensed under the terms of the MIT license.",
      "title": "FastAPI - License",
      "section_title": "License",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 15,
      "chunk_id": 24
    },
    {
      "text": "# FastAPI (Part 1)\n\nFastAPI framework, yüksək məshuldarlı, öyrənməsi asan, çevik kodlama, istifadəyə hazırdır\n\n: https://fastapi.tiangolo.com\n\nQaynaq Kodu: https://github.com/fastapi/fastapi\n\nFastAPI Python ilə API yaratmaq üçün standart Python tip məsləhətlərinə əsaslanan, müasir, sürətli (yüksək performanslı) framework-dür.\n\nƏsas xüsusiyyətləri bunlardır:",
      "title": "FastAPI (Part 1)",
      "section_title": "FastAPI",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 1,
      "type": "section_part",
      "word_count": 38,
      "chunk_id": 25,
      "part_number": 1
    },
    {
      "text": "# FastAPI (Part 2)\n\nList:\n: Çox yüksək performans,  və  səviyyəsində (Starlette və Pydantic-ə təşəkkürlər). Ən sürətli Python frameworklərindən biridir.\nÇevik kodlama: Funksiyanallıqları inkişaf etdirmək sürətini təxminən 200%-dən 300%-ə qədər artırın. *\nDaha az xəta: İnsan (developer) tərəfindən törədilən səhvlərin təxminən 40% -ni azaldın. *\n: Əla redaktor dəstəyi. Hər yerdə otomatik tamamlama. Xətaları müəyyənləşdirməyə daha az vaxt sərf edəcəksiniz.\n: İstifadəsi və öyrənilməsi asan olması üçün nəzərdə tutulmuşdur. Sənədləri oxumaq üçün daha az vaxt ayıracaqsınız.\n: Kod təkrarlanmasını minimuma endirin. Hər bir parametr tərifində birdən çox xüsusiyyət ilə və daha az səhvlə qarşılaşacaqsınız.\n: Avtomatik və interaktiv sənədlərlə birlikdə istifadəyə hazır kod əldə edə bilərsiniz.\nStandartlara əsaslanan: API-lar üçün açıq standartlara əsaslanır (və tam uyğun gəlir):  (əvvəlki adı ilə Swagger) və JSON Schema.\n\n* Bu fikirlər daxili development komandasının hazırladıqları məhsulların sınaqlarına əsaslanır.",
      "title": "FastAPI (Part 2)",
      "section_title": "FastAPI",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 1,
      "type": "section_part",
      "word_count": 134,
      "chunk_id": 26,
      "part_number": 2
    },
    {
      "text": "# FastAPI - Rəylər\n\n\"[...] Son günlərdə -ı çox istifadə edirəm. [...]  Əslində onu komandamın bütün Microsoftda ML sevislərində istifadə etməyi planlayıram. Onların bəziləri -un əsas məhsuluna və bəzi  məhsullarına inteqrasiya olunurlar.\"\n\n\" kitabxanasını Proqnozlar əldə etmək üçün sorğulana bilən  serverini yaratmaqda istifadə etdik.\"\n\n\" böhran idarəçiliyi orkestrləşmə framework-nün açıq qaynaqlı buraxılışını elan etməkdən məmnundur: ! [ ilə quruldu]\"\n\n\" üçün həyəcanlıyam. Çox əyləncəlidir!\"\n\n\"Düzünü desəm, sizin qurduğunuz şey həqiqətən möhkəm və peşəkar görünür. Bir çox cəhətdən -un olmasını istədiyim kimdir - kiminsə belə bir şey qurduğunu görmək həqiqətən ruhlandırıcıdır.\"\n\n\"Əgər REST API-lər yaratmaq üçün müasir framework öyrənmək istəyirsinizsə, -a baxın [...] Sürətli, istifadəsi və öyrənməsi asandır. [...]\"\n\n\" xidmətlərimizi -a köçürdük [...] Sizin də bəyənəcəyinizi düşünürük.\"\n\n\"Python ilə istifadəyə hazır API qurmaq istəyən hər kəsə -ı tövsiyə edirəm. Möhtəşəm şəkildə dizayn edilmiş, istifadəsi asan və yüksək dərəcədə genişlənə bilən-dir, API əsaslı inkişaf strategiyamızın əsas komponentinə çevrilib və Virtual TAC Engineer kimi bir çox avtomatlaşdırma və servisləri idarə edir.\"",
      "title": "FastAPI - Rəylər",
      "section_title": "Rəylər",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 159,
      "chunk_id": 27
    },
    {
      "text": "# FastAPI - , CLI-ların FastAPI-ı\n\nƏgər siz veb API əvəzinə terminalda istifadə ediləcək  proqramı qurursunuzsa, -a baxa bilərsiniz.\n\nFastAPI-ın kiçik qardaşıdır. Və o, CLI-lərin -ı olmaq üçün nəzərdə tutulub. ⌨️ 🚀",
      "title": "FastAPI - , CLI-ların FastAPI-ı",
      "section_title": ", CLI-ların FastAPI-ı",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 32,
      "chunk_id": 28
    },
    {
      "text": "# FastAPI - Tələblər\n\nFastAPI nəhənglərin çiyinlərində dayanır:\n\nList:\nWeb tərəfi üçün .\nData tərəfi üçün .",
      "title": "FastAPI - Tələblər",
      "section_title": "Tələblər",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 17,
      "chunk_id": 29
    },
    {
      "text": "# FastAPI - Quraşdırma\n\nTətbiqimizi əlçatan etmək üçün bizə  və ya  kimi ASGI server lazımdır.\n\nCode example:\npipinstall\"uvicorn[standard]\"",
      "title": "FastAPI - Quraşdırma",
      "section_title": "Quraşdırma",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 18,
      "chunk_id": 30
    },
    {
      "text": "# FastAPI - Kodu yaradaq\n\nList:\nadlı fayl yaradaq və ona aşağıdakı kodu yerləşdirək:\n\nƏgər kodunuzda  və ya  vardırsa  istifadə edə bilərik:\n\nƏgər bu mövzu haqqında məlumatınız yoxdursa  və  sənədindəki \"Tələsirsən?\" bölməsinə baxa bilərsiniz.",
      "title": "FastAPI - Kodu yaradaq",
      "section_title": "Kodu yaradaq",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 34,
      "chunk_id": 31
    },
    {
      "text": "# FastAPI - Kodu işə salaq\n\nServeri aşağıdakı əmr ilə işə salaq:\n\nCode example:\nuvicornmain:app--reload\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n\nuvicorn main:app əmri aşağıdakılara instinad edir:\n\nList:\n:  faylı (yəni Python \"modulu\").\n:  faylında app = FastAPI() sətrində yaratdığımız  obyektidir.\n: kod dəyişikliyindən sonra avtomatik olaraq serveri yenidən işə salır. Bu parametrdən yalnız development mərhələsində istifadə etməliyik.",
      "title": "FastAPI - Kodu işə salaq",
      "section_title": "Kodu işə salaq",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 80,
      "chunk_id": 32
    },
    {
      "text": "# FastAPI - İndi yoxlayaq\n\nBu linki brauzerimizdə açaq http://127.0.0.1:8000/items/5?q=somequery.\n\nAşağıdakı kimi bir JSON cavabı görəcəksiniz:\n\nSiz artıq bir API yaratmısınız, hansı ki:\n\nList:\nvə /items/{item_id} yollarında HTTP sorğularını qəbul edir.\nHər iki   əməliyyatlarını (həmçinin HTTP  kimi bilinir) aparır.\n/items/{item_id}   adlı  qiyməti almalı olan yol parametrinə sahibdir.\n/items/{item_id}   adlı yol parametri var və bu parametr istəyə bağlı olsa da,  qiymətini almalıdır.",
      "title": "FastAPI - İndi yoxlayaq",
      "section_title": "İndi yoxlayaq",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 61,
      "chunk_id": 33
    },
    {
      "text": "# FastAPI - İnteraktiv API Sənədləri\n\nİndi http://127.0.0.1:8000/docs ünvanına daxil olun.\n\nAvtomatik interaktiv API sənədlərini görəcəksiniz (Swagger UI tərəfindən təmin edilir):",
      "title": "FastAPI - İnteraktiv API Sənədləri",
      "section_title": "İnteraktiv API Sənədləri",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 21,
      "chunk_id": 34
    },
    {
      "text": "# FastAPI - Alternativ API sənədləri\n\nİndi isə http://127.0.0.1:8000/redoc ünvanına daxil olun.\n\ntərəfindən təqdim edilən avtomatik sənədləri görəcəksiniz:",
      "title": "FastAPI - Alternativ API sənədləri",
      "section_title": "Alternativ API sənədləri",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 18,
      "chunk_id": 35
    },
    {
      "text": "# FastAPI - Nümunəni Yeniləyək\n\nİndi gəlin  faylını  sorğusu ilə birlikdə  qəbul edəcək şəkildə dəyişdirək.\n\nPydantic sayəsində standart Python tiplərindən istifadə edərək ni müəyyən edək.\n\nupdate_item   \n     \"item_name\"   \n\nServer avtomatik olaraq yenidən işə salınmalı idi (çünki biz yuxarıda  əmri ilə  parametrindən istifadə etmişik).\n\nCode example:\nupdate_item   \n     \"item_name\"",
      "title": "FastAPI - Nümunəni Yeniləyək",
      "section_title": "Nümunəni Yeniləyək",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 46,
      "chunk_id": 36
    },
    {
      "text": "# FastAPI - İnteraktiv API sənədlərindəki dəyişikliyə baxaq\n\nYenidən http://127.0.0.1:8000/docs ünvanına daxil olun.\n\nList:\nİnteraktiv API sənədləri yeni gövdə də daxil olmaq ilə avtomatik olaraq yenilənəcək:\n\nList:\n\"Try it out\" düyməsini klikləyin, bu, parametrləri doldurmağa və API ilə birbaşa əlaqə saxlamağa imkan verir:\n\nList:\nSonra \"Execute\" düyməsini klikləyin, istifadəçi interfeysi API ilə əlaqə quracaq, parametrləri göndərəcək, nəticələri əldə edəcək və onları ekranda göstərəcək:",
      "title": "FastAPI - İnteraktiv API sənədlərindəki dəyişikliyə baxaq",
      "section_title": "İnteraktiv API sənədlərindəki dəyişikliyə baxaq",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 63,
      "chunk_id": 37
    },
    {
      "text": "# FastAPI - Alternativ API Sənədlərindəki Dəyişikliyə Baxaq\n\nİndi isə yenidən http://127.0.0.1:8000/redoc ünvanına daxil olun.\n\nList:\nAlternativ sənədlər həm də yeni sorğu parametri və gövdəsini əks etdirəcək:",
      "title": "FastAPI - Alternativ API Sənədlərindəki Dəyişikliyə Baxaq",
      "section_title": "Alternativ API Sənədlərindəki Dəyişikliyə Baxaq",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 27,
      "chunk_id": 38
    },
    {
      "text": "# FastAPI - Xülasə (Part 1)\n\nÜmumiləşdirsək, parametrlər, gövdə və s. Biz məlumat növlərini  funksiya parametrləri kimi təyin edirik.\n\nBunu standart müasir Python tipləri ilə edirsiniz.\n\nYeni sintaksis, müəyyən bir kitabxananın metodlarını və ya siniflərini və s. öyrənmək məcburiyyətində deyilsiniz.\n\nvə ya daha mürəkkəb  modeli üçün:\n\n...və yalnız parametr tipini təyin etməklə bunları əldə edirsiniz:\n\nList:\nRedaktor dəstəyi ilə:\nAvtomatik tamamlama.\nTip yoxlanması.\n\n\nMəlumatların Təsdiqlənməsi:\nMəlumat etibarsız olduqda avtomatik olaraq aydın xətalar göstərir.\nHətta çox dərin JSON obyektlərində belə doğrulama aparır.\n\n\nDaxil olan məlumatları  üçün aşağıdakı məlumat növlərindən istifadə edilir:\n\n parametrləri.\n parametrləri.\n.\n.\n.\n\n\n\nDaxil olan məlumatları  üçün aşağıdakı məlumat növlərindən istifadə edilir (JSON olaraq):\nPython tiplərinin (, , , , , və s) çevrilməsi.\n obyektləri.\n obyektləri.\nVerilənlər bazası modelləri.\nvə daha çoxu...\n\n\n2 alternativ istifadəçi interfeysi daxil olmaqla avtomatik interaktiv API sənədlərini təmin edir:\nSwagger UI.\n\nList:\nAvtomatik tamamlama.\nTip yoxlanması.\n\nList:\nMəlumat etibarsız olduqda avtomatik olaraq aydın xətalar göstərir.\nHətta çox dərin JSON obyektlərində belə doğrulama aparır.",
      "title": "FastAPI - Xülasə (Part 1)",
      "section_title": "Xülasə",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 160,
      "chunk_id": 39,
      "part_number": 1
    },
    {
      "text": "# FastAPI - Xülasə (Part 2)\n\nList:\nparametrləri.\n parametrləri.\n.\n.\n.\n\nList:\nPython tiplərinin (, , , , , və s) çevrilməsi.\n obyektləri.\n obyektləri.\nVerilənlər bazası modelləri.\nvə daha çoxu...\n\nGəlin əvvəlki nümunəyə qayıdaq və -nin nələr edəcəyinə nəzər salaq:\n\nList:\nvə  sorğuları üçün -nin  olub-olmadığını yoxlayacaq.\n-nin  və  sorğuları üçün növünün  olduğunu yoxlayacaq.\nƏgər  deyilsə, səbəbini göstərən bir xəta mesajı göstərəcəkdir.\n\n\nməcburi olmayan  parametrinin  (http://127.0.0.1:8000/items/foo?q=somequery burdakı kimi) sorğusu içərisində olub olmadığını yoxlayacaq.\n parametrini  ilə yaratdığımız üçün, məcburi olmayan parametr olacaq.\nƏgər  olmasaydı, bu məcburi parametr olardı ( metodunun gövdəsində olduğu kimi).\n\n\n sorğusu üçün, /items/{item_id} gövdəsini JSON olaraq oxuyacaq:\n adında məcburi bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\n adında məcburi bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\n adında məcburi olmayan bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\nBütün bunlar ən dərin JSON obyektlərində belə işləyəcək.",
      "title": "FastAPI - Xülasə (Part 2)",
      "section_title": "Xülasə",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 148,
      "chunk_id": 40,
      "part_number": 2
    },
    {
      "text": "# FastAPI - Xülasə (Part 3)\n\n\nMəlumatların JSON-a və JSON-un Python obyektinə çevrilməsi avtomatik həyata keçiriləcək.\nHər şeyi OpenAPI ilə uyğun olacaq şəkildə avtomatik olaraq sənədləşdirəcək və onları aşağıdakı kimi istifadə edə biləcək:\nİnteraktiv sənədləşmə sistemləri.\nBir çox proqramlaşdırma dilləri üçün avtomatlaşdırılmış  kodu yaratma sistemləri.\n\n\n2 interaktiv sənədləşmə veb interfeysini birbaşa təmin edəcək.\n\nList:\nƏgər  deyilsə, səbəbini göstərən bir xəta mesajı göstərəcəkdir.\n\nList:\nparametrini  ilə yaratdığımız üçün, məcburi olmayan parametr olacaq.\nƏgər  olmasaydı, bu məcburi parametr olardı ( metodunun gövdəsində olduğu kimi).\n\nList:\nadında məcburi bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\n adında məcburi bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\n adında məcburi olmayan bir parametr olub olmadığını və əgər varsa, tipinin  olub olmadığını yoxlayacaq.\nBütün bunlar ən dərin JSON obyektlərində belə işləyəcək.\n\nList:\nİnteraktiv sənədləşmə sistemləri.\nBir çox proqramlaşdırma dilləri üçün avtomatlaşdırılmış  kodu yaratma sistemləri.\n\nYeni başlamışıq, amma siz artıq işin məntiqini başa düşmüsünüz.\n\nİndi aşağıdakı sətri dəyişdirməyə çalışın:",
      "title": "FastAPI - Xülasə (Part 3)",
      "section_title": "Xülasə",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 158,
      "chunk_id": 41,
      "part_number": 3
    },
    {
      "text": "# FastAPI - Xülasə (Part 4)\n\n...və redaktorun məlumat tiplərini bildiyini və avtomatik tamaladığını görəcəksiniz:\n\nDaha çox funksiyaya malik daha dolğun nümunə üçün Öyrədici - İstifadəçi Təlimatı səhifəsinə baxa bilərsiniz.\n\nSpoiler xəbərdarlığı: Öyrədici - istifadəçi təlimatına bunlar daxildir:\n\nList:\nParametrlərin, , , forma sahələri və  olaraq müəyyən edilməsi.\nmaximum_length və ya  kimi doğrulama məhdudiyyətlərinin necə təyin ediləcəyi.\nÇox güclü və istifadəsi asan Dependency Injection sistemi.\nTəhlükəsizlik və autentifikasiya, JWT tokenləri ilə  dəstəyi və HTTP Basic autentifikasiyası.\nçox dərin JSON modellərini müəyyən etmək üçün daha irəli səviyyə (lakin eyni dərəcədə asan) üsullar (Pydantic sayəsində).\nStrawberry və digər kitabxanalar ilə  inteqrasiyası.\nDigər əlavə xüsusiyyətlər (Starlette sayəsində):\nWebSockets\nHTTPX və  sayəsində çox asan testlər\n\nCookie Sessions\n...və daha çoxu.\n\nList:\nWebSockets\nHTTPX və  sayəsində çox asan testlər\n\nCookie Sessions\n...və daha çoxu.",
      "title": "FastAPI - Xülasə (Part 4)",
      "section_title": "Xülasə",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 129,
      "chunk_id": 42,
      "part_number": 4
    },
    {
      "text": "# FastAPI - Performans\n\nMüstəqil TechEmpower meyarları göstərir ki, Uvicorn üzərində işləyən  proqramları ən sürətli Python kitabxanalarından biridir, yalnız Starlette və Uvicorn-un özündən yavaşdır, ki FastAPI bunların üzərinə qurulmuş bir framework-dür. (*)\n\nƏtraflı məlumat üçün bu bölməyə nəzər salın Müqayisələr.",
      "title": "FastAPI - Performans",
      "section_title": "Performans",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 40,
      "chunk_id": 43
    },
    {
      "text": "# FastAPI - Məcburi Olmayan Tələblər\n\nPydantic tərəfindən istifadə olunanlar:\n\nList:\nemail-validator - e-poçtun yoxlanılması üçün.\npydantic-settings - parametrlərin idarə edilməsi üçün.\npydantic-extra-types - Pydantic ilə istifadə edilə bilən əlavə tiplər üçün.\n\nStarlette tərəfindən istifadə olunanlar:\n\nList:\n- Əgər TestClient strukturundan istifadə edəcəksinizsə, tələb olunur.\n - Standart  konfiqurasiyasından istifadə etmək istəyirsinizsə, tələb olunur.\npython-multipart - request.form() ilə forma  dəstəyindən istifadə etmək istəyirsinizsə, tələb olunur.\nitsdangerous - SessionMiddleware dəstəyi üçün tələb olunur.\n - SchemaGenerator dəstəyi üçün tələb olunur (Çox güman ki, FastAPI istifadə edərkən buna ehtiyacınız olmayacaq).\n - UJSONResponse istifadə etmək istəyirsinizsə, tələb olunur.\n\nHəm FastAPI, həm də Starlette tərəfindən istifadə olunur:\n\nList:\n- Yaratdığımız proqramı servis edəcək veb server kimi fəaliyyət göstərir.\n - ORJSONResponse istifadə edəcəksinizsə tələb olunur.\n\nBütün bunları pip install fastapi[all] ilə quraşdıra bilərsiniz.",
      "title": "FastAPI - Məcburi Olmayan Tələblər",
      "section_title": "Məcburi Olmayan Tələblər",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 126,
      "chunk_id": 44
    },
    {
      "text": "# FastAPI - Lisenziya\n\nBu layihə MIT lisenziyasının şərtlərinə əsasən lisenziyalaşdırılıb.",
      "title": "FastAPI - Lisenziya",
      "section_title": "Lisenziya",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/az/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 11,
      "chunk_id": 45
    },
    {
      "text": "# FastAPI (Part 1)\n\nFastAPI উচ্চক্ষমতা সম্পন্ন, সহজে শেখার এবং দ্রুত কোড করে প্রোডাকশনের জন্য ফ্রামওয়ার্ক।\n\nনির্দেশিকা নথি: https://fastapi.tiangolo.com\n\n: https://github.com/fastapi/fastapi\n\nFastAPI একটি আধুনিক, দ্রুত ( বেশি ক্ষমতা ) সম্পন্ন, Python 3.6+ দিয়ে API তৈরির জন্য স্ট্যান্ডার্ড পাইথন টাইপ ইঙ্গিত ভিত্তিক ওয়েব ফ্রেমওয়ার্ক।\n\nএর মূল বৈশিষ্ট্য গুলো হলঃ\n\nList:\n: এটি  এবং  এর মত কার্যক্ষমতা সম্পন্ন (Starlette এবং Pydantic এর সাহায্যে)। পাইথন এর দ্রুততম ফ্রেমওয়ার্ক গুলোর মধ্যে এটি একটি।\nদ্রুত কোড করা:বৈশিষ্ট্য তৈরির গতি ২০০% থেকে ৩০০% বৃদ্ধি করে৷ *\nস্বল্প bugs: মানুব (ডেভেলপার) সৃষ্ট ত্রুটির প্রায় ৪০% হ্রাস করে। *\n\n: দুর্দান্ত এডিটর সাহায্য Completion নামেও পরিচিত। দ্রুত ডিবাগ করা যায়।\n\n\n: এটি এমন ভাবে সজানো হয়েছে যেন নির্দেশিকা নথি পড়ে সহজে শেখা এবং ব্যবহার করা যায়।\n\n: কোড পুনরাবৃত্তি কমানোর পাশাপাশি, bug কমায় এবং প্রতিটি প্যারামিটার ঘোষণা থেকে একাধিক ফিচার পাওয়া যায় ।\n: স্বয়ংক্রিয় ভাবে তৈরি ক্রিয়াশীল নির্দেশনা নথি (documentation) সহ উৎপাদন উপযোগি (Production-ready) কোড পাওয়া যায়।\nমান-ভিত্তিক: এর ভিত্তি  (যা পুর্বে Swagger নামে পরিচিত ছিল) এবং JSON Schema এর আদর্শের মানের ওপর\n\n: দুর্দান্ত এডিটর সাহায্য Completion নামেও পরিচিত। দ্রুত ডিবাগ করা যায়।",
      "title": "FastAPI (Part 1)",
      "section_title": "FastAPI",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 1,
      "type": "section_part",
      "word_count": 177,
      "chunk_id": 46,
      "part_number": 1
    },
    {
      "text": "# FastAPI (Part 2)\n\n: এটি এমন ভাবে সজানো হয়েছে যেন নির্দেশিকা নথি পড়ে সহজে শেখা এবং ব্যবহার করা যায়।\n\n* উৎপাদনমুখি এপ্লিকেশন বানানোর এক দল ডেভেলপার এর মতামত ভিত্তিক ফলাফল।",
      "title": "FastAPI (Part 2)",
      "section_title": "FastAPI",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 1,
      "type": "section_part",
      "word_count": 31,
      "chunk_id": 47,
      "part_number": 2
    },
    {
      "text": "# FastAPI - মতামত সমূহ\n\n\"আমি আজকাল  ব্যবহার করছি। [...] আমরা ভাবছি মাইক্রোসফ্টে ML সার্ভিস এ সকল দলের জন্য এটি ব্যবহার করব। যার মধ্যে কিছু পণ্য  এ সংযোযন হয় এবং কিছু  এর সাথে সংযোযন হচ্ছে।\"\n\n\"আমরা  লাইব্রেরি গ্রহণ করেছি একটি  সার্ভার তৈরি করতে, যা ভবিষ্যদ্বাণী পাওয়ার জন্য কুয়েরি করা যেতে পারে। [লুডউইগের জন্য]\"\n\n\" আমাদের ক্রাইসিস ম্যানেজমেন্ট অর্কেস্ট্রেশন ফ্রেমওয়ার্ক:  এর ওপেন সোর্স রিলিজ ঘোষণা করতে পেরে আনন্দিত! [যাকিনা  দিয়ে নির্মিত]\"\n\n\"আমি  নিয়ে চাঁদের সমান উৎসাহিত। এটি খুবই মজার!\"\n\n\"_সত্যিই, আপনি যা তৈরি করেছেন তা খুব মজবুত এবং পরিপূর্ন৷ অনেক উপায়ে, আমি যা  এ করতে চেয়েছিলাম - তা কাউকে তৈরি করতে দেখে আমি সত্যিই অনুপ্রানিত৷_\"\n\n\"আপনি যদি REST API তৈরির জন্য একটি আধুনিক ফ্রেমওয়ার্ক শিখতে চান, তাহলে  দেখুন [...] এটি দ্রুত, ব্যবহার করা সহজ এবং শিখতেও সহজ [...]_\"\n\n\"আমরা আমাদের  [...] এর জন্য - তে এসেছি [...] আমি মনে করি আপনিও এটি পছন্দ করবেন [...]\"",
      "title": "FastAPI - মতামত সমূহ",
      "section_title": "মতামত সমূহ",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 144,
      "chunk_id": 48
    },
    {
      "text": "# FastAPI - , CLI এর জন্য FastAPI\n\nআপনি যদি  অ্যাপ বানাতে চান, যা কিনা ওয়েব API এর পরিবর্তে টার্মিনালে ব্যবহার হবে, তাহলে দেখুন.\n\nহল FastAPI এর ছোট ভাইয়ের মত। এবং এটির উদ্দেশ্য ছিল CLIs এর FastAPI হওয়া। ⌨️ 🚀",
      "title": "FastAPI - , CLI এর জন্য FastAPI",
      "section_title": ", CLI এর জন্য FastAPI",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 40,
      "chunk_id": 49
    },
    {
      "text": "# FastAPI - প্রয়োজনীয়তা গুলো\n\nFastAPI কিছু দানবেদের কাঁধে দাঁড়িয়ে আছে:\n\nList:\nওয়েব অংশের জন্য.\n ডেটা অংশগুলির জন্য.",
      "title": "FastAPI - প্রয়োজনীয়তা গুলো",
      "section_title": "প্রয়োজনীয়তা গুলো",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 18,
      "chunk_id": 50
    },
    {
      "text": "# FastAPI - ইনস্টলেশন প্রক্রিয়া\n\nআপনার একটি ASGI সার্ভারেরও প্রয়োজন হবে, প্রোডাকশনের জন্য  অথবা .\n\nCode example:\npipinstall\"uvicorn[standard]\"",
      "title": "FastAPI - ইনস্টলেশন প্রক্রিয়া",
      "section_title": "ইনস্টলেশন প্রক্রিয়া",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 18,
      "chunk_id": 51
    },
    {
      "text": "# FastAPI - তৈরি\n\nList:\nনামে একটি ফাইল তৈরি করুন:\n\nযদি আপনার কোড  / , ব্যবহার করে তাহলে  ব্যবহার করুন:\n\nআপনি যদি না জানেন, \"তাড়াহুড়ো?\" বিভাগটি দেখুন  এবং  নথির মধ্যে দেখুন .",
      "title": "FastAPI - তৈরি",
      "section_title": "তৈরি",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 32,
      "chunk_id": 52
    },
    {
      "text": "# FastAPI - এটি চালান\n\nCode example:\nuvicornmain:app--reload\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n\nuvicorn main:app নির্দেশনাটি দ্বারা বোঝায়:\n\nList:\n: ফাইল  (পাইথন \"মডিউল\")।\n: app = FastAPI() লাইন দিয়ে  এর ভিতরে তৈরি করা অবজেক্ট।\n: কোড পরিবর্তনের পরে সার্ভার পুনরায় চালু করুন। এটি শুধুমাত্র ডেভেলপমেন্ট এর সময় ব্যবহার করুন।",
      "title": "FastAPI - এটি চালান",
      "section_title": "এটি চালান",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 72,
      "chunk_id": 53
    },
    {
      "text": "# FastAPI - এটা চেক করুন\n\nআপনার ব্রাউজার খুলুন http://127.0.0.1:8000/items/5?q=somequery এ।\n\nআপনি JSON রেসপন্স দেখতে পাবেন:\n\nআপনি ইতিমধ্যে একটি API তৈরি করেছেন যা:\n\nList:\nএবং /items/{item_id}  এ HTTP অনুরোধ গ্রহণ করে।\nউভয় ই   নেয় ( যা HTTP  নামেও পরিচিত)।\n /items/{item_id}-এ একটি path প্যারামিটার  আছে যা কিনা  হতে হবে।\n /items/{item_id}-এর একটি ঐচ্ছিক  query প্যারামিটার  আছে।",
      "title": "FastAPI - এটা চেক করুন",
      "section_title": "এটা চেক করুন",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 54,
      "chunk_id": 54
    },
    {
      "text": "# FastAPI - ক্রিয়াশীল API নির্দেশিকা নথি\n\nএখন যান http://127.0.0.1:8000/docs.\n\nআপনি স্বয়ংক্রিয় ভাবে প্রস্তুত ক্রিয়াশীল API নির্দেশিকা নথি দেখতে পাবেন (Swagger UI প্রদত্ত):",
      "title": "FastAPI - ক্রিয়াশীল API নির্দেশিকা নথি",
      "section_title": "ক্রিয়াশীল API নির্দেশিকা নথি",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 23,
      "chunk_id": 55
    },
    {
      "text": "# FastAPI - বিকল্প API নির্দেশিকা নথি\n\nএবং এখন http://127.0.0.1:8000/redoc এ যান.\n\nআপনি স্বয়ংক্রিয় ভাবে প্রস্তুত বিকল্প নির্দেশিকা নথি দেখতে পাবেন ( প্রদত্ত):",
      "title": "FastAPI - বিকল্প API নির্দেশিকা নথি",
      "section_title": "বিকল্প API নির্দেশিকা নথি",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 23,
      "chunk_id": 56
    },
    {
      "text": "# FastAPI - উদাহরণস্বরূপ আপগ্রেড\n\nএখন  ফাইলটি পরিবর্তন করুন যেন এটি  রিকুয়েস্ট থেকে বডি পেতে পারে।\n\nPython স্ট্যান্ডার্ড লাইব্রেরি, Pydantic এর সাহায্যে বডি ঘোষণা করুন।\n\nCode example:\nupdate_item   \n     \"item_name\"\n\nসার্ভারটি স্বয়ংক্রিয়ভাবে পুনরায় লোড হওয়া উচিত (কারণ আপনি উপরের  কমান্ডে  যোগ করেছেন)।",
      "title": "FastAPI - উদাহরণস্বরূপ আপগ্রেড",
      "section_title": "উদাহরণস্বরূপ আপগ্রেড",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 41,
      "chunk_id": 57
    },
    {
      "text": "# FastAPI - ক্রিয়াশীল API নির্দেশিকা নথি উন্নীতকরণ\n\nএখন http://127.0.0.1:8000/docs এডড্রেসে যান.\n\nList:\nক্রিয়াশীল API নির্দেশিকা নথিটি স্বয়ংক্রিয়ভাবে উন্নীত হযে যাবে, নতুন বডি সহ:\n\nList:\n\"Try it out\" বাটনে চাপুন, এটি আপনাকে পেরামিটারগুলো পূরণ করতে এবং API এর সাথে সরাসরি ক্রিয়া-কলাপ করতে দিবে:\n\nList:\nতারপরে \"Execute\" বাটনে চাপুন, ব্যবহারকারীর ইন্টারফেস আপনার API এর সাথে যোগাযোগ করবে, পেরামিটার পাঠাবে, ফলাফলগুলি পাবে এবং সেগুলি পর্রদায় দেখাবে:",
      "title": "FastAPI - ক্রিয়াশীল API নির্দেশিকা নথি উন্নীতকরণ",
      "section_title": "ক্রিয়াশীল API নির্দেশিকা নথি উন্নীতকরণ",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 64,
      "chunk_id": 58
    },
    {
      "text": "# FastAPI - বিকল্প API নির্দেশিকা নথি আপগ্রেড\n\nএবং এখন http://127.0.0.1:8000/redoc এ যান।\n\nList:\nবিকল্প নির্দেশিকা নথিতেও নতুন কুয়েরি প্যারামিটার এবং বডি প্রতিফলিত হবে:",
      "title": "FastAPI - বিকল্প API নির্দেশিকা নথি আপগ্রেড",
      "section_title": "বিকল্প API নির্দেশিকা নথি আপগ্রেড",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 24,
      "chunk_id": 59
    },
    {
      "text": "# FastAPI - সংক্ষিপ্তকরণ (Part 1)\n\nসংক্ষেপে, আপনি শুধু একবার প্যারামিটারের ধরন, বডি ইত্যাদি ফাংশন প্যারামিটার হিসেবে ঘোষণা করেন।\n\nআপনি সেটি আধুনিক পাইথনের সাথে করেন।\n\nআপনাকে নতুন করে নির্দিষ্ট কোন লাইব্রেরির বাক্য গঠন, ফাংশন বা ক্লাস কিছুই শিখতে হচ্ছে না।\n\nশুধুই আধুনিক Python 3.6+\n\nউদাহরণস্বরূপ,  এর জন্য:\n\nঅথবা আরও জটিল  মডেলের জন্য:\n\n...এবং সেই একই ঘোষণার সাথে আপনি পাবেন:\n\nList:\nএডিটর সাহায্য, যেমন\n\n\nতথ্য যাচাইকরণ:\nডেটা অবৈধ হলে স্বয়ংক্রিয় এবং পরিষ্কার ত্রুটির নির্দেশনা।\nএমনকি গভীরভাবে নেস্ট করা JSON অবজেক্টের জন্য বৈধতা।\n\nপ্রেরিত তথ্য : যা নেটওয়ার্ক থেকে পাইথনের তথ্য এবং ধরনে আসে, এবং সেখান থেকে পড়া:\n\n\n\n\nপাথ প্যারামিটার।\nকুয়েরি প্যারামিটার।\n\n\n\n\n\n\n\nআউটপুট ডেটার : পাইথন ডেটা এবং টাইপ থেকে নেটওয়ার্ক ডেটাতে রূপান্তর করা (JSON হিসাবে):\n  -পাইথন টাইপে রূপান্তর করুন (, , , , , ইত্যাদি)।\n\n অবজেক্ট।\n objeঅবজেক্টcts।\nডাটাবেস মডেল।\n...এবং আরো অনেক।\nস্বয়ংক্রিয় ক্রিয়াশীল API নির্দেশিকা নথি, 2টি বিকল্প ব্যবহারকারীর ইন্টারফেস সহ:\nসোয়াগার ইউ আই (Swagger UI)।\nরিডক (ReDoc)।\n\nপ্রেরিত তথ্য : যা নেটওয়ার্ক থেকে পাইথনের তথ্য এবং ধরনে আসে, এবং সেখান থেকে পড়া:\n\nআউটপুট ডেটার : পাইথন ডেটা এবং টাইপ থেকে নেটওয়ার্ক ডেটাতে রূপান্তর করা (JSON হিসাবে):\n  -পাইথন টাইপে রূপান্তর করুন (, , , , , ইত্যাদি)।\n\nপূর্ববর্তী কোড উদাহরণে ফিরে আসা যাক,  যা করবে:",
      "title": "FastAPI - সংক্ষিপ্তকরণ (Part 1)",
      "section_title": "সংক্ষিপ্তকরণ",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 195,
      "chunk_id": 60,
      "part_number": 1
    },
    {
      "text": "# FastAPI - সংক্ষিপ্তকরণ (Part 2)\n\nList:\nএবং  অনুরোধের জন্য পথে  আছে কিনা তা যাচাই করবে।\n এবং  অনুরোধের জন্য  টাইপ  এর হতে হবে তা যাচাই করবে।\nযদি না হয় তবে ক্লায়েন্ট একটি উপযুক্ত, পরিষ্কার ত্রুটি দেখতে পাবেন।\n অনুরোধের জন্য একটি ঐচ্ছিক ক্যুয়েরি প্যারামিটার নামক  (যেমন http://127.0.0.1:8000/items/foo?q=somequery) আছে কি তা চেক করবে।\nযেহেতু  প্যারামিটারটি  দিয়ে ঘোষণা করা হয়েছে, তাই এটি ঐচ্ছিক।\n ছাড়া এটি প্রয়োজনীয় হতো (যেমন  এর ক্ষেত্রে হয়েছে)।\n/items/{item_id} এর জন্য  অনুরোধের বডি JSON হিসাবে পড়ুন:\nলক্ষ করুন,  একটি প্রয়োজনীয় অ্যাট্রিবিউট হিসাবে বিবেচনা করেছে এবং এটি  হতে হবে।\nলক্ষ করুন এখানে,  অ্যাট্রিবিউটটি আবশ্যক এবং এটি  হতে হবে।\nলক্ষ করুন  একটি ঐচ্ছিক অ্যাট্রিবিউট এবং এটি  হতে হবে যদি উপস্থিত থাকে।\nএই সবটি গভীরভাবে অবস্থানরত JSON অবজেক্টগুলিতেও কাজ করবে।\nস্বয়ংক্রিয়ভাবে JSON হতে এবং JSON থেকে কনভার্ট করুন।\nOpenAPI দিয়ে সবকিছু ডকুমেন্ট করুন, যা ব্যবহার করা যেতে পারে:\nক্রিয়াশীল নির্দেশিকা নথি।\nঅনেক ভাষার জন্য স্বয়ংক্রিয় ক্লায়েন্ট কোড তৈরির ব্যবস্থা।\nসরাসরি 2টি ক্রিয়াশীল নির্দেশিকা নথি ওয়েব পৃষ্ঠ প্রদান করা হয়েছে।\n\nআমরা এতক্ষন শুধু এর পৃষ্ঠ তৈরি করেছি, কিন্তু আপনি ইতমধ্যেই এটি কিভাবে কাজ করে তার ধারণাও পেয়ে গিয়েছেন।\n\nনিম্নোক্ত লাইন গুলো পরিবর্তন করার চেষ্টা করুন:",
      "title": "FastAPI - সংক্ষিপ্তকরণ (Part 2)",
      "section_title": "সংক্ষিপ্তকরণ",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 181,
      "chunk_id": 61,
      "part_number": 2
    },
    {
      "text": "# FastAPI - সংক্ষিপ্তকরণ (Part 3)\n\n...এবং দেখুন কিভাবে আপনার এডিটর উপাদানগুলোকে সয়ংক্রিয়ভাবে-সম্পন্ন করবে এবং তাদের ধরন জানতে পারবে:\n\nআরও বৈশিষ্ট্য সম্পন্ন উদাহরণের জন্য, দেখুন টিউটোরিয়াল - ব্যবহারকারীর গাইড.\n\nস্পয়লার সতর্কতা: টিউটোরিয়াল - ব্যবহারকারীর গাইড নিম্নোক্ত বিষয়গুলি অন্তর্ভুক্ত করে:\n\nList:\n, , ফর্ম ফিল্ড এবং  এমন অন্যান্য জায়গা থেকে প্যারামিটার ঘোষণা করা।\nmaximum_length বা  এর মতো যাচাইকরণ বাধামুক্তি সেট করা হয় কিভাবে, তা নিয়ে আলোচনা করা হবে।\nএকটি খুব শক্তিশালী এবং ব্যবহার করা সহজ ডিপেন্ডেন্সি ইনজেকশন পদ্ধতি\n এবং  এবং HTTP Basic auth সহ নিরাপত্তা এবং অনুমোদনপ্রাপ্তি সম্পর্কিত বিষয়সমূহের উপর।\nগভীরভাবে অবস্থানরত JSON মডেল ঘোষণা করার জন্য আরও উন্নত (কিন্তু সমান সহজ) কৌশল (Pydantic কে ধন্যবাদ)।\nআরো অতিরিক্ত বৈশিষ্ট্য (স্টারলেটকে ধন্যবাদ) হিসাবে:\nWebSockets\n\nHTTPX এবং  ভিত্তিক অত্যন্ত সহজ পরীক্ষা\n\nCookie Sessions\n...এবং আরো।",
      "title": "FastAPI - সংক্ষিপ্তকরণ (Part 3)",
      "section_title": "সংক্ষিপ্তকরণ",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 122,
      "chunk_id": 62,
      "part_number": 3
    },
    {
      "text": "# FastAPI - কর্মক্ষমতা\n\nস্বাধীন TechEmpower Benchmarks দেখায় যে  অ্যাপ্লিকেশনগুলি Uvicorn-এর অধীনে চলমান দ্রুততমপাইথন ফ্রেমওয়ার্কগুলির মধ্যে একটি, শুধুমাত্র Starlette এবং Uvicorn-এর পর (FastAPI দ্বারা অভ্যন্তরীণভাবে ব্যবহৃত)। (*)\n\nএটি সম্পর্কে আরও বুঝতে, দেখুন Benchmarks.",
      "title": "FastAPI - কর্মক্ষমতা",
      "section_title": "কর্মক্ষমতা",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 33,
      "chunk_id": 63
    },
    {
      "text": "# FastAPI - ঐচ্ছিক নির্ভরশীলতা\n\nPydantic দ্বারা ব্যবহৃত:\n\nList:\nemail-validator - ইমেল যাচাইকরণের জন্য।\n\nস্টারলেট দ্বারা ব্যবহৃত:\n\nList:\n- আপনি যদি TestClient ব্যবহার করতে চান তাহলে আবশ্যক।\n - আপনি যদি প্রদত্ত টেমপ্লেট রূপরেখা ব্যবহার করতে চান তাহলে প্রয়োজন।\npython-multipart - আপনি যদি ফর্ম সহায়তা করতে চান তাহলে প্রয়োজন , request.form() সহ।\nitsdangerous - SessionMiddleware সহায়তার জন্য প্রয়োজন।\n - স্টারলেটের SchemaGenerator সাপোর্ট এর জন্য প্রয়োজন (আপনার সম্ভাবত FastAPI প্রয়োজন নেই)।\n - GraphQLApp সহায়তার জন্য প্রয়োজন।\n\nFastAPI / Starlette দ্বারা ব্যবহৃত:\n\nList:\n- সার্ভারের জন্য যা আপনার অ্যাপ্লিকেশন লোড করে এবং পরিবেশন করে।\n - আপনি ORJSONResponse ব্যবহার করতে চাইলে প্রয়োজন।\n - আপনি UJSONResponse ব্যবহার করতে চাইলে প্রয়োজন।\n\nআপনি এই সব ইনস্টল করতে পারেন pip install fastapi[all] দিয়ে.",
      "title": "FastAPI - ঐচ্ছিক নির্ভরশীলতা",
      "section_title": "ঐচ্ছিক নির্ভরশীলতা",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 115,
      "chunk_id": 64
    },
    {
      "text": "# FastAPI - লাইসেন্স\n\nএই প্রজেক্ট MIT লাইসেন্স নীতিমালার অধীনে শর্তায়িত।",
      "title": "FastAPI - লাইসেন্স",
      "section_title": "লাইসেন্স",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/bn/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 11,
      "chunk_id": 65
    },
    {
      "text": "# FastAPI (Part 1)\n\nFastAPI-Framework, hohe Performanz, leicht zu lernen, schnell zu entwickeln, produktionsreif\n\nDokumentation: https://fastapi.tiangolo.com/de\n\n: https://github.com/fastapi/fastapi\n\nFastAPI ist ein modernes, schnelles (hoch performantes) Webframework zur Erstellung von APIs mit Python auf Basis von Standard-Python-Typhinweisen.\n\nSeine Schlüssel-Merkmale sind:",
      "title": "FastAPI (Part 1)",
      "section_title": "FastAPI",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 1,
      "type": "section_part",
      "word_count": 39,
      "chunk_id": 66,
      "part_number": 1
    },
    {
      "text": "# FastAPI (Part 2)\n\nList:\n: Sehr hohe Performanz, auf Augenhöhe mit  und  (dank Starlette und Pydantic). Eines der schnellsten verfügbaren Python-Frameworks.\nSchnell zu entwickeln: Erhöhen Sie die Geschwindigkeit bei der Entwicklung von Features um etwa 200 % bis 300 %. *\nWeniger Bugs: Verringern Sie die von Menschen (Entwicklern) verursachten Fehler um etwa 40 %. *\n: Hervorragende Editor-Unterstützung. Code-Vervollständigung überall. Weniger Zeit mit Debuggen verbringen.\n: So konzipiert, dass es einfach zu benutzen und zu erlernen ist. Weniger Zeit mit dem Lesen von Dokumentation verbringen.\n: Minimieren Sie die Verdoppelung von Code. Mehrere Features aus jeder Parameterdeklaration. Weniger Bugs.\n: Erhalten Sie produktionsreifen Code. Mit automatischer, interaktiver Dokumentation.\nStandards-basiert: Basierend auf (und vollständig kompatibel mit) den offenen Standards für APIs:  (früher bekannt als Swagger) und JSON Schema.\n\n* Schätzung basierend auf Tests in einem internen Entwicklungsteam, das Produktionsanwendungen erstellt.",
      "title": "FastAPI (Part 2)",
      "section_title": "FastAPI",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 1,
      "type": "section_part",
      "word_count": 141,
      "chunk_id": 67,
      "part_number": 2
    },
    {
      "text": "# FastAPI - Meinungen (Part 1)\n\n„[...] Ich verwende  heutzutage sehr oft. [...] Ich habe tatsächlich vor, es für alle ML-Services meines Teams bei Microsoft zu verwenden. Einige davon werden in das Kernprodukt  und einige -Produkte integriert.“\n\n„Wir haben die -Bibliothek übernommen, um einen -Server zu erstellen, der für Vorhersagen abgefragt werden kann. [für Ludwig]“\n\n„ freut sich, die Open-Source-Veröffentlichung unseres Krisenmanagement-Orchestrierung-Frameworks bekannt zu geben: ! [erstellt mit ]“\n\n„Ich bin hellauf begeistert von . Es macht so viel Spaß!“\n\n„Ehrlich, was Du gebaut hast, sieht super solide und poliert aus. In vielerlei Hinsicht ist es so, wie ich  haben wollte – es ist wirklich inspirierend, jemanden so etwas bauen zu sehen.“\n\n„Wenn Sie ein modernes Framework zum Erstellen von REST-APIs erlernen möchten, schauen Sie sich  an. [...] Es ist schnell, einfach zu verwenden und leicht zu lernen [...]“\n\n„Wir haben zu  für unsere  gewechselt [...] Ich denke, es wird Ihnen gefallen [...]“",
      "title": "FastAPI - Meinungen (Part 1)",
      "section_title": "Meinungen",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "section_part",
      "word_count": 153,
      "chunk_id": 68,
      "part_number": 1
    },
    {
      "text": "# FastAPI - Meinungen (Part 2)\n\n„Falls irgendjemand eine Produktions-Python-API erstellen möchte, kann ich  wärmstens empfehlen. Es ist wunderschön konzipiert, einfach zu verwenden und hoch skalierbar; es ist zu einer Schlüsselkomponente unserer API-First-Entwicklungsstrategie geworden und treibt viele Automatisierungen und Services an, wie etwa unseren Virtual TAC Engineer.“",
      "title": "FastAPI - Meinungen (Part 2)",
      "section_title": "Meinungen",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "section_part",
      "word_count": 47,
      "chunk_id": 69,
      "part_number": 2
    },
    {
      "text": "# FastAPI - , das FastAPI der CLIs\n\nWenn Sie eine -Anwendung für das Terminal erstellen, anstelle einer Web-API, schauen Sie sich  an.\n\nist die kleine Schwester von FastAPI. Und es soll das FastAPI der CLIs sein. ⌨️ 🚀",
      "title": "FastAPI - , das FastAPI der CLIs",
      "section_title": ", das FastAPI der CLIs",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 39,
      "chunk_id": 70
    },
    {
      "text": "# FastAPI - Anforderungen\n\nFastAPI steht auf den Schultern von Giganten:\n\nList:\nfür die Webanteile.\n für die Datenanteile.",
      "title": "FastAPI - Anforderungen",
      "section_title": "Anforderungen",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 18,
      "chunk_id": 71
    },
    {
      "text": "# FastAPI - Installation\n\nErstellen und aktivieren Sie eine virtuelle Umgebung und installieren Sie dann FastAPI:\n\nCode example:\npipinstall\"fastapi[standard]\"\n\n: Stellen Sie sicher, dass Sie \"fastapi[standard]\" in Anführungszeichen setzen, damit es in allen Terminals funktioniert.",
      "title": "FastAPI - Installation",
      "section_title": "Installation",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 35,
      "chunk_id": 72
    },
    {
      "text": "# FastAPI - Erstellung\n\nErstellen Sie eine Datei  mit:\n\nWenn Ihr Code  /  verwendet, benutzen Sie :\n\nWenn Sie das nicht kennen, schauen Sie sich den Abschnitt „In Eile?“ über  und  in der Dokumentation an.",
      "title": "FastAPI - Erstellung",
      "section_title": "Erstellung",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 35,
      "chunk_id": 73
    },
    {
      "text": "# FastAPI - Starten (Part 1)\n\nStarten Sie den Server mit:\n\nCode example:\nfastapidevmain.py\n ╭────────── FastAPI CLI - Development mode ───────────╮\n │                                                     │\n │  Serving at: http://127.0.0.1:8000                  │\n │                                                     │\n │  API docs: http://127.0.0.1:8000/docs               │\n │                                                     │\n │  Running in development mode, for production use:   │\n │                                                     │\n │  fastapi run                                        │\n │                                                     │\n ╰─────────────────────────────────────────────────────╯\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n\nDer Befehl fastapi dev liest Ihre -Datei, erkennt die -App darin und startet einen Server mit .",
      "title": "FastAPI - Starten (Part 1)",
      "section_title": "Starten",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 111,
      "chunk_id": 74,
      "part_number": 1
    },
    {
      "text": "# FastAPI - Starten (Part 2)\n\nStandardmäßig wird fastapi dev mit aktiviertem Auto-Reload für die lokale Entwicklung gestartet.\n\nSie können mehr darüber in der FastAPI CLI Dokumentation lesen.",
      "title": "FastAPI - Starten (Part 2)",
      "section_title": "Starten",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 28,
      "chunk_id": 75,
      "part_number": 2
    },
    {
      "text": "# FastAPI - Es testen\n\nÖffnen Sie Ihren Browser unter http://127.0.0.1:8000/items/5?q=somequery.\n\nSie sehen die JSON- als:\n\nSie haben bereits eine API erstellt, welche:\n\nList:\nHTTP- auf den   und /items/{item_id} entgegennimmt.\nBeide  nehmen  Operationen (auch bekannt als HTTP-) entgegen.\nDer  /items/{item_id} hat einen Pfad-Parameter , der ein  sein sollte.\nDer  /items/{item_id} hat einen optionalen -Query-Parameter .",
      "title": "FastAPI - Es testen",
      "section_title": "Es testen",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 55,
      "chunk_id": 76
    },
    {
      "text": "# FastAPI - Interaktive API-Dokumentation\n\nGehen Sie nun auf http://127.0.0.1:8000/docs.\n\nSie sehen die automatische interaktive API-Dokumentation (bereitgestellt von Swagger UI):",
      "title": "FastAPI - Interaktive API-Dokumentation",
      "section_title": "Interaktive API-Dokumentation",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 20,
      "chunk_id": 77
    },
    {
      "text": "# FastAPI - Alternative API-Dokumentation\n\nUnd jetzt gehen Sie auf http://127.0.0.1:8000/redoc.\n\nSie sehen die alternative automatische Dokumentation (bereitgestellt von ):",
      "title": "FastAPI - Alternative API-Dokumentation",
      "section_title": "Alternative API-Dokumentation",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 20,
      "chunk_id": 78
    },
    {
      "text": "# FastAPI - Beispiel Aktualisierung\n\nÄndern Sie jetzt die Datei , um den  eines -Requests zu empfangen.\n\nDeklarieren Sie den Body mit Standard-Python-Typen, dank Pydantic.\n\nCode example:\nupdate_item   \n     \"item_name\"\n\nDer fastapi dev-Server sollte automatisch neu laden.",
      "title": "FastAPI - Beispiel Aktualisierung",
      "section_title": "Beispiel Aktualisierung",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 36,
      "chunk_id": 79
    },
    {
      "text": "# FastAPI - Interaktive API-Dokumentation aktualisieren\n\nGehen Sie jetzt auf http://127.0.0.1:8000/docs.\n\nList:\nDie interaktive API-Dokumentation wird automatisch aktualisiert, einschließlich des neuen Bodys:\n\nList:\nKlicken Sie auf den Button „Try it out“, damit können Sie die Parameter ausfüllen und direkt mit der API interagieren:\n\nList:\nKlicken Sie dann auf den Button „Execute“, die Benutzeroberfläche wird mit Ihrer API kommunizieren, sendet die Parameter, holt die Ergebnisse und zeigt sie auf dem Bildschirm an:",
      "title": "FastAPI - Interaktive API-Dokumentation aktualisieren",
      "section_title": "Interaktive API-Dokumentation aktualisieren",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 71,
      "chunk_id": 80
    },
    {
      "text": "# FastAPI - Alternative API-Dokumentation aktualisieren\n\nUnd jetzt gehen Sie auf http://127.0.0.1:8000/redoc.\n\nList:\nDie alternative Dokumentation wird ebenfalls den neuen Query-Parameter und Body widerspiegeln:",
      "title": "FastAPI - Alternative API-Dokumentation aktualisieren",
      "section_title": "Alternative API-Dokumentation aktualisieren",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 24,
      "chunk_id": 81
    },
    {
      "text": "# FastAPI - Zusammenfassung (Part 1)\n\nZusammengefasst deklarieren Sie  die Typen von Parametern, Body, usw. als Funktionsparameter.\n\nDas machen Sie mit modernen Standard-Python-Typen.\n\nSie müssen keine neue Syntax, Methoden oder Klassen einer bestimmten Bibliothek usw. lernen.\n\nZum Beispiel für ein :\n\noder für ein komplexeres -Modell:\n\n... und mit dieser einen Deklaration erhalten Sie:\n\nList:\nEditor-Unterstützung, einschließlich:\nCode-Vervollständigung.\nTypprüfungen.\n\n\nValidierung von Daten:\nAutomatische und eindeutige Fehler, wenn die Daten ungültig sind.\nValidierung sogar für tief verschachtelte JSON-Objekte.\n\n\nKonvertierung von Eingabedaten: Aus dem Netzwerk kommend, zu Python-Daten und -Typen. Lesen von:\n\nPfad-Parametern.\nQuery-Parametern.\n\n\nFormularen.\n\n\n\nKonvertierung von Ausgabedaten: Konvertierung von Python-Daten und -Typen zu Netzwerkdaten (als JSON):\nKonvertieren von Python-Typen (, , , , , usw.).\n-Objekte.\n-Objekte.\nDatenbankmodelle.\n... und viele mehr.\n\n\nAutomatische interaktive API-Dokumentation, einschließlich zwei alternativer Benutzeroberflächen:\nSwagger UI.\n\nList:\nCode-Vervollständigung.\nTypprüfungen.\n\nList:\nAutomatische und eindeutige Fehler, wenn die Daten ungültig sind.\nValidierung sogar für tief verschachtelte JSON-Objekte.",
      "title": "FastAPI - Zusammenfassung (Part 1)",
      "section_title": "Zusammenfassung",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 149,
      "chunk_id": 82,
      "part_number": 1
    },
    {
      "text": "# FastAPI - Zusammenfassung (Part 2)\n\nList:\nPfad-Parametern.\nQuery-Parametern.\n\n\nFormularen.\n\nList:\nKonvertieren von Python-Typen (, , , , , usw.).\n-Objekte.\n-Objekte.\nDatenbankmodelle.\n... und viele mehr.\n\nUm auf das vorherige Codebeispiel zurückzukommen,  wird:\n\nList:\nValidieren, dass es eine  im Pfad für - und -Requests gibt.\nValidieren, ob die  vom Typ  für - und -Requests ist.\nFalls nicht, sieht der Client einen hilfreichen, klaren Fehler.\n\n\nPrüfen, ob es einen optionalen Query-Parameter namens  (wie in http://127.0.0.1:8000/items/foo?q=somequery) für -Requests gibt.\nDa der -Parameter mit  deklariert ist, ist er optional.\nOhne das  wäre er erforderlich (wie der Body im Fall von ).\n\n\nBei -Requests an /items/{item_id} den Body als JSON lesen:\nPrüfen, ob er ein erforderliches Attribut  hat, das ein  sein muss.\nPrüfen, ob er ein erforderliches Attribut  hat, das ein  sein muss.\nPrüfen, ob er ein optionales Attribut  hat, das ein  sein muss, falls vorhanden.\nAll dies würde auch für tief verschachtelte JSON-Objekte funktionieren.",
      "title": "FastAPI - Zusammenfassung (Part 2)",
      "section_title": "Zusammenfassung",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 152,
      "chunk_id": 83,
      "part_number": 2
    },
    {
      "text": "# FastAPI - Zusammenfassung (Part 3)\n\n\nAutomatisch von und nach JSON konvertieren.\nAlles mit OpenAPI dokumentieren, welches verwendet werden kann von:\nInteraktiven Dokumentationssystemen.\nAutomatisch Client-Code generierenden Systemen für viele Sprachen.\n\n\nZwei interaktive Dokumentations-Weboberflächen direkt bereitstellen.\n\nList:\nFalls nicht, sieht der Client einen hilfreichen, klaren Fehler.\n\nList:\nDa der -Parameter mit  deklariert ist, ist er optional.\nOhne das  wäre er erforderlich (wie der Body im Fall von ).\n\nList:\nPrüfen, ob er ein erforderliches Attribut  hat, das ein  sein muss.\nPrüfen, ob er ein erforderliches Attribut  hat, das ein  sein muss.\nPrüfen, ob er ein optionales Attribut  hat, das ein  sein muss, falls vorhanden.\nAll dies würde auch für tief verschachtelte JSON-Objekte funktionieren.\n\nList:\nInteraktiven Dokumentationssystemen.\nAutomatisch Client-Code generierenden Systemen für viele Sprachen.\n\nWir haben nur an der Oberfläche gekratzt, aber Sie bekommen schon eine Vorstellung davon, wie das Ganze funktioniert.\n\nVersuchen Sie, diese Zeile zu ändern:\n\n... und sehen Sie, wie Ihr Editor die Attribute automatisch vervollständigt und ihre Typen kennt:",
      "title": "FastAPI - Zusammenfassung (Part 3)",
      "section_title": "Zusammenfassung",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 161,
      "chunk_id": 84,
      "part_number": 3
    },
    {
      "text": "# FastAPI - Zusammenfassung (Part 4)\n\nFür ein vollständigeres Beispiel, mit weiteren Funktionen, siehe das Tutorial – Benutzerhandbuch.\n\nSpoiler-Alarm: Das Tutorial – Benutzerhandbuch enthält:\n\nList:\nDeklaration von Parametern von anderen verschiedenen Stellen wie: , , Formularfelder und .\nWie man Validierungs-Constraints wie maximum_length oder  setzt.\nEin sehr leistungsfähiges und einfach zu bedienendes System für Dependency Injection.\nSicherheit und Authentifizierung, einschließlich Unterstützung für  mit JWT-Tokens und HTTP Basic Authentifizierung.\nFortgeschrittenere (aber ebenso einfache) Techniken zur Deklaration tief verschachtelter JSON-Modelle (dank Pydantic).\n-Integration mit Strawberry und anderen Bibliotheken.\nViele zusätzliche Features (dank Starlette) wie:\nWebSockets\nextrem einfache Tests auf Basis von HTTPX und \n\nCookie-Sessions\n... und mehr.\n\nList:\nWebSockets\nextrem einfache Tests auf Basis von HTTPX und \n\nCookie-Sessions\n... und mehr.",
      "title": "FastAPI - Zusammenfassung (Part 4)",
      "section_title": "Zusammenfassung",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 119,
      "chunk_id": 85,
      "part_number": 4
    },
    {
      "text": "# FastAPI - Performanz\n\nUnabhängige TechEmpower-Benchmarks zeigen -Anwendungen, die unter Uvicorn laufen, als eines der schnellsten verfügbaren Python-Frameworks, nur hinter Starlette und Uvicorn selbst (intern von FastAPI verwendet). (*)\n\nUm mehr darüber zu erfahren, siehe den Abschnitt Benchmarks.",
      "title": "FastAPI - Performanz",
      "section_title": "Performanz",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 38,
      "chunk_id": 86
    },
    {
      "text": "# FastAPI - Abhängigkeiten\n\nFastAPI hängt von Pydantic und Starlette ab.",
      "title": "FastAPI - Abhängigkeiten",
      "section_title": "Abhängigkeiten",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 11,
      "chunk_id": 87
    },
    {
      "text": "# FastAPI - -Abhängigkeiten\n\nWenn Sie FastAPI mit pip install \"fastapi[standard]\" installieren, kommt es mit der -Gruppe optionaler Abhängigkeiten:\n\nVerwendet von Pydantic:\n\nList:\nemail-validator – für E-Mail-Validierung.\n\nVerwendet von Starlette:\n\nList:\n– erforderlich, wenn Sie den TestClient verwenden möchten.\n – erforderlich, wenn Sie die Default-Template-Konfiguration verwenden möchten.\npython-multipart – erforderlich, wenn Sie Formulare mittels request.form()  möchten.\n\nVerwendet von FastAPI:\n\nList:\n– für den Server, der Ihre Anwendung lädt und bereitstellt. Dies umfasst uvicorn[standard], das einige Abhängigkeiten (z. B. ) beinhaltet, die für eine Bereitstellung mit hoher Performanz benötigt werden.\nfastapi-cli[standard] – um den -Befehl bereitzustellen.\nDies beinhaltet fastapi-cloud-cli, das es Ihnen ermöglicht, Ihre FastAPI-Anwendung auf FastAPI Cloud bereitzustellen.\n\nList:\nDies beinhaltet fastapi-cloud-cli, das es Ihnen ermöglicht, Ihre FastAPI-Anwendung auf FastAPI Cloud bereitzustellen.",
      "title": "FastAPI - -Abhängigkeiten",
      "section_title": "-Abhängigkeiten",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 122,
      "chunk_id": 88
    },
    {
      "text": "# FastAPI - Ohne -Abhängigkeiten\n\nWenn Sie die  optionalen Abhängigkeiten nicht einschließen möchten, können Sie mit pip install fastapi statt pip install \"fastapi[standard]\" installieren.",
      "title": "FastAPI - Ohne -Abhängigkeiten",
      "section_title": "Ohne -Abhängigkeiten",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 24,
      "chunk_id": 89
    },
    {
      "text": "# FastAPI - Ohne fastapi-cloud-cli\n\nWenn Sie FastAPI mit den Standardabhängigkeiten, aber ohne das fastapi-cloud-cli installieren möchten, können Sie mit pip install \"fastapi[standard-no-fastapi-cloud-cli]\" installieren.",
      "title": "FastAPI - Ohne fastapi-cloud-cli",
      "section_title": "Ohne fastapi-cloud-cli",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 24,
      "chunk_id": 90
    },
    {
      "text": "# FastAPI - Zusätzliche optionale Abhängigkeiten\n\nEs gibt einige zusätzliche Abhängigkeiten, die Sie installieren möchten.\n\nZusätzliche optionale Pydantic-Abhängigkeiten:\n\nList:\npydantic-settings – für die Verwaltung von Einstellungen.\npydantic-extra-types – für zusätzliche Typen zur Verwendung mit Pydantic.\n\nZusätzliche optionale FastAPI-Abhängigkeiten:\n\nList:\n– erforderlich, wenn Sie ORJSONResponse verwenden möchten.\n – erforderlich, wenn Sie UJSONResponse verwenden möchten.",
      "title": "FastAPI - Zusätzliche optionale Abhängigkeiten",
      "section_title": "Zusätzliche optionale Abhängigkeiten",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 53,
      "chunk_id": 91
    },
    {
      "text": "# FastAPI - Lizenz\n\nDieses Projekt ist unter den Bedingungen der MIT-Lizenz lizenziert.",
      "title": "FastAPI - Lizenz",
      "section_title": "Lizenz",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/de/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 13,
      "chunk_id": 92
    },
    {
      "text": "# FastAPI (Part 1)\n\nFastAPI framework, alto rendimiento, fácil de aprender, rápido de programar, listo para producción\n\nDocumentación: https://fastapi.tiangolo.com\n\nCódigo Fuente: https://github.com/fastapi/fastapi\n\nFastAPI es un framework web moderno, rápido (de alto rendimiento), para construir APIs con Python basado en las anotaciones de tipos estándar de Python.\n\nLas características clave son:",
      "title": "FastAPI (Part 1)",
      "section_title": "FastAPI",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 1,
      "type": "section_part",
      "word_count": 50,
      "chunk_id": 93,
      "part_number": 1
    },
    {
      "text": "# FastAPI (Part 2)\n\nList:\n: Muy alto rendimiento, a la par con  y  (gracias a Starlette y Pydantic). Uno de los frameworks Python más rápidos disponibles.\nRápido de programar: Aumenta la velocidad para desarrollar funcionalidades en aproximadamente un 200% a 300%. *\nMenos bugs: Reduce en aproximadamente un 40% los errores inducidos por humanos (desarrolladores). *\n: Gran soporte para editores. Autocompletado en todas partes. Menos tiempo depurando.\n: Diseñado para ser fácil de usar y aprender. Menos tiempo leyendo documentación.\n: Minimiza la duplicación de código. Múltiples funcionalidades desde cada declaración de parámetro. Menos bugs.\n: Obtén código listo para producción. Con documentación interactiva automática.\nBasado en estándares: Basado (y completamente compatible) con los estándares abiertos para APIs:  (anteriormente conocido como Swagger) y JSON Schema.\n\n* estimación basada en pruebas con un equipo de desarrollo interno, construyendo aplicaciones de producción.",
      "title": "FastAPI (Part 2)",
      "section_title": "FastAPI",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 1,
      "type": "section_part",
      "word_count": 142,
      "chunk_id": 94,
      "part_number": 2
    },
    {
      "text": "# FastAPI - Opiniones (Part 1)\n\n\"[...] Estoy usando  un montón estos días. [...] De hecho, estoy planeando usarlo para todos los servicios de ML de mi equipo en Microsoft. Algunos de ellos se están integrando en el núcleo del producto  y algunos productos de .\"\n\n\"Adoptamos el paquete  para crear un servidor  que pueda ser consultado para obtener predicciones. [para Ludwig]\"\n\n\" se complace en anunciar el lanzamiento de código abierto de nuestro framework de orquestación de gestión de crisis: ! [construido con ]\"\n\n\"Estoy súper emocionado con . ¡Es tan divertido!\"\n\n\"Honestamente, lo que has construido parece súper sólido y pulido. En muchos aspectos, es lo que quería que  fuera; es realmente inspirador ver a alguien construir eso.\"\n\n\"Si estás buscando aprender un framework moderno para construir APIs REST, échale un vistazo a  [...] Es rápido, fácil de usar y fácil de aprender [...]\"\n\n\"Nos hemos cambiado a  para nuestras  [...] Creo que te gustará [...]\"",
      "title": "FastAPI - Opiniones (Part 1)",
      "section_title": "Opiniones",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "section_part",
      "word_count": 158,
      "chunk_id": 95,
      "part_number": 1
    },
    {
      "text": "# FastAPI - Opiniones (Part 2)\n\n\"Si alguien está buscando construir una API de Python para producción, altamente recomendaría . Está hermosamente diseñado, es simple de usar y altamente escalable, se ha convertido en un componente clave en nuestra estrategia de desarrollo API primero y está impulsando muchas automatizaciones y servicios como nuestro Ingeniero Virtual TAC.\"",
      "title": "FastAPI - Opiniones (Part 2)",
      "section_title": "Opiniones",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "section_part",
      "word_count": 56,
      "chunk_id": 96,
      "part_number": 2
    },
    {
      "text": "# FastAPI - , el FastAPI de las CLIs\n\nSi estás construyendo una aplicación de  para ser usada en el terminal en lugar de una API web, revisa .\n\nes el hermano pequeño de FastAPI. Y está destinado a ser el FastAPI de las CLIs. ⌨️ 🚀",
      "title": "FastAPI - , el FastAPI de las CLIs",
      "section_title": ", el FastAPI de las CLIs",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 47,
      "chunk_id": 97
    },
    {
      "text": "# FastAPI - Requisitos\n\nFastAPI se apoya en hombros de gigantes:\n\nList:\npara las partes web.\n para las partes de datos.",
      "title": "FastAPI - Requisitos",
      "section_title": "Requisitos",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 21,
      "chunk_id": 98
    },
    {
      "text": "# FastAPI - Instalación\n\nCrea y activa un entorno virtual y luego instala FastAPI:\n\nCode example:\npipinstall\"fastapi[standard]\"\n\n: Asegúrate de poner \"fastapi[standard]\" entre comillas para asegurar que funcione en todas las terminales.",
      "title": "FastAPI - Instalación",
      "section_title": "Instalación",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 32,
      "chunk_id": 99
    },
    {
      "text": "# FastAPI - Créalo\n\nList:\nCrea un archivo  con:\n\nSi tu código usa  / , usa :\n\nSi no lo sabes, revisa la sección \"¿Con prisa?\" sobre  y  en la documentación.",
      "title": "FastAPI - Créalo",
      "section_title": "Créalo",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 31,
      "chunk_id": 100
    },
    {
      "text": "# FastAPI - Córrelo (Part 1)\n\nCorre el servidor con:\n\nCode example:\nfastapidevmain.py\n ╭────────── FastAPI CLI - Development mode ───────────╮\n │                                                     │\n │  Serving at: http://127.0.0.1:8000                  │\n │                                                     │\n │  API docs: http://127.0.0.1:8000/docs               │\n │                                                     │\n │  Running in development mode, for production use:   │\n │                                                     │\n │  fastapi run                                        │\n │                                                     │\n ╰─────────────────────────────────────────────────────╯\nINFO:     Will watch for changes in these directories: ['/home/user/code/awesomeapp']\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [2248755] using WatchFiles\nINFO:     Started server process [2248757]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n\nEl comando fastapi dev lee tu archivo , detecta la app  en él y arranca un servidor usando .",
      "title": "FastAPI - Córrelo (Part 1)",
      "section_title": "Córrelo",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 112,
      "chunk_id": 101,
      "part_number": 1
    },
    {
      "text": "# FastAPI - Córrelo (Part 2)\n\nPor defecto, fastapi dev comenzará con auto-recarga habilitada para el desarrollo local.\n\nPuedes leer más sobre esto en la documentación del CLI de FastAPI.",
      "title": "FastAPI - Córrelo (Part 2)",
      "section_title": "Córrelo",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 30,
      "chunk_id": 102,
      "part_number": 2
    },
    {
      "text": "# FastAPI - Revísalo\n\nAbre tu navegador en http://127.0.0.1:8000/items/5?q=somequery.\n\nVerás el response JSON como:\n\nYa creaste una API que:\n\nList:\nRecibe requests HTTP en los   y /items/{item_id}.\nAmbos  toman operaciones  (también conocidas como métodos HTTP).\nEl  /items/{item_id} tiene un parámetro de path  que debe ser un .\nEl  /items/{item_id} tiene un parámetro de query  opcional que es un .",
      "title": "FastAPI - Revísalo",
      "section_title": "Revísalo",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 59,
      "chunk_id": 103
    },
    {
      "text": "# FastAPI - Documentación interactiva de la API\n\nAhora ve a http://127.0.0.1:8000/docs.\n\nVerás la documentación interactiva automática de la API (proporcionada por Swagger UI):",
      "title": "FastAPI - Documentación interactiva de la API",
      "section_title": "Documentación interactiva de la API",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 24,
      "chunk_id": 104
    },
    {
      "text": "# FastAPI - Documentación de API Alternativa\n\nY ahora, ve a http://127.0.0.1:8000/redoc.\n\nVerás la documentación alternativa automática (proporcionada por ):",
      "title": "FastAPI - Documentación de API Alternativa",
      "section_title": "Documentación de API Alternativa",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 20,
      "chunk_id": 105
    },
    {
      "text": "# FastAPI - Actualización del Ejemplo\n\nAhora modifica el archivo  para recibir un body desde un request .\n\nDeclara el body usando tipos estándar de Python, gracias a Pydantic.\n\nCode example:\nupdate_item   \n     \"item_name\"\n\nEl servidor fastapi dev debería recargarse automáticamente.",
      "title": "FastAPI - Actualización del Ejemplo",
      "section_title": "Actualización del Ejemplo",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 40,
      "chunk_id": 106
    },
    {
      "text": "# FastAPI - Actualización de la Documentación Interactiva de la API\n\nAhora ve a http://127.0.0.1:8000/docs.\n\nList:\nLa documentación interactiva de la API se actualizará automáticamente, incluyendo el nuevo body:\n\nList:\nHaz clic en el botón \"Try it out\", te permite llenar los parámetros e interactuar directamente con la API:\n\nList:\nLuego haz clic en el botón \"Execute\", la interfaz de usuario se comunicará con tu API, enviará los parámetros, obtendrá los resultados y los mostrará en la pantalla:",
      "title": "FastAPI - Actualización de la Documentación Interactiva de la API",
      "section_title": "Actualización de la Documentación Interactiva de la API",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 78,
      "chunk_id": 107
    },
    {
      "text": "# FastAPI - Actualización de la Documentación Alternativa de la API\n\nY ahora, ve a http://127.0.0.1:8000/redoc.\n\nList:\nLa documentación alternativa también reflejará el nuevo parámetro de query y body:",
      "title": "FastAPI - Actualización de la Documentación Alternativa de la API",
      "section_title": "Actualización de la Documentación Alternativa de la API",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 29,
      "chunk_id": 108
    },
    {
      "text": "# FastAPI - Resumen (Part 1)\n\nEn resumen, declaras  los tipos de parámetros, body, etc. como parámetros de función.\n\nLo haces con tipos estándar modernos de Python.\n\nNo tienes que aprender una nueva sintaxis, los métodos o clases de un paquete específico, etc.\n\nPor ejemplo, para un :\n\no para un modelo  más complejo:\n\n...y con esa única declaración obtienes:\n\nList:\nSoporte para editores, incluyendo:\nAutocompletado.\nChequeo de tipos.\n\n\nValidación de datos:\nErrores automáticos y claros cuando los datos son inválidos.\nValidación incluso para objetos JSON profundamente anidados.\n\n\nConversión de datos de entrada: de la red a los datos y tipos de Python. Leyendo desde:\n\nParámetros de path.\nParámetros de query.\n\n\n\n\n\n\nConversión de datos de salida: convirtiendo de datos y tipos de Python a datos de red (como JSON):\nConvertir tipos de Python (, , , , , etc).\nObjetos .\nObjetos .\nModelos de base de datos.\n...y muchos más.\n\n\nDocumentación interactiva automática de la API, incluyendo 2 interfaces de usuario alternativas:\nSwagger UI.\n\nList:\nAutocompletado.\nChequeo de tipos.\n\nList:\nErrores automáticos y claros cuando los datos son inválidos.\nValidación incluso para objetos JSON profundamente anidados.\n\nList:\nParámetros de path.\nParámetros de query.",
      "title": "FastAPI - Resumen (Part 1)",
      "section_title": "Resumen",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 194,
      "chunk_id": 109,
      "part_number": 1
    },
    {
      "text": "# FastAPI - Resumen (Part 2)\n\nList:\nConvertir tipos de Python (, , , , , etc).\nObjetos .\nObjetos .\nModelos de base de datos.\n...y muchos más.\n\nVolviendo al ejemplo de código anterior, :\n\nList:\nValidará que haya un  en el path para requests  y .\nValidará que el  sea del tipo  para requests  y .\nSi no lo es, el cliente verá un error útil y claro.\n\n\nComprobará si hay un parámetro de query opcional llamado  (como en http://127.0.0.1:8000/items/foo?q=somequery) para requests .\nComo el parámetro  está declarado con , es opcional.\nSin el  sería requerido (como lo es el body en el caso con ).\n\n\nPara requests  a /items/{item_id}, leerá el body como JSON:\nComprobará que tiene un atributo requerido  que debe ser un .\nComprobará que tiene un atributo requerido  que debe ser un .\nComprobará que tiene un atributo opcional , que debe ser un , si está presente.\nTodo esto también funcionaría para objetos JSON profundamente anidados.\n\n\nConvertirá de y a JSON automáticamente.\nDocumentará todo con OpenAPI, que puede ser usado por:\nSistemas de documentación interactiva.\nSistemas de generación automática de código cliente, para muchos lenguajes.\n\n\nProporcionará 2 interfaces web de documentación interactiva directamente.",
      "title": "FastAPI - Resumen (Part 2)",
      "section_title": "Resumen",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 200,
      "chunk_id": 110,
      "part_number": 2
    },
    {
      "text": "# FastAPI - Resumen (Part 3)\n\nList:\nSi no lo es, el cliente verá un error útil y claro.\n\nList:\nComo el parámetro  está declarado con , es opcional.\nSin el  sería requerido (como lo es el body en el caso con ).\n\nList:\nComprobará que tiene un atributo requerido  que debe ser un .\nComprobará que tiene un atributo requerido  que debe ser un .\nComprobará que tiene un atributo opcional , que debe ser un , si está presente.\nTodo esto también funcionaría para objetos JSON profundamente anidados.\n\nList:\nSistemas de documentación interactiva.\nSistemas de generación automática de código cliente, para muchos lenguajes.\n\nSolo tocamos los conceptos básicos, pero ya te haces una idea de cómo funciona todo.\n\nIntenta cambiar la línea con:\n\n...y observa cómo tu editor autocompleta los atributos y conoce sus tipos:\n\nPara un ejemplo más completo incluyendo más funcionalidades, ve al Tutorial - Guía del Usuario.\n\nAlerta de spoilers: el tutorial - guía del usuario incluye:",
      "title": "FastAPI - Resumen (Part 3)",
      "section_title": "Resumen",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 162,
      "chunk_id": 111,
      "part_number": 3
    },
    {
      "text": "# FastAPI - Resumen (Part 4)\n\nList:\nDeclaración de parámetros desde otros lugares diferentes como: , , campos de formulario y .\nCómo establecer restricciones de validación como maximum_length o .\nUn sistema de Inyección de Dependencias muy poderoso y fácil de usar.\nSeguridad y autenticación, incluyendo soporte para  con tokens JWT y autenticación HTTP Basic.\nTécnicas más avanzadas (pero igualmente fáciles) para declarar modelos JSON profundamente anidados (gracias a Pydantic).\nIntegración con  usando Strawberry y otros paquetes.\nMuchas funcionalidades extra (gracias a Starlette) como:\nWebSockets\npruebas extremadamente fáciles basadas en HTTPX y \n\nSesiones de Cookies\n\nList:\nWebSockets\npruebas extremadamente fáciles basadas en HTTPX y \n\nSesiones de Cookies",
      "title": "FastAPI - Resumen (Part 4)",
      "section_title": "Resumen",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 108,
      "chunk_id": 112,
      "part_number": 4
    },
    {
      "text": "# FastAPI - Rendimiento\n\nBenchmarks independientes de TechEmpower muestran aplicaciones  ejecutándose bajo Uvicorn como uno de los frameworks Python más rápidos disponibles, solo por debajo de Starlette y Uvicorn (usados internamente por FastAPI). (*)\n\nPara entender más sobre esto, ve la sección Benchmarks.",
      "title": "FastAPI - Rendimiento",
      "section_title": "Rendimiento",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 43,
      "chunk_id": 113
    },
    {
      "text": "# FastAPI - Dependencias\n\nFastAPI depende de Pydantic y Starlette.",
      "title": "FastAPI - Dependencias",
      "section_title": "Dependencias",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 10,
      "chunk_id": 114
    },
    {
      "text": "# FastAPI - Dependencias\n\nCuando instalas FastAPI con pip install \"fastapi[standard]\" viene con el grupo  de dependencias opcionales:\n\nList:\nemail-validator - para validación de correos electrónicos.\n\nUsadas por Starlette:\n\nList:\n- Requerido si deseas usar el TestClient.\n - Requerido si deseas usar la configuración de plantilla predeterminada.\npython-multipart - Requerido si deseas soportar  de forms, con request.form().\n\nUsadas por FastAPI / Starlette:\n\nList:\n- para el servidor que carga y sirve tu aplicación. Esto incluye uvicorn[standard], que incluye algunas dependencias (por ejemplo, ) necesarias para servir con alto rendimiento.\nfastapi-cli - para proporcionar el comando .",
      "title": "FastAPI - Dependencias",
      "section_title": "Dependencias",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 96,
      "chunk_id": 115
    },
    {
      "text": "# FastAPI - Sin Dependencias\n\nSi no deseas incluir las dependencias opcionales , puedes instalar con pip install fastapi en lugar de pip install \"fastapi[standard]\".",
      "title": "FastAPI - Sin Dependencias",
      "section_title": "Sin Dependencias",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 25,
      "chunk_id": 116
    },
    {
      "text": "# FastAPI - Dependencias Opcionales Adicionales\n\nExisten algunas dependencias adicionales que podrías querer instalar.\n\nDependencias opcionales adicionales de Pydantic:\n\nList:\npydantic-settings - para la gestión de configuraciones.\npydantic-extra-types - para tipos extra para ser usados con Pydantic.\n\nDependencias opcionales adicionales de FastAPI:\n\nList:\n- Requerido si deseas usar ORJSONResponse.\n - Requerido si deseas usar UJSONResponse.",
      "title": "FastAPI - Dependencias Opcionales Adicionales",
      "section_title": "Dependencias Opcionales Adicionales",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 55,
      "chunk_id": 117
    },
    {
      "text": "# FastAPI - Licencia\n\nEste proyecto tiene licencia bajo los términos de la licencia MIT.",
      "title": "FastAPI - Licencia",
      "section_title": "Licencia",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/es/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 15,
      "chunk_id": 118
    },
    {
      "text": "# FastAPI (Part 1)\n\nفریم‌ورک FastAPI، کارایی بالا، یادگیری آسان، کدنویسی سریع، آماده برای استفاده در محیط پروداکشن\n\n: https://fastapi.tiangolo.com\n\n: https://github.com/fastapi/fastapi\n\nFastAPI یک وب فریم‌ورک مدرن و سریع (با کارایی بالا) برای ایجاد APIهای متنوع (وب، وب‌سوکت و غبره) با زبان پایتون نسخه +۳.۶ است. این فریم‌ورک با رعایت کامل راهنمای نوع داده (Type Hint) ایجاد شده است.\n\nویژگی‌های کلیدی این فریم‌ورک عبارتند از:\n\nList:\n: کارایی بسیار بالا و قابل مقایسه با   و  (با تشکر از Starlette و Pydantic). یکی از سریع‌ترین فریم‌ورک‌های پایتونی موجود.\n\n\nکدنویسی سریع: افزایش ۲۰۰ تا ۳۰۰ درصدی سرعت توسعه قابلیت‌های جدید. *\n\n: کاهش ۴۰ درصدی خطاهای انسانی (برنامه‌نویسی). *\n: پشتیبانی فوق‌العاده در محیط‌های توسعه یکپارچه (IDE).  در همه بخش‌های کد. کاهش زمان رفع باگ.\n: طراحی شده برای یادگیری و استفاده آسان. کاهش زمان مورد نیاز برای مراجعه به مستندات.\n: کاهش تکرار در کد. چندین قابلیت برای هر پارامتر (منظور پارامترهای ورودی تابع هندلر می‌باشد، به بخش  در همین صفحه مراجعه شود). باگ کمتر.\n: ایجاد کدی آماده برای استفاده در محیط پروداکشن و تولید خودکار مستندات تعاملی\nمبتنی بر استانداردها: مبتنی بر (و منطبق با) استانداردهای متن باز مربوط به API:  (سوگر سابق) و JSON Schema.",
      "title": "FastAPI (Part 1)",
      "section_title": "FastAPI",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 1,
      "type": "section_part",
      "word_count": 197,
      "chunk_id": 119,
      "part_number": 1
    },
    {
      "text": "# FastAPI (Part 2)\n\n: کارایی بسیار بالا و قابل مقایسه با   و  (با تشکر از Starlette و Pydantic). یکی از سریع‌ترین فریم‌ورک‌های پایتونی موجود.\n\nکدنویسی سریع: افزایش ۲۰۰ تا ۳۰۰ درصدی سرعت توسعه قابلیت‌های جدید. *\n\n* تخمین‌ها بر اساس تست‌های انجام شده در یک تیم توسعه داخلی که مشغول ایجاد برنامه‌های کاربردی واقعی بودند صورت گرفته است.",
      "title": "FastAPI (Part 2)",
      "section_title": "FastAPI",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 1,
      "type": "section_part",
      "word_count": 59,
      "chunk_id": 120,
      "part_number": 2
    },
    {
      "text": "# FastAPI - , فریم‌ورکی معادل FastAPI برای کار با واسط خط فرمان\n\nاگر در حال ساختن برنامه‌ای برای استفاده در  (به جای استفاده در وب) هستید، می‌توانید از . استفاده کنید.\n\nدوقلوی کوچکتر FastAPI است و قرار است معادلی برای FastAPI در برنامه‌های CLI باشد.️ 🚀",
      "title": "FastAPI - , فریم‌ورکی معادل FastAPI برای کار با واسط خط فرمان",
      "section_title": ", فریم‌ورکی معادل FastAPI برای کار با واسط خط فرمان",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 47,
      "chunk_id": 121
    },
    {
      "text": "# FastAPI - نیازمندی‌ها\n\nFastAPI مبتنی بر ابزارهای قدرتمند زیر است:\n\nList:\nفریم‌ورک  برای بخش وب.\nکتابخانه  برای بخش داده‌.",
      "title": "FastAPI - نیازمندی‌ها",
      "section_title": "نیازمندی‌ها",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 20,
      "chunk_id": 122
    },
    {
      "text": "# FastAPI - نصب\n\nنصب یک سرور پروداکشن نظیر  یا  نیز جزء نیازمندی‌هاست.\n\nCode example:\npipinstall\"uvicorn[standard]\"",
      "title": "FastAPI - نصب",
      "section_title": "نصب",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 16,
      "chunk_id": 123
    },
    {
      "text": "# FastAPI - ایجاد کنید\n\nList:\nفایلی به نام  با محتوای زیر ایجاد کنید:\n\nاگر در کدتان از  /  استفاده می‌کنید، از  برای تعریف تابع خود استفاده کنید:\n\nاگر با async / await آشنا نیستید، به بخش \"عجله‌ دارید?\" در صفحه درباره  و  در مستندات مراجعه کنید.",
      "title": "FastAPI - ایجاد کنید",
      "section_title": "ایجاد کنید",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 47,
      "chunk_id": 124
    },
    {
      "text": "# FastAPI - اجرا کنید\n\nبا استفاده از دستور زیر سرور را اجرا کنید:\n\nCode example:\nuvicornmain:app--reload\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n\nدستور uvicorn main:app شامل موارد زیر است:\n\nList:\n: فایل  (ماژول پایتون ایجاد شده).\n: شیء ایجاد شده در فایل  در خط app = FastAPI().\n: ریستارت کردن سرور با تغییر کد. تنها در هنگام توسعه از این گزینه استفاده شود..",
      "title": "FastAPI - اجرا کنید",
      "section_title": "اجرا کنید",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 86,
      "chunk_id": 125
    },
    {
      "text": "# FastAPI - بررسی کنید\n\nآدرس http://127.0.0.1:8000/items/5?q=somequery را در مرورگر خود باز کنید.\n\nپاسخ JSON زیر را مشاهده خواهید کرد:\n\nتا اینجا شما APIای ساختید که:\n\nList:\nدرخواست‌های HTTP به   و /items/{item_id} را دریافت می‌کند.\nهردو    (یا HTTP )  را پشتیبانی می‌کند.\n /items/{item_id} شامل  پارامتر مسیر  از نوع  است.\n /items/{item_id} شامل  پارامتر پرسمان اختیاری  از نوع  است.",
      "title": "FastAPI - بررسی کنید",
      "section_title": "بررسی کنید",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 57,
      "chunk_id": 126
    },
    {
      "text": "# FastAPI - مستندات API تعاملی\n\nحال به آدرس  http://127.0.0.1:8000/docs بروید.\n\nمستندات API تعاملی (ایجاد شده به کمک Swagger UI) را مشاهده خواهید کرد:",
      "title": "FastAPI - مستندات API تعاملی",
      "section_title": "مستندات API تعاملی",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 24,
      "chunk_id": 127
    },
    {
      "text": "# FastAPI - مستندات API جایگزین\n\nحال به آدرس  http://127.0.0.1:8000/redoc بروید.\n\nمستندات خودکار دیگری را مشاهده خواهید کرد که به کمک  ایجاد می‌شود:",
      "title": "FastAPI - مستندات API جایگزین",
      "section_title": "مستندات API جایگزین",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 23,
      "chunk_id": 128
    },
    {
      "text": "# FastAPI - تغییر مثال\n\nحال فایل  را مطابق زیر ویرایش کنید تا بتوانید  یک درخواست  را دریافت کنید.\n\nبه کمک Pydantic بدنه درخواست را با  استاندارد پایتون تعریف کنید.\n\nCode example:\nupdate_item   \n     \"item_name\"\n\nسرور به صورت خودکار ری‌استارت می‌شود (زیرا پیشتر از گزینه  در دستور    استفاده کردیم).",
      "title": "FastAPI - تغییر مثال",
      "section_title": "تغییر مثال",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 48,
      "chunk_id": 129
    },
    {
      "text": "# FastAPI - تغییر مستندات API تعاملی\n\nمجددا به آدرس  http://127.0.0.1:8000/docs بروید.\n\nList:\nمستندات API تعاملی به صورت خودکار به‌روز شده است و شامل بدنه تعریف شده در مرحله قبل است:\n\nList:\nروی دکمه \"Try it out\" کلیک کنید، اکنون می‌توانید پارامترهای مورد نیاز هر API را مشخص کرده و به صورت مستقیم با آنها تعامل کنید:\n\nList:\nسپس روی دکمه \"Execute\" کلیک کنید، خواهید دید که واسط کاربری با APIهای تعریف شده ارتباط برقرار کرده، پارامترهای مورد نیاز را به آن‌ها ارسال می‌کند، سپس نتایج را دریافت کرده و در صفحه نشان می‌دهد:",
      "title": "FastAPI - تغییر مستندات API تعاملی",
      "section_title": "تغییر مستندات API تعاملی",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 94,
      "chunk_id": 130
    },
    {
      "text": "# FastAPI - تغییر مستندات API جایگزین\n\nحال به آدرس http://127.0.0.1:8000/redoc بروید.\n\nList:\nخواهید دید که مستندات جایگزین نیز به‌روزرسانی شده و شامل پارامتر پرسمان و بدنه تعریف شده می‌باشد:",
      "title": "FastAPI - تغییر مستندات API جایگزین",
      "section_title": "تغییر مستندات API جایگزین",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 30,
      "chunk_id": 131
    },
    {
      "text": "# FastAPI - خلاصه (Part 1)\n\nبه طور خلاصه شما  انواع پارامترها، بدنه و غیره را به عنوان پارامترهای ورودی تابع خود تعریف می‌کنید.\n\nاین کار را با استفاده از انواع استاندارد و مدرن موجود در پایتون انجام می‌دهید.\n\nنیازی به یادگیری  جدید یا متدها و کلاس‌های یک کتابخانه بخصوص و غیره نیست.\n\nبه عنوان مثال برای یک پارامتر از نوع :\n\nیا برای یک مدل پیچیده‌تر مثل :\n\n...و با همین اعلان تمامی قابلیت‌های زیر در دسترس قرار می‌گیرد:\n\nList:\nپشتیبانی ویرایشگر متنی شامل:\n\nبررسی انواع داده.\n\n\nاعتبارسنجی داده:\nخطاهای خودکار و مشخص در هنگام نامعتبر بودن داده.\nاعتبارسنجی، حتی برای اشیاء JSON تو در تو.\n\n\n داده ورودی: که از شبکه رسیده به انواع و داد‌ه‌ پایتونی. این داده‌ شامل:\n\nپارامترهای مسیر.\nپارامترهای پرسمان.\n.\nسرآیند‌ها (هدرها).\n.\n.\n\n\n داده خروجی: تبدیل از انواع و داده‌ پایتون به داده شبکه  (مانند JSON):\nتبدیل انواع داده پایتونی (, , , ,  و غیره).\nاشیاء .\nاشیاء .\nqمدل‌های پایگاه‌داده.\nو موارد بیشمار دیگر.\n\n\nدو مدل مستند API تعاملی خودکار :\nSwagger UI.\n\nList:\nخطاهای خودکار و مشخص در هنگام نامعتبر بودن داده.\nاعتبارسنجی، حتی برای اشیاء JSON تو در تو.\n\nList:\nپارامترهای مسیر.\nپارامترهای پرسمان.\n.\nسرآیند‌ها (هدرها).\n.\n.\n\nList:\nتبدیل انواع داده پایتونی (, , , ,  و غیره).\nاشیاء .\nاشیاء .\nqمدل‌های پایگاه‌داده.\nو موارد بیشمار دیگر.",
      "title": "FastAPI - خلاصه (Part 1)",
      "section_title": "خلاصه",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 221,
      "chunk_id": 132,
      "part_number": 1
    },
    {
      "text": "# FastAPI - خلاصه (Part 2)\n\nبه مثال قبلی باز می‌گردیم، در این مثال  موارد زیر را انجام می‌دهد:\n\nList:\nاعتبارسنجی اینکه پارامتر  در مسیر درخواست‌های  و  موجود است.\nاعتبارسنجی اینکه پارامتر  در درخواست‌های  و  از نوع  است.\nاگر غیر از این موارد باشد، سرویس‌گیرنده خطای مفید و مشخصی دریافت خواهد کرد.\n\n\nبررسی وجود پارامتر پرسمان اختیاری  (مانند http://127.0.0.1:8000/items/foo?q=somequery) در درخواست‌های .\nاز آنجا که پارامتر  با   مقداردهی شده است، این پارامتر اختیاری است.\nاگر از مقدار اولیه  استفاده نکنیم، این پارامتر الزامی خواهد بود (همانند بدنه درخواست در درخواست ).\n\n\nبرای درخواست‌های  به آدرس /items/{item_id}، بدنه درخواست باید از نوع JSON تعریف شده باشد:\nبررسی اینکه بدنه شامل فیلدی با نام  و از نوع  است.\nبررسی اینکه بدنه شامل فیلدی با نام  و از نوع  است.\nبررسی اینکه بدنه شامل فیلدی اختیاری با نام  است، که در صورت وجود باید از نوع  باشد.\nتمامی این موارد برای اشیاء JSON در هر عمقی قابل بررسی می‌باشد.\n\n\nتبدیل از/به JSON به صورت خودکار.\nمستندسازی همه چیز با استفاده از OpenAPI، که می‌توان از آن برای موارد زیر استفاده کرد:\nسیستم مستندات تعاملی.\nتولید خودکار کد سرویس‌گیرنده‌ در زبان‌های برنامه‌نویسی بیشمار.\n\n\nفراهم سازی ۲ مستند تعاملی مبتنی بر وب به صورت پیش‌فرض.",
      "title": "FastAPI - خلاصه (Part 2)",
      "section_title": "خلاصه",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 200,
      "chunk_id": 133,
      "part_number": 2
    },
    {
      "text": "# FastAPI - خلاصه (Part 3)\n\nList:\nاگر غیر از این موارد باشد، سرویس‌گیرنده خطای مفید و مشخصی دریافت خواهد کرد.\n\nList:\nاز آنجا که پارامتر  با   مقداردهی شده است، این پارامتر اختیاری است.\nاگر از مقدار اولیه  استفاده نکنیم، این پارامتر الزامی خواهد بود (همانند بدنه درخواست در درخواست ).\n\nList:\nبررسی اینکه بدنه شامل فیلدی با نام  و از نوع  است.\nبررسی اینکه بدنه شامل فیلدی با نام  و از نوع  است.\nبررسی اینکه بدنه شامل فیلدی اختیاری با نام  است، که در صورت وجود باید از نوع  باشد.\nتمامی این موارد برای اشیاء JSON در هر عمقی قابل بررسی می‌باشد.\n\nList:\nسیستم مستندات تعاملی.\nتولید خودکار کد سرویس‌گیرنده‌ در زبان‌های برنامه‌نویسی بیشمار.\n\nموارد ذکر شده تنها پاره‌ای از ویژگی‌های بیشمار FastAPI است اما ایده‌ای کلی از طرز کار آن در اختیار قرار می‌دهد.\n\nخط زیر را به این صورت تغییر دهید:\n\nدر حین تایپ کردن توجه کنید که چگونه ویرایش‌گر، ویژگی‌های کلاس   را تشخیص داده و به تکمیل خودکار آنها کمک می‌کند:\n\nبرای مشاهده مثال‌های کامل‌تر که شامل قابلیت‌های بیشتری از FastAPI باشد به بخش آموزش - راهنمای کاربر مراجعه کنید.\n\nهشدار اسپویل: بخش آموزش - راهنمای کاربر شامل موارد زیر است:",
      "title": "FastAPI - خلاصه (Part 3)",
      "section_title": "خلاصه",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 195,
      "chunk_id": 134,
      "part_number": 3
    },
    {
      "text": "# FastAPI - خلاصه (Part 4)\n\nList:\nاعلان پارامترهای موجود در بخش‌های دیگر درخواست، شامل: سرآیند‌ (هدر)ها، ، فیلد‌های فرم و .\nچگونگی تنظیم محدودیت‌های اعتبارسنجی به عنوان مثال maximum_length یا .\nسیستم Dependency Injection قوی و کاربردی.\nامنیت و تایید هویت, شامل پشتیبانی از  مبتنی بر JWT tokens و HTTP Basic.\nتکنیک پیشرفته برای تعریف مدل‌های چند سطحی JSON (بر اساس Pydantic).\nقابلیت‌های اضافی دیگر (بر اساس Starlette) شامل:\n\n\nتست‌های خودکار آسان مبتنی بر HTTPX و \n\nCookie Sessions\nو موارد بیشمار دیگر.\n\nList:\nتست‌های خودکار آسان مبتنی بر HTTPX و \n\nCookie Sessions\nو موارد بیشمار دیگر.",
      "title": "FastAPI - خلاصه (Part 4)",
      "section_title": "خلاصه",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 97,
      "chunk_id": 135,
      "part_number": 4
    },
    {
      "text": "# FastAPI - کارایی\n\nمعیار (بنچمارک‌)های مستقل TechEmpower حاکی از آن است که برنامه‌های  که تحت Uvicorn اجرا می‌شود، یکی از سریع‌ترین فریم‌ورک‌های مبتنی بر پایتون، است که کمی ضعیف‌تر از Starlette و Uvicorn عمل می‌کند (فریم‌ورک و سروری که FastAPI بر اساس آنها ایجاد شده است) (*)\n\nبرای درک بهتری از این موضوع به بخش بنچ‌مارک‌ها مراجعه کنید.",
      "title": "FastAPI - کارایی",
      "section_title": "کارایی",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 59,
      "chunk_id": 136
    },
    {
      "text": "# FastAPI - نیازمندی‌های اختیاری\n\nاستفاده شده توسط Pydantic:\n\nList:\nemail-validator - برای اعتبارسنجی آدرس‌های ایمیل.\n\nاستفاده شده توسط Starlette:\n\nList:\n- در صورتی که می‌خواهید از TestClient استفاده کنید.\n - در صورتی که می‌خواهید از FileResponse و StaticFiles استفاده کنید.\n - در صورتی که بخواهید از پیکربندی پیش‌فرض برای قالب‌ها استفاده کنید.\npython-multipart - در صورتی که بخواهید با استفاده از request.form() از قابلیت \"تجزیه (parse)\" فرم استفاده کنید.\nitsdangerous - در صورتی که بخواید از SessionMiddleware پشتیبانی کنید.\n - برای پشتیبانی SchemaGenerator در Starlet (به احتمال زیاد برای کار کردن با FastAPI به آن نیازی پیدا نمی‌کنید).\n - در صورتی که از  GraphQLApp پشتیبانی می‌کنید.\n\nاستفاده شده توسط FastAPI / Starlette:\n\nList:\n- برای سرور اجرا کننده برنامه وب.\n - در صورتی که بخواهید از ORJSONResponse استفاده کنید.\n - در صورتی که بخواهید از UJSONResponse استفاده کنید.\n\nمی‌توان همه این موارد را با استفاده از دستور pip install fastapi[all]. به صورت یکجا نصب کرد.",
      "title": "FastAPI - نیازمندی‌های اختیاری",
      "section_title": "نیازمندی‌های اختیاری",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 156,
      "chunk_id": 137
    },
    {
      "text": "# FastAPI - لایسنس\n\nاین پروژه مشمول قوانین و مقررات لایسنس MIT است.",
      "title": "FastAPI - لایسنس",
      "section_title": "لایسنس",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fa/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 13,
      "chunk_id": 138
    },
    {
      "text": "# FastAPI (Part 1)\n\nFramework FastAPI, haute performance, facile à apprendre, rapide à coder, prêt pour la production\n\nDocumentation : https://fastapi.tiangolo.com\n\nCode Source : https://github.com/fastapi/fastapi\n\nFastAPI est un framework web moderne et rapide (haute performance) pour la création d'API avec Python, basé sur les annotations de type standard de Python.\n\nLes principales fonctionnalités sont :",
      "title": "FastAPI (Part 1)",
      "section_title": "FastAPI",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 1,
      "type": "section_part",
      "word_count": 55,
      "chunk_id": 139,
      "part_number": 1
    },
    {
      "text": "# FastAPI (Part 2)\n\nList:\n: De très hautes performances, au niveau de  et  (grâce à Starlette et Pydantic). L'un des frameworks Python les plus rapides.\nRapide à coder : Augmente la vitesse de développement des fonctionnalités d'environ 200 % à 300 %. *\nMoins de bugs : Réduit d'environ 40 % les erreurs induites par le développeur. *\n : Excellente compatibilité avec les IDE. Complétion complète. Moins de temps passé à déboguer.\n : Conçu pour être facile à utiliser et à apprendre. Moins de temps passé à lire la documentation.\n : Diminue la duplication de code. De nombreuses fonctionnalités liées à la déclaration de chaque paramètre. Moins de bugs.\n : Obtenez un code prêt pour la production. Avec une documentation interactive automatique.\nBasé sur des normes : Basé sur (et entièrement compatible avec) les standards ouverts pour les APIs :  (précédemment connu sous le nom de Swagger) et JSON Schema.\n\n* estimation basée sur des tests d'une équipe de développement interne, construisant des applications de production.",
      "title": "FastAPI (Part 2)",
      "section_title": "FastAPI",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 1,
      "type": "section_part",
      "word_count": 167,
      "chunk_id": 140,
      "part_number": 2
    },
    {
      "text": "# FastAPI - Opinions (Part 1)\n\n\"[...] J'utilise beaucoup  ces derniers temps. [...] Je prévois de l'utiliser dans mon équipe pour tous les services de ML chez Microsoft. Certains d'entre eux seront intégrés dans le coeur de  et dans certains produits .\"\n\n\"Nous avons adopté la bibliothèque  pour créer un serveur  qui peut être interrogé pour obtenir des prédictions. [pour Ludwig]\"\n\n\" a le plaisir d'annoncer la sortie en open-source de notre framework d'orchestration de gestion de crise :  ! [construit avec ]\"\n\n\"Je suis très enthousiaste à propos de . C'est un bonheur !\"\n\n\"Honnêtement, ce que vous avez construit a l'air super solide et élégant. A bien des égards, c'est comme ça que je voulais que  soit - c'est vraiment inspirant de voir quelqu'un construire ça.\"\n\n\"Si vous cherchez à apprendre un framework moderne pour créer des APIs REST, regardez  [...] C'est rapide, facile à utiliser et à apprendre [...]\"\n\n\"Nous sommes passés à  pour nos  [...] Je pense que vous l'aimerez [...]\"",
      "title": "FastAPI - Opinions (Part 1)",
      "section_title": "Opinions",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "section_part",
      "word_count": 165,
      "chunk_id": 141,
      "part_number": 1
    },
    {
      "text": "# FastAPI - Opinions (Part 2)\n\n\"Si quelqu'un cherche à construire une API Python de production, je recommande vivement . Il est bien conçu, simple à utiliser et très évolutif. Il est devenu un composant clé dans notre stratégie de développement API first et il est à l'origine de nombreux automatismes et services tels que notre ingénieur virtuel TAC.\"",
      "title": "FastAPI - Opinions (Part 2)",
      "section_title": "Opinions",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "section_part",
      "word_count": 59,
      "chunk_id": 142,
      "part_number": 2
    },
    {
      "text": "# FastAPI - , le FastAPI des\n\nSi vous souhaitez construire une application  utilisable dans un terminal au lieu d'une API web, regardez .\n\nest le petit frère de FastAPI. Et il est destiné à être le FastAPI des . ⌨️ 🚀",
      "title": "FastAPI - , le FastAPI des",
      "section_title": ", le FastAPI des",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 42,
      "chunk_id": 143
    },
    {
      "text": "# FastAPI - Prérequis\n\nFastAPI repose sur les épaules de géants :\n\nList:\npour les parties web.\n pour les parties données.",
      "title": "FastAPI - Prérequis",
      "section_title": "Prérequis",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 21,
      "chunk_id": 144
    },
    {
      "text": "# FastAPI - Installation\n\nVous aurez également besoin d'un serveur ASGI pour la production tel que  ou .\n\nCode example:\npipinstall\"uvicorn[standard]\"",
      "title": "FastAPI - Installation",
      "section_title": "Installation",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 21,
      "chunk_id": 145
    },
    {
      "text": "# FastAPI - Créez\n\nList:\nCréez un fichier  avec :\n\nSi votre code utilise  / , utilisez  :\n\nSi vous n'êtes pas familier avec cette notion, consultez la section \"Vous êtes pressés ?\" à propos de  et  dans la documentation.",
      "title": "FastAPI - Créez",
      "section_title": "Créez",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 40,
      "chunk_id": 146
    },
    {
      "text": "# FastAPI - Lancez\n\nLancez le serveur avec :\n\nCode example:\nuvicornmain:app--reload\nINFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)\nINFO:     Started reloader process [28720]\nINFO:     Started server process [28722]\nINFO:     Waiting for application startup.\nINFO:     Application startup complete.\n\nLa commande uvicorn main:app fait référence à :\n\nList:\n: le fichier  (le \"module\" Python).\n : l'objet créé à l'intérieur de  avec la ligne app = FastAPI().\n : fait redémarrer le serveur après des changements de code. À n'utiliser que pour le développement.",
      "title": "FastAPI - Lancez",
      "section_title": "Lancez",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 83,
      "chunk_id": 147
    },
    {
      "text": "# FastAPI - Vérifiez\n\nOuvrez votre navigateur à l'adresse http://127.0.0.1:8000/items/5?q=somequery.\n\nVous obtenez alors cette réponse  :\n\nVous venez de créer une API qui :\n\nList:\nReçoit les requêtes HTTP pour les   et /items/{item_id}.\nLes deux  acceptent des opérations  (également connu sous le nom de  HTTP).\nLe  /items/{item_id} a un    qui doit être un .\nLe  /items/{item_id} a un paramètre de requête optionnel  de type .",
      "title": "FastAPI - Vérifiez",
      "section_title": "Vérifiez",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 65,
      "chunk_id": 148
    },
    {
      "text": "# FastAPI - Documentation API interactive\n\nMaintenant, rendez-vous sur http://127.0.0.1:8000/docs.\n\nVous verrez la documentation interactive automatique de l'API (fournie par Swagger UI) :",
      "title": "FastAPI - Documentation API interactive",
      "section_title": "Documentation API interactive",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 23,
      "chunk_id": 149
    },
    {
      "text": "# FastAPI - Documentation API alternative\n\nEt maintenant, rendez-vous sur http://127.0.0.1:8000/redoc.\n\nVous verrez la documentation interactive automatique de l'API (fournie par ) :",
      "title": "FastAPI - Documentation API alternative",
      "section_title": "Documentation API alternative",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 23,
      "chunk_id": 150
    },
    {
      "text": "# FastAPI - Exemple plus poussé\n\nMaintenant, modifiez le fichier  pour recevoir  d'une requête .\n\nDéclarez ce corps en utilisant les types Python standards, grâce à Pydantic.\n\nCode example:\nupdate_item   \n     \"item_name\"\n\nLe serveur se recharge normalement automatiquement (car vous avez pensé à  dans la commande  ci-dessus).",
      "title": "FastAPI - Exemple plus poussé",
      "section_title": "Exemple plus poussé",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 46,
      "chunk_id": 151
    },
    {
      "text": "# FastAPI - Plus loin avec la documentation API interactive\n\nMaintenant, rendez-vous sur http://127.0.0.1:8000/docs.\n\nList:\nLa documentation interactive de l'API sera automatiquement mise à jour, y compris le nouveau corps de la requête :\n\nList:\nCliquez sur le bouton \"Try it out\", il vous permet de renseigner les paramètres et d'interagir directement avec l'API :\n\nList:\nCliquez ensuite sur le bouton \"Execute\", l'interface utilisateur communiquera avec votre API, enverra les paramètres, obtiendra les résultats et les affichera à l'écran :",
      "title": "FastAPI - Plus loin avec la documentation API interactive",
      "section_title": "Plus loin avec la documentation API interactive",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 80,
      "chunk_id": 152
    },
    {
      "text": "# FastAPI - Plus loin avec la documentation API alternative\n\nEt maintenant, rendez-vous sur http://127.0.0.1:8000/redoc.\n\nList:\nLa documentation alternative reflétera également le nouveau paramètre de requête et le nouveau corps :",
      "title": "FastAPI - Plus loin avec la documentation API alternative",
      "section_title": "Plus loin avec la documentation API alternative",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "complete_section",
      "word_count": 31,
      "chunk_id": 153
    },
    {
      "text": "# FastAPI - En résumé (Part 1)\n\nEn résumé, vous déclarez  les types de paramètres,   de la requête, etc. en tant que paramètres de fonction.\n\nVous faites cela avec les types Python standard modernes.\n\nVous n'avez pas à apprendre une nouvelle syntaxe, les méthodes ou les classes d'une bibliothèque spécifique, etc.\n\nPar exemple, pour un :\n\nou pour un modèle  plus complexe :\n\n... et avec cette déclaration unique, vous obtenez :\n\nList:\nUne assistance dans votre IDE, notamment :\nla complétion.\nla vérification des types.\n\n\nLa validation des données :\ndes erreurs automatiques et claires lorsque les données ne sont pas valides.\nune validation même pour les objets  profondément imbriqués.\n\n\nUne conversion des données d'entrée : venant du réseau et allant vers les données et types de Python, permettant de lire :\nle .\nles paramètres du chemin.\nles paramètres de la requête.\nles cookies.\nles en-têtes.\nles formulaires.\nles fichiers.\n\n\nLa conversion des données de sortie : conversion des données et types Python en données réseau (au format ), permettant de convertir :\nles types Python (, , , , , etc).\nles objets .\nles objets .\nles modèles de base de données.\n... et beaucoup plus.",
      "title": "FastAPI - En résumé (Part 1)",
      "section_title": "En résumé",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 200,
      "chunk_id": 154,
      "part_number": 1
    },
    {
      "text": "# FastAPI - En résumé (Part 2)\n\n\nLa documentation API interactive automatique, avec 2 interfaces utilisateur au choix :\nSwagger UI.\n\nList:\nla complétion.\nla vérification des types.\n\nList:\ndes erreurs automatiques et claires lorsque les données ne sont pas valides.\nune validation même pour les objets  profondément imbriqués.\n\nList:\nle .\nles paramètres du chemin.\nles paramètres de la requête.\nles cookies.\nles en-têtes.\nles formulaires.\nles fichiers.\n\nList:\nles types Python (, , , , , etc).\nles objets .\nles objets .\nles modèles de base de données.\n... et beaucoup plus.\n\nPour revenir à l'exemple de code précédent,  permet de :\n\nList:\nValider que  existe dans le chemin des requêtes  et .\nValider que  est de type  pour les requêtes  et .\nSi ce n'est pas le cas, le client voit une erreur utile et claire.\n\n\nVérifier qu'il existe un paramètre de requête facultatif nommé  (comme dans http://127.0.0.1:8000/items/foo?q=somequery) pour les requêtes .\nPuisque le paramètre  est déclaré avec , il est facultatif.\nSans le , il serait nécessaire (comme l'est  de la requête dans le cas du ).",
      "title": "FastAPI - En résumé (Part 2)",
      "section_title": "En résumé",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 182,
      "chunk_id": 155,
      "part_number": 2
    },
    {
      "text": "# FastAPI - En résumé (Part 3)\n\n\nPour les requêtes  vers /items/{item_id}, de lire   en  :\nVérifier qu'il a un attribut obligatoire  qui devrait être un .\nVérifier qu'il a un attribut obligatoire  qui doit être un .\nVérifier qu'il a un attribut facultatif , qui devrait être un , s'il est présent.\nTout cela fonctionnerait également pour les objets  profondément imbriqués.\n\n\nConvertir de et vers  automatiquement.\nDocumenter tout avec OpenAPI, qui peut être utilisé par :\nLes systèmes de documentation interactifs.\nLes systèmes de génération automatique de code client, pour de nombreuses langues.\n\n\nFournir directement 2 interfaces web de documentation interactive.\n\nList:\nSi ce n'est pas le cas, le client voit une erreur utile et claire.\n\nList:\nPuisque le paramètre  est déclaré avec , il est facultatif.\nSans le , il serait nécessaire (comme l'est  de la requête dans le cas du ).\n\nList:\nVérifier qu'il a un attribut obligatoire  qui devrait être un .\nVérifier qu'il a un attribut obligatoire  qui doit être un .\nVérifier qu'il a un attribut facultatif , qui devrait être un , s'il est présent.\nTout cela fonctionnerait également pour les objets  profondément imbriqués.",
      "title": "FastAPI - En résumé (Part 3)",
      "section_title": "En résumé",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 191,
      "chunk_id": 156,
      "part_number": 3
    },
    {
      "text": "# FastAPI - En résumé (Part 4)\n\nList:\nLes systèmes de documentation interactifs.\nLes systèmes de génération automatique de code client, pour de nombreuses langues.\n\nNous n'avons fait qu'effleurer la surface, mais vous avez déjà une idée de la façon dont tout cela fonctionne.\n\nEssayez de changer la ligne contenant :\n\n... et voyez comment votre éditeur complétera automatiquement les attributs et connaîtra leurs types :\n\nPour un exemple plus complet comprenant plus de fonctionnalités, voir le Tutoriel - Guide utilisateur.\n\nSpoiler alert : le tutoriel - guide utilisateur inclut :",
      "title": "FastAPI - En résumé (Part 4)",
      "section_title": "En résumé",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 91,
      "chunk_id": 157,
      "part_number": 4
    },
    {
      "text": "# FastAPI - En résumé (Part 5)\n\nList:\nDéclaration de paramètres provenant d'autres endroits différents comme : ., , champs de formulaire et .\nL'utilisation de contraintes de validation comme maximum_length ou .\nUn système d'injection de dépendance  très puissant et facile à utiliser .\nSécurité et authentification, y compris la prise en charge de  avec les jetons  et l'authentification HTTP Basic.\nDes techniques plus avancées (mais tout aussi faciles) pour déclarer les modèles  profondément imbriqués (grâce à Pydantic).\nIntégration de  avec Strawberry et d'autres bibliothèques.\nD'obtenir de nombreuses fonctionnalités supplémentaires (grâce à  Starlette) comme :\nWebSockets\nde tester le code très facilement avec  et \n\nCookie Sessions\n... et plus encore.\n\nList:\nWebSockets\nde tester le code très facilement avec  et \n\nCookie Sessions\n... et plus encore.",
      "title": "FastAPI - En résumé (Part 5)",
      "section_title": "En résumé",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 3,
      "type": "section_part",
      "word_count": 127,
      "chunk_id": 158,
      "part_number": 5
    },
    {
      "text": "# FastAPI - Performance\n\nLes benchmarks TechEmpower indépendants montrent que les applications  s'exécutant sous Uvicorn sont  parmi les frameworks existants en Python les plus rapides , juste derrière Starlette et Uvicorn (utilisés en interne par FastAPI). (*)\n\nPour en savoir plus, consultez la section Benchmarks.",
      "title": "FastAPI - Performance",
      "section_title": "Performance",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 45,
      "chunk_id": 159
    },
    {
      "text": "# FastAPI - Dépendances facultatives\n\nUtilisées par Pydantic:\n\nList:\nemail-validator - pour la validation des adresses email.\n\nUtilisées par Starlette :\n\nList:\n- Obligatoire si vous souhaitez utiliser TestClient.\n - Obligatoire si vous souhaitez utiliser la configuration de template par défaut.\npython-multipart - Obligatoire si vous souhaitez supporter le \"décodage\" de formulaire avec request.form().\nitsdangerous - Obligatoire pour la prise en charge de SessionMiddleware.\n - Obligatoire pour le support SchemaGenerator de Starlette (vous n'en avez probablement pas besoin avec FastAPI).\n\nUtilisées par FastAPI / Starlette :\n\nList:\n- Pour le serveur qui charge et sert votre application.\n - Obligatoire si vous voulez utiliser ORJSONResponse.\n - Obligatoire si vous souhaitez utiliser UJSONResponse.\n\nVous pouvez tout installer avec pip install fastapi[all].",
      "title": "FastAPI - Dépendances facultatives",
      "section_title": "Dépendances facultatives",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 119,
      "chunk_id": 160
    },
    {
      "text": "# FastAPI - Licence\n\nCe projet est soumis aux termes de la licence MIT.",
      "title": "FastAPI - Licence",
      "section_title": "Licence",
      "page_title": "FastAPI",
      "url": "https://fastapi.tiangolo.com/fr/",
      "domain": "fastapi.tiangolo.com",
      "level": 2,
      "type": "complete_section",
      "word_count": 14,
      "chunk_id": 161
    }
  ]
}